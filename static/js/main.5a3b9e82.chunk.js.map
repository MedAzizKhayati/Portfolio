{"version":3,"sources":["components/Footer.js","projects/Project.js","projects/PathFinder.js","components/TwoCanvas.js","components/ProjectCard.js","projects/PerlinNoise.js","projects/OrbitSim.js","projects/Snake.js","projects/Sort.js","projects/RayCasting.js","projects/DoublePendulum.js","projects/ElasticCollisions.js","data/projects.js","components/ProjectsHandler.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Project","two","this","width","height","renderer","domElement","addEventListener","e","onMouseMove","onMouseDown","onMouseUp","mousePos","Anchor","document","querySelector","changeState","intervalFunction","init","update","bind","mx","clientX","getBoundingClientRect","left","my","clientY","top","set","interval","setInterval","clearInterval","text","Two","Text","size","add","PathFinder","clear","start","end","state","algorithm","grid","algorithmState","draw","gridHeight","gridWidth","lineGroup","Group","children","length","i","push","line","Line","stroke","code","greedyBestFirstSearch","recursiveDivision","noiseGrid","depthFirstSearchMaze","makeRectangle","Math","floor","x","y","node","min","max","translation","rect","makeRectangleRelativeToMouse","getIndexesOfRectangle","remove","fill","tmp","currentNode","getSurroundingIndexes","neighbours","forEach","coord","parentNode","distance","calculateDistanceToEnd","distanceTo","closedList","openList","getNeighbours","sort","a","b","current","shift","currentPathNode","random","areas","horizontal","vertical","condition","makeGridRect","noSpace","area","pop","leftLimit","rightLimit","topLimit","bottomLimit","rand","tmpRect","xx","yy","isAdjacentToOtherNodes","array","j","temp","shuffleArray","lastAdjecentNode","stack","getNeighbourForDepthFirstSearch","element","noise","Noise","simplex2","TwoCanvas","type","props","Types","canvas","project","maximized","style","background","play","pause","parentElement","removeChild","ref","nodeElement","appendChild","React","Component","ProjectCard","cssClass","webgl","id","onClick","Array","map","title","gameInfoStyle","description","Object","keys","tips","key","display","alignItems","PerlinNoise","position","Vector","radius","noiseLayer","blob","Path","noStroke","vertices","angle","PI","cos","sin","perlin3","multiplyScalar","addSelf","Planet","mass","orbitSim","sandbox","twoObject","Circle","Moon","velocity","planets","acceleration","trajectory","collided","planet","ab","sub","pow","removeMoon","unbind","clone","orbit","noFill","OrbitSim","spawnMoon","mouse","moons","ui","alignment","value","moon","index","indexOf","splice","tempPosition","tempMoon","getMoonMouseVelocity","group","powerLine","makeLine","futurePositions","rgb","makeGroup","Snake","highestScore","moveSnake","food","makeRoundedRectangle","SpawnFood","coords","vels","body","square","currentScore","makeText","maxScore","justChanged","elongate","died","respawn","copy","Sort","justStarted","rectWidth","frameCount","rects","perlin2","iterativeQuickSort","bubbleSort","insertionSort","low","high","pivot","swap","partitionHigh","greenAll","sqrt","LightSource","rc","rayCount","rays","theta","x1","x2","y1","y2","point1","point2","obstacles","point","x3","y3","x4","y4","ua","ub","denom","line_intersect","RayCasting","setObstacles","lightSource","lines","obstacle","drawRays","DoublePendulum","controlPendulum","m1","m2","r1","r2","g","a1","a2","path","masses","firstLine","secondLine","subSelf","normalize","atan2","sin1","cos1","sin2","cos2","traject","G","MassBall","circle","makeCircle","projects","randomBallSpawner","pos","vel","massBalls","gravityIndicator","frameCountAtChange","p1","p2","v1","v2","normal","vr","vn","dot","abs","detectCollisions","n","Date","getTime","currentBall","currentPos","controlBall","simulateAtoms","ProjectsHandler","cardsStates","setState","order","window","scrollTo","behavior","handleMaximize","now","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","preventDefault"],"mappings":"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","file":"static/js/main.5a3b9e82.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer className=\"footer\">\r\n            <h3>Summer Projects</h3>\r\n            <nav>\r\n                <ul>\r\n                    <li>Home</li>\r\n                    <li>About</li>\r\n                </ul>\r\n            </nav>            \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import Two, { Anchor } from \"twojs-ts\";\r\n\r\nclass Project{\r\n    constructor(two){\r\n        this.two = two;\r\n        this.width = this.two.width;\r\n        this.height = this.two.height;\r\n        this.two.renderer.domElement.addEventListener(\"mousemove\", (e) => this.onMouseMove(e));\r\n        this.two.renderer.domElement.addEventListener(\"mousedown\", () => this.onMouseDown());\r\n        this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.onMouseUp());\r\n        this.two.renderer.domElement.addEventListener(\"mouseup\", () => this.onMouseUp());\r\n        this.mousePos = new Anchor();\r\n        // let timer = setInterval(() => {\r\n        //     if(this.two.renderer.domElement.parentElement){\r\n        //         document.addEventListener(\"keydown\", (e) => this.changeState(e));\r\n        //         console.log(\"Hello\");\r\n        //         clearInterval(timer);\r\n        //     }\r\n        // }, 200, )\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            if(document.querySelector(\".TwoCanvas:hover\") === this.two.renderer.domElement)\r\n                this.changeState(e);    \r\n        });\r\n        this.intervalFunction = null;\r\n        this.init();\r\n        this.update = this.update.bind(this);\r\n        this.two.bind('update', this.update);\r\n    }\r\n    changeState(e){\r\n\r\n    }\r\n    onMouseMove(e){\r\n        this.mx = e.clientX - this.two.renderer.domElement.getBoundingClientRect().left;\r\n        this.my = e.clientY - this.two.renderer.domElement.getBoundingClientRect().top;\r\n        this.mousePos.set(this.mx, this.my);\r\n    }\r\n    onMouseDown() {\r\n        if(this.intervalFunction)\r\n            this.interval = setInterval(() => this.intervalFunction(), 10);\r\n    }\r\n    onMouseUp() {\r\n        clearInterval(this.interval);\r\n        this.interval = false;\r\n    }\r\n    init(){\r\n        //Overwrite this init function in your project subclass to initialise your simulation\r\n        let text = new Two.Text('Two Projects', this.width / 2, this.height /2, {size: 30});\r\n        this.two.add(text);\r\n    }\r\n    update(){\r\n        //Overwrite this Function in your project subclass \r\n    }\r\n    toString(){\r\n        return \"Project\";\r\n    }\r\n}\r\nexport default Project;","import { Noise } from 'noisejs';\r\nimport Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nfunction shuffleArray(array) {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n}\r\n\r\nclass PathFinder extends Project {\r\n    init() {\r\n        this.two.clear();\r\n        this.start = null;\r\n        this.end = null;\r\n        this.state = \"drawing\";\r\n        this.algorithm = null\r\n        this.grid = [];\r\n        if (!this.size) {\r\n            this.size = 20;\r\n            this.algorithmState = \"justStarted\";\r\n            this.intervalFunction = this.draw;\r\n            this.gridHeight = this.height / this.size;\r\n            this.gridWidth = this.width / this.size;\r\n            this.lineGroup = new Two.Group();\r\n        }\r\n        if (this.lineGroup.children.length < this.gridWidth * this.gridHeight) {\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n                let line = new Two.Line(i * this.size, 0, i * this.size, this.height);\r\n                line.stroke = \"lightblue\";\r\n                this.lineGroup.add(line);\r\n                if (i < this.gridHeight) {\r\n                    let line = new Two.Line(0, i * this.size, this.width, i * this.size);\r\n                    line.stroke = \"lightblue\";\r\n                    this.lineGroup.add(line);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n            }\r\n        }\r\n\r\n        this.two.add(this.lineGroup);\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyS\") {\r\n            if (this.start && this.end && !this.algorithm) {\r\n                this.algorithm = this.greedyBestFirstSearch;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyQ\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.recursiveDivision;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyP\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.noiseGrid;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyG\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.depthFirstSearchMaze;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        }\r\n        else if (e.code === \"KeyD\") {\r\n            this.state = \"drawing\";\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.state = \"erasing\";\r\n        }\r\n        else if (e.code === \"KeyR\") {\r\n            this.state = \"resetting\";\r\n            this.init();\r\n        }\r\n    }\r\n    makeRectangleRelativeToMouse() {\r\n        return this.two.makeRectangle(\r\n            Math.floor((this.mx / this.size) % this.gridWidth) * this.size + this.size / 2,\r\n            Math.floor((this.my / this.size) % this.gridHeight) * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    makeGridRect(x, y) {\r\n        return this.two.makeRectangle(\r\n            x * this.size + this.size / 2,\r\n            y * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    getIndexesOfRectangle(node) {\r\n        let x = Math.min(\r\n            Math.max((\r\n                node.translation.x - this.size / 2) / this.size,\r\n                0),\r\n            this.width - 1\r\n        );\r\n        let y = (node.translation.y - this.size / 2) / this.size;\r\n        return [x, y];\r\n    }\r\n    draw() {\r\n        let rect = this.makeRectangleRelativeToMouse();\r\n        let [x, y] = this.getIndexesOfRectangle(rect);\r\n        if (this.state === \"drawing\") {\r\n            if (!this.grid[x][y]) {\r\n                this.grid[x][y] = rect;\r\n                if (!this.start) {\r\n                    this.start = rect\r\n                    this.start.fill = \"red\";\r\n                }\r\n                else if (!this.end) {\r\n                    this.end = rect;\r\n                    this.end.fill = \"green\";\r\n                }\r\n                else {\r\n                    rect.fill = \"black\";\r\n                }\r\n            }\r\n            else {\r\n                this.two.remove(rect);\r\n            }\r\n        }\r\n        else if (this.state === \"erasing\") {\r\n            this.two.remove(rect);\r\n            this.two.remove(this.grid[x][y]);\r\n            if (this.grid[x][y] === this.start)\r\n                this.start = null;\r\n            else if (this.grid[x][y] === this.end)\r\n                this.end = null;\r\n            this.grid[x][y] = null;\r\n        }\r\n\r\n    }\r\n    getSurroundingIndexes(node) {\r\n        let [x, y] = this.getIndexesOfRectangle(node);\r\n        const tmp = [];\r\n        if (x !== 0)\r\n            tmp.push([-1, 0])\r\n        if (x !== this.gridWidth - 1)\r\n            tmp.push([1, 0])\r\n        if (y !== this.gridHeight - 1)\r\n            tmp.push([0, 1])\r\n        if (y !== 0)\r\n            tmp.push([0, -1])\r\n        return tmp;\r\n    }\r\n    getNeighbours(node) {\r\n        let [x, y] = this.getIndexesOfRectangle(node.currentNode);\r\n        const tmp = this.getSurroundingIndexes(node.currentNode);\r\n        let neighbours = []\r\n        tmp.forEach((coord) => {\r\n            if (!this.grid[x + coord[0]][coord[1] + y]) {\r\n                const tmp = this.grid[x + coord[0]][coord[1] + y] = this.two.makeRectangle(\r\n                    Math.floor(x + coord[0]) * this.size + this.size / 2,\r\n                    Math.floor(coord[1] + y) * this.size + this.size / 2,\r\n                    this.size,\r\n                    this.size\r\n                );\r\n                tmp.fill = \"lightblue\";\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: tmp,\r\n                    distance: this.calculateDistanceToEnd(tmp)\r\n                });\r\n            }\r\n            else if (this.grid[x + coord[0]][coord[1] + y] === this.end) {\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: this.grid[x + coord[0]][coord[1] + y],\r\n                    distance: this.calculateDistanceToEnd(this.grid[x + coord[0]][coord[1] + y])\r\n                });\r\n            }\r\n        });\r\n        return neighbours;\r\n    }\r\n    calculateDistanceToEnd(node) {\r\n        return node.translation.distanceTo(this.end.translation);\r\n    }\r\n    greedyBestFirstSearch() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.closedList = [{\r\n                parentNode: null,\r\n                currentNode: this.start,\r\n                distance: this.calculateDistanceToEnd(this.start)\r\n            }];\r\n            this.openList = this.getNeighbours(this.closedList[0]);\r\n            this.algorithmState = \"findingPath\";\r\n        } else if (this.algorithmState === \"findingPath\") {\r\n            this.openList.sort((a, b) => a.distance - b.distance);\r\n            let current = this.openList.shift();\r\n            if (current && current.currentNode !== this.end) {\r\n                current.currentNode.fill = \"skyblue\";\r\n                this.closedList.push(current);\r\n                this.getNeighbours(current).forEach((e) =>\r\n                    this.openList.push(e)\r\n                );\r\n            } else if (!current) {\r\n                this.algorithmState = \"pathNotFound\";\r\n                this.algorithm = null;\r\n            } else {\r\n                this.algorithmState = \"pathFound\";\r\n                this.closedList.push(current);\r\n                this.currentPathNode = current.parentNode;\r\n            }\r\n        } else if (this.algorithmState === \"pathFound\") {\r\n            if (this.currentPathNode.currentNode !== this.start) {\r\n                this.currentPathNode.currentNode.fill = \"yellow\";\r\n                this.currentPathNode = this.currentPathNode.parentNode;\r\n            } else {\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    rand(x, y) {\r\n        return x = Math.floor(Math.random() * (1 + y - x)) + x;\r\n    }\r\n    recursiveDivision() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.algorithmState = \"borderLimiting\";\r\n            this.i = 0;\r\n            this.areas = [{ horizontal: [0, this.gridWidth - 1], vertical: [0, this.gridHeight - 1] }];\r\n        } else if (this.algorithmState === \"borderLimiting\") {\r\n            let condition = 0;\r\n            if (this.i < this.gridWidth) {\r\n                this.grid[this.i][0] = this.makeGridRect(this.i, 0);\r\n                this.grid[this.i][0].fill = \"black\";\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1] = this.makeGridRect(this.gridWidth - 1 - this.i, this.gridHeight - 1);\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            if (0 < this.i && this.i < this.gridHeight - 1) {\r\n                this.grid[0][this.i] = this.makeGridRect(0, this.i)\r\n                this.grid[0][this.i].fill = \"black\";\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i] = this.makeGridRect(this.gridWidth - 1, this.gridHeight - 1 - this.i);\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            this.i++;\r\n            if (condition === 2)\r\n                this.algorithmState = \"mazeGenerating\";\r\n        } else if (this.areas.length && this.algorithmState === \"mazeGenerating\") {\r\n            //let horizontal = Boolean(Math.round(Math.random()));\r\n            let noSpace = 0;\r\n            const area = this.areas.pop();\r\n            let [leftLimit, rightLimit] = area.horizontal;\r\n            let [topLimit, bottomLimit] = area.vertical;\r\n            let horizontal = (rightLimit - leftLimit) > (bottomLimit - topLimit);\r\n            if (horizontal) {\r\n                if (rightLimit - leftLimit > 3) {\r\n                    this.x = this.rand(leftLimit + 3, rightLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: [leftLimit, this.x], vertical: area.vertical },\r\n                        { horizontal: [this.x, rightLimit], vertical: area.vertical }\r\n                    );\r\n                    if (!this.grid[this.x][topLimit])\r\n                        topLimit += 2;\r\n                    if (!this.grid[this.x][bottomLimit])\r\n                        bottomLimit -= 2;\r\n                    this.y = this.rand(topLimit + 1, bottomLimit - 1)\r\n                    this.i = topLimit;\r\n                    this.bottomLimit = bottomLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = true;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (!horizontal) {\r\n                if (bottomLimit - topLimit > 3) {\r\n                    this.y = this.rand(topLimit + 3, bottomLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: area.horizontal, vertical: [topLimit, this.y] },\r\n                        { horizontal: area.horizontal, vertical: [this.y, bottomLimit] }\r\n                    );\r\n                    if (!this.grid[leftLimit][this.y])\r\n                        leftLimit += 2;\r\n                    if (!this.grid[rightLimit][this.y])\r\n                        rightLimit -= 2;\r\n                    this.x = this.rand(leftLimit + 1, rightLimit - 1)\r\n                    this.i = leftLimit;\r\n                    this.rightLimit = rightLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = false;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (noSpace == 1)\r\n                this.areas.pop();\r\n        } else if (this.algorithmState === \"lineDrawing\") {\r\n            if (this.vertical) {\r\n                if (this.i <= this.bottomLimit) {\r\n                    if (this.i != this.y && !this.grid[this.x][this.i]) {\r\n                        this.grid[this.x][this.i] = this.makeGridRect(this.x, this.i);\r\n                        this.grid[this.x][this.i].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n\r\n            } else {\r\n                if (this.i <= this.rightLimit) {\r\n                    if (this.i != this.x && !this.grid[this.i][this.y]) {\r\n                        this.grid[this.i][this.y] = this.makeGridRect(this.i, this.y);\r\n                        this.grid[this.i][this.y].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n            }\r\n            this.i++;\r\n        } else {\r\n            this.algorithm = null;\r\n        }\r\n    }\r\n    getNeighbourForDepthFirstSearch(node) {\r\n        let [x, y] = node;\r\n        let tmpRect = this.makeGridRect(x, y);\r\n        const tmp = this.getSurroundingIndexes(tmpRect);\r\n        this.two.remove(tmpRect);\r\n        let neighbours = []\r\n        tmp.forEach((coord) => {\r\n            let [xx, yy] = [x + coord[0], coord[1] + y];\r\n            if (this.grid[xx][yy]) {\r\n                if (this.isAdjacentToOtherNodes([xx, yy]) <= 1)\r\n                    neighbours.push([xx, yy]);\r\n            }\r\n        });\r\n        shuffleArray(neighbours);\r\n        return neighbours;\r\n    }\r\n    isAdjacentToOtherNodes(node) {\r\n        let [x, y] = node;\r\n        let tmpRect = this.makeGridRect(x, y);\r\n        const tmp = this.getSurroundingIndexes(tmpRect);\r\n        this.two.remove(tmpRect);\r\n        if (x !== 0 && y !== 0)\r\n            tmp.push([-1, -1])\r\n        if (x !== this.gridWidth - 1 && y !== this.gridHeight - 1)\r\n            tmp.push([1, 1])\r\n        if (x !== 0 && y !== this.gridHeight - 1)\r\n            tmp.push([-1, 1])\r\n        if (x !== this.gridWidth - 1 && y !== 0)\r\n            tmp.push([1, -1])\r\n        let condition = 0;\r\n        let lastAdjecentNode = null;\r\n        tmp.forEach((coord) => {\r\n            let node = this.grid[x + coord[0]][coord[1] + y];\r\n            if (!node) {\r\n                if (lastAdjecentNode) {\r\n                    if (new Anchor(x + coord[0], coord[1] + y).distanceTo(lastAdjecentNode) > 1)\r\n                        condition++;\r\n                }\r\n                else {\r\n                    condition++;\r\n                    lastAdjecentNode = new Anchor(x + coord[0], coord[1] + y);\r\n                }\r\n            }\r\n        });\r\n        return condition;\r\n    }\r\n    depthFirstSearchMaze() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.algorithmState = \"mazeGenerating\";\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                for (let j = 0; j < this.gridHeight; j++) {\r\n                    this.grid[i][j] = this.makeGridRect(i, j);\r\n                    this.grid[i][j].fill = \"black\";\r\n                }\r\n            }\r\n            this.stack = [];\r\n            let x = this.rand(0, this.gridWidth - 1);\r\n            let y = this.rand(0, this.gridHeight - 1);\r\n            this.stack.push([x, y]);\r\n        } else if (this.algorithmState === \"mazeGenerating\" && this.stack.length) {\r\n            this.current = this.stack[this.stack.length - 1];\r\n            this.stack.pop();\r\n            if (this.isAdjacentToOtherNodes(this.current) <= 1) {\r\n                let [x, y] = this.current;\r\n                this.two.remove(this.grid[x][y]);\r\n                this.grid[x][y] = null;\r\n                this.getNeighbourForDepthFirstSearch(this.current).forEach(element => this.stack.push(element));\r\n            }\r\n        } else {\r\n            this.algorithm = null;\r\n        }\r\n    }\r\n    noiseGrid() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.noise = new Noise(Math.random());\r\n            this.algorithmState = \"gridMaking\";\r\n        } else if (this.algorithmState === \"gridMaking\") {\r\n            if (this.i < this.gridWidth) {\r\n                if (this.j < this.gridHeight) {\r\n                    let noise = this.noise.simplex2(this.i * 0.1, this.j * 0.1)\r\n                    if (noise >= 0) {\r\n                        this.grid[this.i][this.j] = this.makeGridRect(this.i, this.j);\r\n                        this.grid[this.i][this.j].fill = \"black\";\r\n                    }\r\n                    this.j++;\r\n                } else {\r\n                    this.j = 0;\r\n                    this.i++;\r\n                }\r\n            } else {\r\n                this.algorithmState = \"justStarted\";\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default PathFinder;","import React from 'react';\r\nimport Two from 'twojs-ts'\r\n\r\nclass TwoCanvas extends React.Component {\r\n    init() {\r\n        const type = this.props.type ? this.props.type : Two.Types.canvas;\r\n        this.two = new Two({ width: this.props.width, height: this.props.height, type: type });\r\n        this.project = new this.props.project(this.two);\r\n        this.two.renderer.domElement.className = \"TwoCanvas\";\r\n        if (!this.props.maximized) {\r\n            this.two.renderer.domElement.addEventListener(\"mouseenter\", () => this.two.play());\r\n            this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.two.pause());\r\n            this.two.pause();\r\n        } else {\r\n            this.two.renderer.domElement.style.background = \"rgba(255, 255, 255, 1)\"\r\n            this.two.play();\r\n        }\r\n        this.two.update();\r\n    }\r\n    render() {\r\n        if (this.two) {\r\n            let domElement = this.two.renderer.domElement;\r\n            if (domElement.parentElement)\r\n                domElement.parentElement.removeChild(domElement);\r\n            this.two = null;\r\n        }\r\n        this.init();\r\n        return (\r\n            <div ref={(nodeElement) => { nodeElement && nodeElement.appendChild(this.two.renderer.domElement) }}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TwoCanvas;","import React from 'react';\r\nimport Two from 'twojs-ts';\r\nimport PathFinder from '../projects/PathFinder';\r\nimport TwoCanvas from './TwoCanvas';\r\nclass ProjectCard extends React.Component {\r\n    constructor(two) {\r\n        super(two);\r\n        this.state = this.props.state;\r\n    }\r\n    render() {\r\n        this.state = this.props.state;\r\n        const project = this.props.project;\r\n        return (\r\n            <div className={this.state.cssClass} style= {this.state.style}>\r\n                <div className={this.state.maximized ? \"divTwoMaximized\" : \"divTwo\"}>\r\n                    <TwoCanvas\r\n                        maximized = {this.state.maximized}\r\n                        project={project.project}\r\n                        key={project}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        type={project.project == PathFinder ? Two.Types.webgl : Two.Types.canvas}\r\n                    />\r\n                    <button id=\"maximize\" onClick={() => this.props.onClick()}></button>\r\n                </div>\r\n                {Array(1).fill(0).map(() => {if(! this.state.maximized) return <h1>Paused</h1>;})}\r\n                <h2 className=\"sim-title\" style= {this.state.style}>{project.title}</h2>\r\n                <div className=\"game-info\" style={this.state.gameInfoStyle}>\r\n                    <p>About: {project.description}</p>\r\n                    {Object.keys(project.tips).map(key => {\r\n                        if(key == \"tips\")\r\n                            return (<p>Tips: {project.tips[key]}</p>)\r\n                        else{\r\n                            return (\r\n                                <div style={{display: \"flex\", alignItems:\"center\"}}>\r\n                                    <button id=\"keyButton\">{key}</button>\r\n                                    <p>{project.tips[key]}</p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })}\r\n                </div>       \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectCard;","import Two from 'twojs-ts';\r\nimport { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass PerlinNoise extends Project {\r\n    init(){\r\n        this.noise = new Noise(Math.random());\r\n        this.position = new Two.Vector(this.width / 2, this.height / 2);\r\n        this.radius = this.two.height / 3;\r\n        this.noiseLayer = 0;\r\n        this.blob = new Two.Path([], true, true);\r\n        this.two.add(this.blob);\r\n        this.blob.fill = 'rgb(0,0,40)'\r\n        this.blob.noStroke();\r\n    }\r\n    update() {\r\n        const vertices = [];\r\n        this.noiseLayer += 0.01;\r\n        for (let angle = 0; angle < 2 * Math.PI; angle += 0.01) {\r\n            var x = Math.cos(angle);\r\n            var y = Math.sin(angle);\r\n\r\n            var position = new Two.Anchor(x, y);\r\n            var radius = this.noise.perlin3(x*2, y*2, this.noiseLayer) * this.radius/3 + this.radius;\r\n\r\n            position.multiplyScalar(radius);\r\n            position.addSelf(this.position);\r\n\r\n            vertices.push(position);\r\n        }\r\n        this.blob.vertices = vertices;\r\n    }\r\n}\r\nexport default PerlinNoise;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst G = 100;\r\n\r\nclass Planet {\r\n    constructor(position, mass, two, orbitSim) {\r\n        this.orbitSim = orbitSim;\r\n        this.two = two;\r\n        this.position = position;\r\n        this.mass = mass;\r\n        this.radius = mass * 10;\r\n        this.init();\r\n        this.sandbox = false;\r\n    }\r\n    init() {\r\n        this.twoObject = new Two.Circle(this.position.x, this.position.y, this.radius);\r\n        this.two.add(this.twoObject);\r\n        this.twoObject.fill = \"black\";\r\n        this.twoObject.translation = this.position;\r\n    }\r\n}\r\nclass Moon extends Planet {\r\n    constructor(position, velocity, mass, two, planets, orbitSim) {\r\n        super(position, mass, two, orbitSim);\r\n        this.velocity = velocity;\r\n        this.planets = planets;\r\n        this.acceleration = new Two.Anchor();\r\n        this.update = this.update.bind(this);\r\n        this.trajectory = [];\r\n        this.two.bind('update', this.update).play();\r\n    }\r\n    update() {\r\n        let collided = false;\r\n        this.planets.forEach(planet => {\r\n            let ab = new Anchor();\r\n            ab.sub(planet.position, this.position);\r\n            ab.multiplyScalar(G * planet.mass / Math.pow(ab.length(), 3));\r\n            this.velocity.addSelf(ab);\r\n            if (ab.sub(this.position, planet.position).length() < this.radius + planet.radius) {\r\n                collided = true;\r\n                if (!this.sandbox)\r\n                    this.orbitSim.removeMoon(this);\r\n            }\r\n        });\r\n        this.position.addSelf(this.velocity);\r\n        if (this.position.length() > 5000)\r\n            this.sandbox ? collided = true : this.orbitSim.removeMoon(this);\r\n        if (collided && !this.sandbox)\r\n            this.two.unbind('update', this.update);\r\n        if (!this.sandbox && !collided) {\r\n            if (this.trajectory.length > 255)\r\n                this.trajectory.shift();\r\n            this.trajectory.push(this.position.clone());\r\n            this.two.remove(this.orbit);\r\n            this.orbit = new Two.Path(this.trajectory, false, true);\r\n            this.two.add(this.orbit);\r\n            this.orbit.noFill();\r\n        }\r\n        return collided;\r\n    }\r\n}\r\n\r\nclass OrbitSim extends Project {\r\n    init() {\r\n        this.intervalFunction = this.spawnMoon;\r\n        this.mouse = false;\r\n        this.mousePos = new Anchor();\r\n        this.planets = [new Planet(new Anchor(this.width / 2, this.height / 2), this.height / 100, this.two, this)];\r\n        this.moons = [new Moon(new Anchor(this.width / 4, this.height / 2), new Anchor(0, 1.5), this.height / 350, this.two, this.planets, this)]\r\n        this.ui = new Two.Text(`Planets remaining: ${this.moons.length}`, 10, 20, { alignment: \"left\", size: this.height / 15 });\r\n        this.two.add(this.ui);\r\n    }\r\n    update() {\r\n        this.ui.value = `Planets remaining: ${this.moons.length}`;\r\n    }\r\n    removeMoon(moon) {\r\n        let index = this.moons.indexOf(moon);\r\n        if (index > 0)\r\n            this.moons.splice(index, 1);\r\n        this.two.unbind('update', moon.update);\r\n        this.two.remove(moon.orbit);\r\n        this.two.remove(moon.twoObject);\r\n    }\r\n    onMouseDown() {\r\n        this.tempPosition = this.mousePos.clone();\r\n        this.tempMoon = new Moon(this.mousePos.clone(), new Anchor(0, 0), Math.random() * this.height / 150 + 0.1, this.two, this.planets, this);\r\n        this.tempMoon.sandbox = true;\r\n        this.mouse = setInterval(() => this.spawnMoon(), 10);\r\n    }\r\n    onMouseUp() {\r\n        if (this.mouse) {\r\n            clearInterval(this.mouse);\r\n            this.moons.push(this.tempMoon);\r\n            this.tempMoon.position = this.tempPosition.clone();\r\n            this.tempMoon.twoObject.translation = this.tempMoon.position;\r\n            this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n            this.tempMoon.sandbox = false;\r\n            this.mouse = false;\r\n            this.two.remove(this.group);\r\n            this.two.remove(this.powerLine);\r\n        }\r\n    }\r\n    getMoonMouseVelocity() {\r\n        let ab = new Anchor();\r\n        ab.sub(this.tempMoon.position, this.mousePos);\r\n        ab.multiplyScalar(0.01);\r\n        return ab;\r\n    }\r\n    spawnMoon() {\r\n        this.two.remove(this.group);\r\n        this.two.remove(this.powerLine);\r\n        this.tempMoon.position = this.tempPosition.clone();\r\n        this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n        this.powerLine = this.two.makeLine(this.mousePos.x, this.mousePos.y, this.tempMoon.position.x, this.tempMoon.position.y);\r\n        const iterations = 500;\r\n        const futurePositions = [];\r\n        for (let index = 0; index < iterations; index++) {\r\n            if (this.tempMoon.update())\r\n                break;\r\n            if (index % 20 === 0) {\r\n                futurePositions.push(new Two.Circle(this.tempMoon.position.x, this.tempMoon.position.y, 1));\r\n                const rgb = 255 * index / iterations;\r\n                futurePositions[futurePositions.length - 1].fill = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n                futurePositions[futurePositions.length - 1].stroke = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n            }\r\n        }\r\n        this.group = this.two.makeGroup(futurePositions);\r\n    }\r\n\r\n}\r\n\r\nexport default OrbitSim;","import { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass Snake extends Project {\r\n    constructor(two){\r\n        super(two);\r\n        this.highestScore = 0;\r\n    }\r\n    init() {\r\n        document.addEventListener(\"keydown\", (e) => this.moveSnake(e));\r\n        this.size = 20;\r\n        this.velocity = 2;\r\n        this.length = 4;\r\n        this.position = new Anchor(100 + this.size / 2, 120 + this.size / 2);\r\n        this.food = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        this.food.fill = \"rgb(0,0,100)\";\r\n        this.food.translation = new Anchor(0, 0);\r\n        this.SpawnFood();\r\n        this.coords = [this.position];\r\n        this.vels = [];\r\n        this.body = [];\r\n        for (let index = 0; index < this.length; index++) {\r\n            if (index !== 0)\r\n                this.coords.push(this.position.clone().addSelf(new Anchor(-this.size * index, 0)));\r\n            this.vels.push(new Anchor(this.velocity, 0));\r\n            let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n            square.translation = this.coords[index];\r\n            square.fill = index === 0 ? \"red\" : \"black\";\r\n            this.body.push(square);\r\n        }\r\n        this.currentScore = this.two.makeText(`Score: ${this.body.length}`, 15, 50, { size: 20, alignment: \"left\" });\r\n        this.maxScore = this.two.makeText(`Highest Score: ${this.highestScore ? this.highestScore : 0}`, 15, 80, { size: 20, alignment: \"left\" })\r\n    }\r\n    elongate() {\r\n        this.coords.push(this.coords[this.coords.length - 1].clone());\r\n        this.vels.push(new Anchor(0, 0));\r\n        let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        square.translation = this.coords[this.coords.length - 1];\r\n        square.fill = \"black\";\r\n        this.body.push(square);\r\n    }\r\n    moveSnake(e) {\r\n        if ((e.code === \"KeyW\" || e.code === \"ArrowUp\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, -this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyS\" || e.code === \"ArrowDown\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyA\" || e.code === \"ArrowLeft\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(-this.velocity, 0);\r\n        }\r\n        else if ((e.code === \"KeyD\" || e.code === \"ArrowRight\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(this.velocity, 0);\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.justChanged = this.elongate;\r\n        }\r\n    }\r\n    SpawnFood() {\r\n        let x = Math.floor(Math.random() * this.width / this.size) * this.size + this.size / 2;\r\n        let y = Math.floor(Math.random() * this.height / this.size) * this.size + this.size / 2;\r\n        this.food.translation.set(x, y);\r\n    }\r\n    respawn() {\r\n        this.two.clear();\r\n        this.init();\r\n    }\r\n    update() {\r\n        let died = false;\r\n        this.coords.forEach((position, index) => {\r\n            position.addSelf(this.vels[index]);\r\n            if (!position.distanceTo(this.position) && index !== 0)\r\n                died = true;\r\n        })\r\n        if (this.position.x < 0 || this.position.y < 0 || this.position.x > this.width || this.position.y > this.height)\r\n            died = true;\r\n        if (died)\r\n            this.respawn();\r\n\r\n        if ((this.position.x - this.size / 2) % this.size === 0 && (this.position.y - this.size / 2) % this.size === 0) {\r\n            for (let index = this.vels.length - 1; index > 0; index--) {\r\n                this.vels[index].copy(this.vels[index - 1]);\r\n            }\r\n            if (typeof this.justChanged === \"function\") {\r\n                this.justChanged();\r\n                this.justChanged = null;\r\n            }\r\n            else if (this.justChanged) {\r\n                this.vels[0].copy(this.justChanged);\r\n                this.justChanged = null;\r\n            }\r\n        }\r\n\r\n        if (!this.position.distanceTo(this.food.translation)) {\r\n            this.SpawnFood();\r\n            this.elongate();\r\n            this.currentScore.value = `Score: ${this.body.length}`;\r\n            if (this.body.length > this.highestScore) {\r\n                this.highestScore = this.body.length;\r\n                this.maxScore.value = `Highest Score: ${this.highestScore}`;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Snake;","import { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass Sort extends Project {\r\n    constructor(two){\r\n        super(two);\r\n        this.id = Math.floor( Math.random() * 100 );\r\n        this.random = true;\r\n    }\r\n    init() {\r\n        this.two.clear();\r\n        this.justStarted = \"justStarted\";\r\n        this.noise = new Noise(Math.random());\r\n        this.rectWidth = 1;\r\n        this.algorithm = null;\r\n        this.frameCount = - 10;\r\n        this.length = this.width / this.rectWidth;\r\n        this.rects = Array(this.length).fill(0).map((value, index) => {\r\n            let rect = this.two.makeRectangle(\r\n                index * this.rectWidth,\r\n                this.height / 2,\r\n                this.rectWidth,\r\n                this.random?\r\n                this.height * Math.random():\r\n                this.noise.perlin2(index * 0.01, 0) * this.height + this.height / 2\r\n            );\r\n            rect.fill = \"black\";\r\n            return rect;\r\n        })\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyR\") {\r\n            this.init();\r\n        } else if (e.code === \"KeyD\" && this.two.frameCount - this.frameCount > 10) {\r\n            this.frameCount = this.two.frameCount;\r\n            this.random = ! this.random;\r\n            this.init();\r\n        } else if (e.code === \"KeyA\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.iterativeQuickSort;\r\n        } else if (e.code === \"KeyB\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.bubbleSort;\r\n        } else if (e.code === \"KeyI\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.insertionSort;\r\n        } else if (e.code === \"KeyS\") {\r\n            for (let index = 0; index < 300; index++)\r\n                this.update()\r\n        }\r\n    }\r\n    swap(i, j) {\r\n        let tmp = this.rects[i].height;\r\n        this.rects[i].height = this.rects[j].height;\r\n        this.rects[j].height = tmp;\r\n    }\r\n    partitionHigh(low, high) {\r\n        let pivot = this.rects[high].height;\r\n        let i = low;\r\n        for (let j = low; j < high; j++) {\r\n            if (this.rects[j].height <= pivot) {\r\n                this.swap(i, j);\r\n                i++;\r\n            }\r\n        }\r\n        this.swap(i, high);\r\n        return i;\r\n    }\r\n    iterativeQuickSort() {\r\n        if (this.justStarted) {\r\n            this.stack = [];\r\n            this.start = 0;\r\n            this.end = this.rects.length - 1;\r\n            this.stack.push({ x: this.start, y: this.end });\r\n            this.justStarted = false;\r\n        }\r\n        if (this.stack.length) {\r\n            const { x, y } = this.stack.shift();\r\n            const PI = this.partitionHigh(x, y);\r\n\r\n            if (PI - 1 > x) {\r\n                this.stack.push({ x: x, y: PI - 1 });\r\n            }\r\n            if (PI + 1 < y) {\r\n                this.stack.push({ x: PI + 1, y: y });\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    bubbleSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length - 1) {\r\n            if (this.j < this.length - this.i - 1) {\r\n                if (this.rects[this.j].height > this.rects[this.j + 1].height) {\r\n                    this.swap(this.j, this.j + 1);\r\n                }\r\n                this.j++;\r\n            }\r\n            else {\r\n                this.j = 0;\r\n                this.i++;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    insertionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 1;\r\n            this.j = 0;\r\n            this.current = this.rects[this.i].height;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j > - 1 && this.current < this.rects[this.j].height) {\r\n                this.rects[this.j + 1].height = this.rects[this.j].height;\r\n                this.j--;\r\n            } else {\r\n                this.rects[this.j + 1].height = this.current;\r\n                this.i++;\r\n                this.j = this.i - 1;\r\n                if (this.i < this.length)\r\n                    this.current = this.rects[this.i].height;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    selectionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = this.i + 1;\r\n            this.min = this.i;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j < this.length) {\r\n                if (this.rects[this.j].height < this.rects[this.min].height) {\r\n                    this.min = this.j\r\n                }\r\n                this.j++;\r\n            } else {\r\n                this.swap(this.i, this.min);\r\n                this.i++;\r\n                this.j = this.i + 1;\r\n                this.min = this.i;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    greenAll() {\r\n        if (this.i < this.length) {\r\n            this.rects[this.i].fill = \"green\";\r\n            this.rects[this.i].stroke = \"green\";\r\n            this.i++;\r\n        } else {\r\n            this.init();\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default Sort;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst PI = Math.PI;\r\nconst sqrt = Math.sqrt;\r\n\r\nfunction line_intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n    var ua, ub, denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n    if (denom == 0) {\r\n        return null;\r\n    }\r\n    ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;\r\n    ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;\r\n    let seg1 = ua >= 0 && ua <= 1;\r\n    let seg2 = ub >= 0 && ub <= 1;\r\n    if(seg1 && seg2)\r\n        return new Anchor(x1 + ua * (x2 - x1), y1 + ua * (y2 - y1));\r\n    else \r\n        return null;\r\n}\r\n\r\nclass LightSource {\r\n    constructor(rc) {\r\n        this.rc = rc;\r\n        this.position = rc.mousePos;\r\n        this.rayCount = 101;\r\n    }\r\n    drawRays() {\r\n        this.rc.two.remove(this.rays);\r\n        this.rays = new Two.Group();\r\n        for (let theta = 0; theta < 2 * PI; theta += 2 * PI / this.rayCount) {\r\n            let x1 = this.position.x + this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let x2 = this.position.x - this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let y1 = this.position.y + (x1 - this.position.x) * sin(theta) / cos(theta);\r\n            let y2 = this.position.y + (x2 - this.position.x) * sin(theta) / cos(theta);\r\n            let point1 = new Anchor(x1, y1);\r\n            let point2 = new Anchor(x2, y2);\r\n            this.rc.obstacles.forEach(element => {\r\n                let point = line_intersect(\r\n                    x1, y1,\r\n                    x2, y2,\r\n                    element[0].x, element[0].y,\r\n                    element[1].x, element[1].y\r\n                );\r\n                if (point && (x1 - this.position.x) * (point.x - this.position.x) > 0){\r\n                    if (point.distanceTo(this.position) < point1.distanceTo(this.position))\r\n                        point1.copy(point);\r\n                }    \r\n                else if (point){\r\n                    if (point.distanceTo(this.position) < this.position.distanceTo(point2))\r\n                        point2.copy(point);\r\n                }               \r\n            });\r\n            let line = new Two.Line(point1.x, point1.y, point2.x, point2.y);\r\n            line.stroke = \"white\";\r\n            this.rays.add(line);\r\n        }\r\n        this.rc.two.add(this.rays);\r\n    }\r\n}\r\n\r\nclass RayCasting extends Project {\r\n    init() {\r\n        this.rect = this.two.makeRectangle(this.width / 2, this.height / 2, this.width, this.height);\r\n        this.rect.fill = \"black\";\r\n        this.setObstacles();  \r\n        this.lightSource = new LightSource(this);\r\n        \r\n    }\r\n    setObstacles(){\r\n        this.two.remove(this.lines);\r\n        this.lines = new Two.Group();\r\n        this.obstacles = []\r\n        for (let i = 0; i < 5; i++) {\r\n            let x1 = Math.random()*this.width;\r\n            let x2 = Math.random()*this.width;\r\n            let y1 = Math.random()*this.height;\r\n            let y2 = Math.random()*this.height;\r\n            let obstacle = new Two.Line(x1, y1, x2, y2);\r\n            obstacle.stroke = \"white\";\r\n            this.lines.add(obstacle);\r\n            this.obstacles.push([new Anchor(x1, y1), new Anchor(x2, y2)]);\r\n        }\r\n        this.two.add(this.lines);\r\n    }\r\n    update() {\r\n        this.lightSource.drawRays();\r\n    }\r\n    changeState(e){\r\n        if(e.code === \"KeyR\"){\r\n            this.setObstacles();\r\n        }\r\n    }\r\n}\r\nexport default RayCasting;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass DoublePendulum extends Project {\r\n    init() {\r\n        this.intervalFunction = this.controlPendulum;\r\n        this.m1 = this.m2 = this.height / 30;\r\n        this.r1 = this.r2 = this.height / 4;\r\n        this.g = 0.05;\r\n        this.a1 = [3.9, 0, 0];\r\n        this.a2 = [2.5, 0, 0];\r\n        this.path = [];\r\n        this.position = new Anchor(this.width / 2, this.height / 3);\r\n        this.masses = [new Two.Circle(0, 0, this.m1), new Two.Circle(0, 0, this.m2)];\r\n        this.masses.forEach((mass) => {\r\n            mass.translation = new Anchor();\r\n            mass.fill = \"black\";\r\n        })\r\n        this.firstLine = this.two.makeLine();\r\n        this.secondLine = this.two.makeLine();\r\n        this.firstLine.vertices = [this.position, this.masses[0].translation];\r\n        this.secondLine.vertices = [ this.masses[1].translation, this.masses[0].translation];\r\n        this.two.add(this.masses);\r\n        // this.text = new Two.Text(\"Hold and drag to change masses' position..\", 10, 30, {alignment: \"left\", size: this.height / 20});\r\n        // this.two.add(this.text);\r\n    }\r\n    controlPendulum(){\r\n        let mousePos = new Anchor(this.mx, this.my);\r\n        if(mousePos.distanceTo(this.masses[0].translation) < mousePos.distanceTo(this.masses[1].translation)){\r\n            mousePos.subSelf(this.position);\r\n            mousePos.normalize();\r\n            this.a1[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }else{\r\n            mousePos.subSelf(this.masses[0].translation);\r\n            mousePos.normalize();\r\n            this.a2[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }\r\n        this.a1[1] = this.a2[1] = 0;\r\n    }\r\n    update() {\r\n        const sin1 = Math.sin(this.a1[0])\r\n        const cos1 = Math.cos(this.a1[0])\r\n        const sin2 = Math.sin(this.a2[0])\r\n        const cos2 = Math.cos(this.a2[0])\r\n\r\n        this.a1[2] = -this.g * (2 * this.m1 + this.m2) * sin1 - this.m2 * this.g * Math.sin(this.a1[0] - 2 * this.a2[0])\r\n        this.a1[2] -= 2 * Math.sin(this.a1[0] - this.a2[0]) * this.m2 * (this.a2[1] * this.a2[1] * this.r2 + this.a1[1] * this.a1[1] * this.r1 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a1[2] *= 1 / (this.r1 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a2[2] = 2 * Math.sin(this.a1[0] - this.a2[0])\r\n        this.a2[2] *= (this.a1[1] * this.a1[1] * this.r1 * (this.m1 + this.m2) + this.g * (this.m1 + this.m2) * cos1 + this.a2[1] * this.a2[1] * this.r2 * this.m2 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a2[2] *= 1 / (this.r2 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a1[1] += this.a1[2]\r\n        this.a2[1] += this.a2[2]\r\n        this.a1[0] += this.a1[1]\r\n        this.a2[0] += this.a2[1]\r\n\r\n        this.masses[0].translation.set(this.position.x + sin1 * this.r1, this.position.y + cos1 * this.r1);\r\n        this.masses[1].translation.set(this.masses[0].translation.x + sin2 * this.r2, this.masses[0].translation.y + cos2 * this.r2);\r\n\r\n        this.two.remove(this.traject);\r\n        if(this.path.length > 255)\r\n            this.path.shift();\r\n        this.path.push(this.masses[1].translation.clone());\r\n        this.traject = new Two.Path(this.path, false);\r\n        this.two.add(this.traject);\r\n        this.traject.noFill();\r\n    }\r\n}\r\nexport default DoublePendulum;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nvar G = 0;\r\nclass MassBall {\r\n    constructor(position, velocity, radius, two) {\r\n        this.acceleration = new Anchor(0, G);\r\n        this.two = two;\r\n        this.position = position;\r\n        this.velocity = velocity;\r\n        this.radius = radius;\r\n        this.mass = radius / 10;\r\n        this.circle = this.two.makeCircle(0, 0, radius);\r\n        this.circle.translation = position;\r\n        this.circle.fill = \"black\";\r\n    }\r\n    update() {\r\n        this.acceleration.y = G;\r\n        this.velocity.addSelf(this.acceleration);\r\n        this.position.addSelf(this.velocity);\r\n\r\n        if (this.position.y + this.radius > this.two.height) {\r\n            this.position.y = this.two.height - this.radius;\r\n            this.velocity.y *= -0.7;\r\n        } else if (this.position.y < this.radius) {\r\n            this.position.y = this.radius;\r\n            this.velocity.y *= -0.95;\r\n        }\r\n        if (this.position.x < this.radius) {\r\n            this.position.x = this.radius;\r\n            this.velocity.x *= -0.95;\r\n        } else if (this.position.x > this.two.width - this.radius) {\r\n            this.position.x = this.two.width - this.radius;\r\n            this.velocity.x *= -0.95;\r\n        }\r\n    }\r\n}\r\n\r\nclass ElascticCollisions extends Project {\r\n    constructor(two) {\r\n        super(two);\r\n        for (let i = 0; i < Math.floor(Math.random() * 10) + 3; i++) {\r\n            this.randomBallSpawner();\r\n        }\r\n    }\r\n    randomBallSpawner(radius = -1){\r\n        let x = Math.random() * this.width;\r\n        let y = Math.random() * this.height;\r\n        let pos = new Anchor(x, y);\r\n        let vel = new Anchor(Math.random() * 2 - 1, Math.random() * 2 - 1);\r\n        if(radius === -1)\r\n            radius = Math.random() * 35 + 5;\r\n        this.massBalls.push(new MassBall(pos, vel, radius, this.two));\r\n    }\r\n    init() {\r\n        this.two.clear();\r\n        this.gravityIndicator = this.two.makeText(G === 0 ? \"Gravity OFF\" : \"Gravity ON\", this.two.width / 2, 15, {size: 15});\r\n        this.frameCountAtChange = 0;\r\n        this.massBalls = [];\r\n    }\r\n    detectCollisions() {\r\n        this.massBalls.sort((a, b) => {\r\n            return a.position.x - b.position.x;\r\n        });\r\n        for (let i = 0; i < this.massBalls.length - 1; i++) {\r\n            for (let j = i + 1; j < this.massBalls.length; j++) {\r\n                let r1 = this.massBalls[i].radius;\r\n                let r2 = this.massBalls[j].radius;\r\n                let p1 = this.massBalls[i].position;\r\n                let p2 = this.massBalls[j].position;\r\n                if (p1.distanceTo(p2) < r1 + r2) {\r\n                    let m1 = this.massBalls[i].mass;\r\n                    let m2 = this.massBalls[j].mass;\r\n                    let v1 = this.massBalls[i].velocity;\r\n                    let v2 = this.massBalls[j].velocity;\r\n                    let normal = new Anchor();\r\n                    normal.sub(p1, p2).normalize();\r\n                    //Teleporting one of the mass balls to prevent it from merging with the other one.\r\n                    if (r1 > r2)\r\n                        p2.sub(p1, normal.clone().multiplyScalar(r1 + r2));\r\n                    else\r\n                        p1.add(normal.clone().multiplyScalar(r1 + r2), p2);\r\n                    normal.sub(p1, p2).normalize();\r\n                    let vr = new Anchor();\r\n                    let vn = normal.clone().multiplyScalar(vr.sub(v1, v2).dot(normal));\r\n                    v1.subSelf(vn.clone().multiplyScalar(2 * m2 / (m1 + m2)));\r\n                    v2.addSelf(vn.clone().multiplyScalar(2 * m1 / (m1 + m2)));\r\n                } else if (Math.abs(p1.x - p2.x) > 100)\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        // console.log(this.uniqueId);\r\n        for (let i = 0; i < this.massBalls.length; i++) {\r\n            this.massBalls[i].update();\r\n        }\r\n        this.detectCollisions();\r\n    }\r\n    simulateAtoms() {\r\n        this.init();\r\n        let radius = 5\r\n        for (let i = 0; i < 100; i++) {\r\n            this.randomBallSpawner(radius);\r\n        }\r\n    }\r\n    controlBall() {\r\n        let d = new Date();\r\n        let n = d.getTime();\r\n        this.currentBall.radius = 5 + Math.abs(Math.sin(n / 1000)) * 30;\r\n        this.currentBall.mass = this.currentBall.radius / 10;\r\n        this.currentBall.circle.radius = this.currentBall.radius;\r\n        this.two.remove(this.line);\r\n        this.line = this.two.makeLine(this.mousePos.x, this.mousePos.y, this.currentBall.position.x, this.currentBall.position.y);\r\n        this.currentBall.velocity.sub(this.currentBall.position, this.mousePos).multiplyScalar(0.05);\r\n    }\r\n    onMouseDown() {\r\n        this.currentBall = new MassBall(this.mousePos.clone(), new Anchor(), 25, this.two);\r\n        this.currentPos = this.mousePos.clone();\r\n        if (this.controlBall)\r\n            this.interval = setInterval(() => this.controlBall(), 10);\r\n    }\r\n    onMouseUp() {\r\n        if (this.currentBall)\r\n            this.massBalls.push(this.currentBall);\r\n        this.two.remove(this.line);\r\n        clearInterval(this.interval);\r\n        this.interval = false;\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyR\") {\r\n            this.init();\r\n        } else if (e.code === \"KeyG\") {\r\n            if (this.two.frameCount - this.frameCountAtChange > 10) {\r\n                G = G === 0 ? 0.1 : 0;\r\n                this.gravityIndicator.value = G === 0 ? \"Gravity OFF\" : \"Gravity ON\";\r\n                this.frameCountAtChange = this.two.frameCount;\r\n            }\r\n        } else if (e.code === \"KeyQ\") {\r\n            if (this.two.frameCount - this.frameCountAtChange > 10) {\r\n                this.simulateAtoms();\r\n                this.frameCountAtChange = this.two.frameCount;\r\n            }\r\n        } else if (e.code === \"KeyS\") {\r\n            for (let index = 0; index < 1000; index++) {\r\n                this.update();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ElascticCollisions;","import PerlinNoise from '../projects/PerlinNoise';\r\nimport OrbitSim from '../projects/OrbitSim';\r\nimport Snake from '../projects/Snake'\r\nimport Sort from '../projects/Sort.js';\r\nimport PathFinder from '../projects/PathFinder.js';\r\nimport RayCasting from '../projects/RayCasting.js';\r\nimport DoublePendulum from '../projects/DoublePendulum';\r\nimport ElascticCollisions from '../projects/ElasticCollisions';\r\n\r\n\r\nclass Project {\r\n    constructor(project, title, description, tips, keys){\r\n        this.project = project;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.tips = {\r\n            tips: tips,\r\n        }\r\n        Object.keys(keys).forEach( key => this.tips[key] = keys[key]);\r\n    }\r\n}\r\n\r\nconst projects = [\r\n    {\r\n        project: OrbitSim,\r\n        title: \"Orbit Simulation\",\r\n        description: \"This is a gravity simulator where you can spawn planets and make them orbit the sun by setting their initial velocity and direction.\",\r\n        tips: {\r\n            tips: \"Hold and drag the mouse to spawn a planet, try to make it orbit the sun.\",\r\n        }\r\n    },\r\n    {\r\n        project: ElascticCollisions,\r\n        title: \"Elastic Collisions\",\r\n        description: \"This is a simulation of Elastic Collisions where you can see how balls interact with each other.\",\r\n        tips: {\r\n            tips: \"Hold and drag the mouse to spawn a mass ball and control its velocity, be aware don't time travel if spawned many balls (it's heavy on the cpu).\",\r\n            \"Q\": \"Press Q (A for Azerty Keybords) for gaz simulation.\",\r\n            \"R\": \"Press R to reset the simulation and empty the chamber.\",\r\n            \"G\": \"Press G to toggle Gravity On/Off.\",\r\n            \"S\": \"Press and hold S for time travel.\",\r\n        }\r\n    },\r\n    {\r\n        project: Snake,\r\n        title: \"Snake\",\r\n        description: \"This is the basic snake game where you can feed your snake so that it grows and rizes your score.\",\r\n        tips: {\r\n            tips: \"use (W, A, S, D) or Arrows for controlling the snake, try to get the maximum score without hitting the walls.\",\r\n            \"E\": \"Press E to make the snake grow (Don't cheat, play the game !!).\",\r\n        }\r\n    },\r\n    {\r\n        project: DoublePendulum,\r\n        title: \"Double Pendulum\",\r\n        description: \"If you like physics like me, you must've heard about the double pendulum, which is basically two balls attached to each other by two lines and let the gravity do its thing.\",\r\n        tips: {\r\n            tips: \"Hold and drag the pendulum to control its initial state.\",\r\n        }\r\n    },\r\n    {\r\n        project: PerlinNoise,\r\n        title: \"Perlin Noise\",\r\n        description: \"This is an animation that showcases how smooth is the perlin noise. It's not just random values, it generates randomly close values\",\r\n        tips: {\r\n            tips: \"Just enjoy the animation.\",\r\n        }\r\n    },\r\n    {\r\n        project: Sort,\r\n        title: \"Sorting Visualizer\",\r\n        description: \"This program showcases different sorting algorithms. Basically it tries to sort the lines from the shortest to the longest\",\r\n        tips: {\r\n            tips: \"Shuffle the way you like, choose and algorithm and watch it do its thing, if you get too bored hold S to make it go boom boom\",\r\n            \"R\": \"Press R to shuffle\",\r\n            \"D\": \"Press D to change the suffling method (Perlin Noise/Random)\",\r\n            \"A\": \"Press A (Q for Azerty Keyboards) to choose QuickSort algorithm\",\r\n            \"B\": \"Press B to toggle Bubble Sort\",\r\n            \"I\": \"Press I to toggle Insertion Sort\",\r\n            \"S\": \"Press and hold S for time travel.\",\r\n        }\r\n    },\r\n    {\r\n        project: PathFinder,\r\n        title: \"Path Finder & Maze Generator\",\r\n        description: \"This program showcases how the Greedy Best First Search works in Finding paths to any location on the grid, it also shows two different ways for generating random mazes, the first uses the recursive division algorithm and the second uses Depth First Search algorithm\",\r\n        tips: {\r\n            tips: \"Generate a maze and set the start location and the final one, and start the path finding process, or you can draw your own obstacles using your mouse. Be creative and have fun!\",\r\n            \"G\": \"Press G for generating a maze using the Depth First Search algorithm.\",\r\n            \"Q\": \"Press Q(A for Azerty Keyboards) for generating a maze using the recusive division algorithm.\",\r\n            \"R\": \"Press R to empty the grid\",\r\n            \"D\": \"Press D to toggle Drawing\",\r\n            \"E\": \"Press E to toggle Erasing\",\r\n            \"P\": \"Pres P to generate a map using Perlin Noise\",\r\n            \"S\": \"Press S to start the Path Finding process.\"\r\n        }\r\n    },\r\n    {\r\n        project: RayCasting,\r\n        title: \"Ray Casting\",\r\n        description: \"This is a program that simulates how light rays interact with obstacles.\",\r\n        tips: {\r\n            tips: \"Use your mouse to move the light source.\",\r\n            \"R\": \"Press R to shuffle the obstacles.\",\r\n        }\r\n    },\r\n    \r\n]\r\nexport default projects","import React from \"react\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport projects from '../data/projects';\r\n\r\nclass ProjectsHandler extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cardsStates: Array(projects.length).fill({\r\n              maximized: false,\r\n              width: 420,\r\n              height: 260,\r\n              cssClass: \"sim-div\",\r\n              gameInfoStyle: {display: \"none\"},\r\n            }),\r\n          }\r\n    }\r\n    handleMaximize(i){\r\n        this.setState(\r\n            {cardsStates: Array(projects.length).fill(0).map((value, index) => index === i && ! this.state.cardsStates[i].maximized ? \r\n              {\r\n                maximized: true,\r\n                width: 840,\r\n                height: 520,\r\n                style: {order: -1},\r\n                gameInfoStyle: {display: \"block\"},\r\n                cssClass: \"sim-div\",\r\n              }:\r\n              {\r\n                maximized: false,\r\n                width: 420,\r\n                height: 260,\r\n                style: {},\r\n                gameInfoStyle: {display: \"none\"},\r\n                cssClass: \"sim-div\",\r\n              })\r\n            }\r\n          );\r\n          window.scrollTo({top: 0, behavior: 'smooth'});\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {projects.map((element, index) =>\r\n                    <ProjectCard\r\n                    onClick={() => this.handleMaximize(index)}\r\n                    state={this.state.cardsStates[index]}\r\n                    project={element}\r\n                    key={Math.random() * 100_000_000 * Date.now()}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default ProjectsHandler;","import Footer from './components/Footer.js';\nimport React from 'react';\nimport ProjectsHandler from './components/ProjectsHandler.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <Footer/>\n        <ProjectsHandler />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nwindow.addEventListener(\"keydown\", function (e) {\n  if ([\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.code) > -1) {\n    e.preventDefault();\n  }\n}, false);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}