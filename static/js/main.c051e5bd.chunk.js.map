{"version":3,"sources":["projects/Project.js","projects/PathFinder.js","components/TwoCanvas.js","components/ProjectCard.js","projects/PerlinNoise.js","projects/OrbitSim.js","projects/Snake.js","projects/Sort.js","projects/RayCasting.js","projects/DoublePendulum.js","projects/ElasticCollisions.js","data/projects.js","components/ProjectsHandler.js","assets/files/CV-Med-Aziz-Khayati.docx","components/Profile.js","assets/images/coder.png","components/Skillset.js","components/About.js","projects/PerlinDiv.js","components/TwoSvg.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Project","two","this","width","height","renderer","domElement","addEventListener","e","onMouseMove","onMouseDown","onMouseUp","mousePos","Anchor","document","querySelector","changeState","intervalFunction","init","update","bind","mx","clientX","getBoundingClientRect","left","my","clientY","top","set","interval","setInterval","clearInterval","text","Two","Text","size","add","instance","PathFinder","clear","start","end","state","algorithm","grid","algorithmState","draw","gridHeight","gridWidth","lineGroup","Group","children","length","i","push","line","Line","stroke","code","greedyBestFirstSearch","recursiveDivision","noiseGrid","depthFirstSearchMaze","makeRectangle","Math","floor","x","y","node","min","max","translation","rect","makeRectangleRelativeToMouse","getIndexesOfRectangle","remove","fill","tmp","currentNode","getSurroundingIndexes","neighbours","forEach","coord","parentNode","distance","calculateDistanceToEnd","distanceTo","closedList","openList","getNeighbours","sort","a","b","current","shift","currentPathNode","random","areas","horizontal","vertical","condition","makeGridRect","noSpace","area","pop","leftLimit","rightLimit","topLimit","bottomLimit","rand","tmpRect","xx","yy","isAdjacentToOtherNodes","array","j","temp","shuffleArray","lastAdjecentNode","stack","getNeighbourForDepthFirstSearch","element","noise","Noise","simplex2","TwoCanvas","props","type","Types","canvas","project","isInstanciated","getInstance","className","play","pause","maximized","style","background","ref","nodeElement","appendChild","React","Component","ProjectCard","cssClass","webgl","id","onClick","Array","map","title","gameInfoStyle","description","Object","keys","tips","key","display","alignItems","PerlinNoise","position","Vector","radius","noiseLayer","blob","Path","noStroke","vertices","angle","PI","cos","sin","perlin3","multiplyScalar","addSelf","Planet","mass","orbitSim","sandbox","twoObject","Circle","Moon","velocity","planets","acceleration","trajectory","collided","planet","ab","sub","pow","removeMoon","unbind","clone","orbit","noFill","OrbitSim","spawnMoon","mouse","moons","ui","alignment","value","index","moon","indexOf","splice","tempPosition","tempMoon","getMoonMouseVelocity","group","powerLine","makeLine","futurePositions","rgb","makeGroup","Snake","highestScore","moveSnake","food","makeRoundedRectangle","body","SpawnFood","coords","vels","square","currentScore","makeText","maxScore","justChanged","elongate","died","respawn","copy","Sort","justStarted","rectWidth","frameCount","rects","perlin2","iterativeQuickSort","bubbleSort","insertionSort","low","high","pivot","swap","partitionHigh","greenAll","sqrt","LightSource","rc","rayCount","rays","theta","x1","x2","y1","y2","point1","point2","obstacles","point","x3","y3","x4","y4","ua","ub","denom","line_intersect","RayCasting","setObstacles","lightSource","lines","obstacle","drawRays","DoublePendulum","controlPendulum","m1","m2","r1","r2","g","a1","a2","path","masses","firstLine","secondLine","subSelf","normalize","atan2","sin1","cos1","sin2","cos2","traject","G","MassBall","circle","makeCircle","projects","pos","vel","massBalls","reset","randomBallSpawner","gravityIndicator","frameCountAtChange","p1","p2","v1","v2","normal","vr","vn","dot","abs","detectCollisions","n","Date","getTime","currentBall","currentPos","controlBall","simulateAtoms","ProjectsHandler","cardsStates","setState","window","innerWidth","order","scrollTo","behavior","handleMaximize","now","Profile","method","action","cv","Skillset","About","resize","imgSize","src","coder","PerlinDiv","TwoSvg","Navbar","home","about","svg","App","page","redirectToAbout","redirectToHome","documentElement","setProperty","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","preventDefault"],"mappings":"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","file":"static/js/main.c051e5bd.chunk.js","sourcesContent":["import Two, { Anchor } from \"twojs-ts\";\r\n\r\nclass Project {\r\n    static instance = null;\r\n    constructor(two) {\r\n        this.two = two;\r\n        this.width = this.two.width;\r\n        this.height = this.two.height;\r\n        this.two.renderer.domElement.addEventListener(\"mousemove\", (e) => this.onMouseMove(e));\r\n        this.two.renderer.domElement.addEventListener(\"mousedown\", () => this.onMouseDown());\r\n        this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.onMouseUp());\r\n        this.two.renderer.domElement.addEventListener(\"mouseup\", () => this.onMouseUp());\r\n        this.mousePos = new Anchor();\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            if (document.querySelector(\".TwoCanvas:hover\") === this.two.renderer.domElement)\r\n                this.changeState(e);\r\n        });\r\n        this.intervalFunction = null;\r\n        this.init();\r\n        this.update = this.update.bind(this);\r\n        this.two.bind('update', this.update);\r\n    }\r\n    changeState(e) {\r\n\r\n    }\r\n    onMouseMove(e) {\r\n        this.mx = e.clientX - this.two.renderer.domElement.getBoundingClientRect().left;\r\n        this.my = e.clientY - this.two.renderer.domElement.getBoundingClientRect().top;\r\n        this.mousePos.set(this.mx, this.my);\r\n    }\r\n    onMouseDown() {\r\n        if (this.intervalFunction)\r\n            this.interval = setInterval(() => this.intervalFunction(), 10);\r\n    }\r\n    onMouseUp() {\r\n        clearInterval(this.interval);\r\n        this.interval = false;\r\n    }\r\n    init() {\r\n        //Overwrite this init function in your project subclass to initialise your simulation\r\n        let text = new Two.Text('Two Projects', this.width / 2, this.height / 2, { size: 30 });\r\n        this.two.add(text);\r\n    }\r\n    update() {\r\n        //Overwrite this Function in your project subclass \r\n    }\r\n    toString() {\r\n        return \"Project\";\r\n    }\r\n    static isInstanciated(){\r\n        return this.instance;\r\n    }\r\n    static getInstance(two) {\r\n        if(!this.instance){\r\n            this.instance = new this(two);\r\n        }\r\n        return this.instance;\r\n    }\r\n}\r\nexport default Project;","import { Noise } from 'noisejs';\r\nimport Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nfunction shuffleArray(array) {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n}\r\n\r\nclass PathFinder extends Project {\r\n    init() {\r\n        this.two.clear();\r\n        this.start = null;\r\n        this.end = null;\r\n        this.state = \"drawing\";\r\n        this.algorithm = null\r\n        this.grid = [];\r\n        if (!this.size) {\r\n            this.size = 20;\r\n            this.algorithmState = \"justStarted\";\r\n            this.intervalFunction = this.draw;\r\n            this.gridHeight = this.height / this.size;\r\n            this.gridWidth = this.width / this.size;\r\n            this.lineGroup = new Two.Group();\r\n        }\r\n        if (this.lineGroup.children.length < this.gridWidth * this.gridHeight) {\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n                let line = new Two.Line(i * this.size, 0, i * this.size, this.height);\r\n                line.stroke = \"lightblue\";\r\n                this.lineGroup.add(line);\r\n                if (i < this.gridHeight) {\r\n                    let line = new Two.Line(0, i * this.size, this.width, i * this.size);\r\n                    line.stroke = \"lightblue\";\r\n                    this.lineGroup.add(line);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n            }\r\n        }\r\n\r\n        this.two.add(this.lineGroup);\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyS\") {\r\n            if (this.start && this.end && !this.algorithm) {\r\n                this.algorithm = this.greedyBestFirstSearch;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyQ\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.recursiveDivision;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyP\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.noiseGrid;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyG\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.depthFirstSearchMaze;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        }\r\n        else if (e.code === \"KeyD\") {\r\n            this.state = \"drawing\";\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.state = \"erasing\";\r\n        }\r\n        else if (e.code === \"KeyR\") {\r\n            this.state = \"resetting\";\r\n            this.init();\r\n        }\r\n    }\r\n    makeRectangleRelativeToMouse() {\r\n        return this.two.makeRectangle(\r\n            Math.floor((this.mx / this.size) % this.gridWidth) * this.size + this.size / 2,\r\n            Math.floor((this.my / this.size) % this.gridHeight) * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    makeGridRect(x, y) {\r\n        return this.two.makeRectangle(\r\n            x * this.size + this.size / 2,\r\n            y * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    getIndexesOfRectangle(node) {\r\n        let x = Math.min(\r\n            Math.max((\r\n                node.translation.x - this.size / 2) / this.size,\r\n                0),\r\n            this.width - 1\r\n        );\r\n        let y = (node.translation.y - this.size / 2) / this.size;\r\n        return [x, y];\r\n    }\r\n    draw() {\r\n        let rect = this.makeRectangleRelativeToMouse();\r\n        let [x, y] = this.getIndexesOfRectangle(rect);\r\n        if (this.state === \"drawing\") {\r\n            if (!this.grid[x][y]) {\r\n                this.grid[x][y] = rect;\r\n                if (!this.start) {\r\n                    this.start = rect\r\n                    this.start.fill = \"red\";\r\n                }\r\n                else if (!this.end) {\r\n                    this.end = rect;\r\n                    this.end.fill = \"green\";\r\n                }\r\n                else {\r\n                    rect.fill = \"black\";\r\n                }\r\n            }\r\n            else {\r\n                this.two.remove(rect);\r\n            }\r\n        }\r\n        else if (this.state === \"erasing\") {\r\n            this.two.remove(rect);\r\n            this.two.remove(this.grid[x][y]);\r\n            if (this.grid[x][y] === this.start)\r\n                this.start = null;\r\n            else if (this.grid[x][y] === this.end)\r\n                this.end = null;\r\n            this.grid[x][y] = null;\r\n        }\r\n\r\n    }\r\n    getSurroundingIndexes(node) {\r\n        let [x, y] = this.getIndexesOfRectangle(node);\r\n        const tmp = [];\r\n        if (x !== 0)\r\n            tmp.push([-1, 0])\r\n        if (x !== this.gridWidth - 1)\r\n            tmp.push([1, 0])\r\n        if (y !== this.gridHeight - 1)\r\n            tmp.push([0, 1])\r\n        if (y !== 0)\r\n            tmp.push([0, -1])\r\n        return tmp;\r\n    }\r\n    getNeighbours(node) {\r\n        let [x, y] = this.getIndexesOfRectangle(node.currentNode);\r\n        const tmp = this.getSurroundingIndexes(node.currentNode);\r\n        let neighbours = []\r\n        tmp.forEach((coord) => {\r\n            if (!this.grid[x + coord[0]][coord[1] + y]) {\r\n                const tmp = this.grid[x + coord[0]][coord[1] + y] = this.two.makeRectangle(\r\n                    Math.floor(x + coord[0]) * this.size + this.size / 2,\r\n                    Math.floor(coord[1] + y) * this.size + this.size / 2,\r\n                    this.size,\r\n                    this.size\r\n                );\r\n                tmp.fill = \"lightblue\";\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: tmp,\r\n                    distance: this.calculateDistanceToEnd(tmp)\r\n                });\r\n            }\r\n            else if (this.grid[x + coord[0]][coord[1] + y] === this.end) {\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: this.grid[x + coord[0]][coord[1] + y],\r\n                    distance: this.calculateDistanceToEnd(this.grid[x + coord[0]][coord[1] + y])\r\n                });\r\n            }\r\n        });\r\n        return neighbours;\r\n    }\r\n    calculateDistanceToEnd(node) {\r\n        return node.translation.distanceTo(this.end.translation);\r\n    }\r\n    greedyBestFirstSearch() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.closedList = [{\r\n                parentNode: null,\r\n                currentNode: this.start,\r\n                distance: this.calculateDistanceToEnd(this.start)\r\n            }];\r\n            this.openList = this.getNeighbours(this.closedList[0]);\r\n            this.algorithmState = \"findingPath\";\r\n        } else if (this.algorithmState === \"findingPath\") {\r\n            this.openList.sort((a, b) => a.distance - b.distance);\r\n            let current = this.openList.shift();\r\n            if (current && current.currentNode !== this.end) {\r\n                current.currentNode.fill = \"skyblue\";\r\n                this.closedList.push(current);\r\n                this.getNeighbours(current).forEach((e) =>\r\n                    this.openList.push(e)\r\n                );\r\n            } else if (!current) {\r\n                this.algorithmState = \"pathNotFound\";\r\n                this.algorithm = null;\r\n            } else {\r\n                this.algorithmState = \"pathFound\";\r\n                this.closedList.push(current);\r\n                this.currentPathNode = current.parentNode;\r\n            }\r\n        } else if (this.algorithmState === \"pathFound\") {\r\n            if (this.currentPathNode.currentNode !== this.start) {\r\n                this.currentPathNode.currentNode.fill = \"yellow\";\r\n                this.currentPathNode = this.currentPathNode.parentNode;\r\n            } else {\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    rand(x, y) {\r\n        return x = Math.floor(Math.random() * (1 + y - x)) + x;\r\n    }\r\n    recursiveDivision() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.algorithmState = \"borderLimiting\";\r\n            this.i = 0;\r\n            this.areas = [{ horizontal: [0, this.gridWidth - 1], vertical: [0, this.gridHeight - 1] }];\r\n        } else if (this.algorithmState === \"borderLimiting\") {\r\n            let condition = 0;\r\n            if (this.i < this.gridWidth) {\r\n                this.grid[this.i][0] = this.makeGridRect(this.i, 0);\r\n                this.grid[this.i][0].fill = \"black\";\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1] = this.makeGridRect(this.gridWidth - 1 - this.i, this.gridHeight - 1);\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            if (0 < this.i && this.i < this.gridHeight - 1) {\r\n                this.grid[0][this.i] = this.makeGridRect(0, this.i)\r\n                this.grid[0][this.i].fill = \"black\";\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i] = this.makeGridRect(this.gridWidth - 1, this.gridHeight - 1 - this.i);\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            this.i++;\r\n            if (condition === 2)\r\n                this.algorithmState = \"mazeGenerating\";\r\n        } else if (this.areas.length && this.algorithmState === \"mazeGenerating\") {\r\n            //let horizontal = Boolean(Math.round(Math.random()));\r\n            let noSpace = 0;\r\n            const area = this.areas.pop();\r\n            let [leftLimit, rightLimit] = area.horizontal;\r\n            let [topLimit, bottomLimit] = area.vertical;\r\n            let horizontal = (rightLimit - leftLimit) > (bottomLimit - topLimit);\r\n            if (horizontal) {\r\n                if (rightLimit - leftLimit > 3) {\r\n                    this.x = this.rand(leftLimit + 3, rightLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: [leftLimit, this.x], vertical: area.vertical },\r\n                        { horizontal: [this.x, rightLimit], vertical: area.vertical }\r\n                    );\r\n                    if (!this.grid[this.x][topLimit])\r\n                        topLimit += 2;\r\n                    if (!this.grid[this.x][bottomLimit])\r\n                        bottomLimit -= 2;\r\n                    this.y = this.rand(topLimit + 1, bottomLimit - 1)\r\n                    this.i = topLimit;\r\n                    this.bottomLimit = bottomLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = true;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (!horizontal) {\r\n                if (bottomLimit - topLimit > 3) {\r\n                    this.y = this.rand(topLimit + 3, bottomLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: area.horizontal, vertical: [topLimit, this.y] },\r\n                        { horizontal: area.horizontal, vertical: [this.y, bottomLimit] }\r\n                    );\r\n                    if (!this.grid[leftLimit][this.y])\r\n                        leftLimit += 2;\r\n                    if (!this.grid[rightLimit][this.y])\r\n                        rightLimit -= 2;\r\n                    this.x = this.rand(leftLimit + 1, rightLimit - 1)\r\n                    this.i = leftLimit;\r\n                    this.rightLimit = rightLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = false;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (noSpace == 1)\r\n                this.areas.pop();\r\n        } else if (this.algorithmState === \"lineDrawing\") {\r\n            if (this.vertical) {\r\n                if (this.i <= this.bottomLimit) {\r\n                    if (this.i != this.y && !this.grid[this.x][this.i]) {\r\n                        this.grid[this.x][this.i] = this.makeGridRect(this.x, this.i);\r\n                        this.grid[this.x][this.i].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n\r\n            } else {\r\n                if (this.i <= this.rightLimit) {\r\n                    if (this.i != this.x && !this.grid[this.i][this.y]) {\r\n                        this.grid[this.i][this.y] = this.makeGridRect(this.i, this.y);\r\n                        this.grid[this.i][this.y].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n            }\r\n            this.i++;\r\n        } else {\r\n            this.algorithm = null;\r\n        }\r\n    }\r\n    getNeighbourForDepthFirstSearch(node) {\r\n        let [x, y] = node;\r\n        let tmpRect = this.makeGridRect(x, y);\r\n        const tmp = this.getSurroundingIndexes(tmpRect);\r\n        this.two.remove(tmpRect);\r\n        let neighbours = []\r\n        tmp.forEach((coord) => {\r\n            let [xx, yy] = [x + coord[0], coord[1] + y];\r\n            if (this.grid[xx][yy]) {\r\n                if (this.isAdjacentToOtherNodes([xx, yy]) <= 1)\r\n                    neighbours.push([xx, yy]);\r\n            }\r\n        });\r\n        shuffleArray(neighbours);\r\n        return neighbours;\r\n    }\r\n    isAdjacentToOtherNodes(node) {\r\n        let [x, y] = node;\r\n        let tmpRect = this.makeGridRect(x, y);\r\n        const tmp = this.getSurroundingIndexes(tmpRect);\r\n        this.two.remove(tmpRect);\r\n        if (x !== 0 && y !== 0)\r\n            tmp.push([-1, -1])\r\n        if (x !== this.gridWidth - 1 && y !== this.gridHeight - 1)\r\n            tmp.push([1, 1])\r\n        if (x !== 0 && y !== this.gridHeight - 1)\r\n            tmp.push([-1, 1])\r\n        if (x !== this.gridWidth - 1 && y !== 0)\r\n            tmp.push([1, -1])\r\n        let condition = 0;\r\n        let lastAdjecentNode = null;\r\n        tmp.forEach((coord) => {\r\n            let node = this.grid[x + coord[0]][coord[1] + y];\r\n            if (!node) {\r\n                if (lastAdjecentNode) {\r\n                    if (new Anchor(x + coord[0], coord[1] + y).distanceTo(lastAdjecentNode) > 1)\r\n                        condition++;\r\n                }\r\n                else {\r\n                    condition++;\r\n                    lastAdjecentNode = new Anchor(x + coord[0], coord[1] + y);\r\n                }\r\n            }\r\n        });\r\n        return condition;\r\n    }\r\n    depthFirstSearchMaze() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.algorithmState = \"mazeGenerating\";\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                for (let j = 0; j < this.gridHeight; j++) {\r\n                    this.grid[i][j] = this.makeGridRect(i, j);\r\n                    this.grid[i][j].fill = \"black\";\r\n                }\r\n            }\r\n            this.stack = [];\r\n            let x = this.rand(0, this.gridWidth - 1);\r\n            let y = this.rand(0, this.gridHeight - 1);\r\n            this.stack.push([x, y]);\r\n        } else if (this.algorithmState === \"mazeGenerating\" && this.stack.length) {\r\n            this.current = this.stack[this.stack.length - 1];\r\n            this.stack.pop();\r\n            if (this.isAdjacentToOtherNodes(this.current) <= 1) {\r\n                let [x, y] = this.current;\r\n                this.two.remove(this.grid[x][y]);\r\n                this.grid[x][y] = null;\r\n                this.getNeighbourForDepthFirstSearch(this.current).forEach(element => this.stack.push(element));\r\n            }\r\n        } else {\r\n            this.algorithm = null;\r\n        }\r\n    }\r\n    noiseGrid() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.noise = new Noise(Math.random());\r\n            this.algorithmState = \"gridMaking\";\r\n        } else if (this.algorithmState === \"gridMaking\") {\r\n            if (this.i < this.gridWidth) {\r\n                if (this.j < this.gridHeight) {\r\n                    let noise = this.noise.simplex2(this.i * 0.1, this.j * 0.1)\r\n                    if (noise >= 0) {\r\n                        this.grid[this.i][this.j] = this.makeGridRect(this.i, this.j);\r\n                        this.grid[this.i][this.j].fill = \"black\";\r\n                    }\r\n                    this.j++;\r\n                } else {\r\n                    this.j = 0;\r\n                    this.i++;\r\n                }\r\n            } else {\r\n                this.algorithmState = \"justStarted\";\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default PathFinder;","import React from 'react';\r\nimport Two from 'twojs-ts'\r\n\r\nclass TwoCanvas extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        const type = this.props.type ? this.props.type : Two.Types.canvas;\r\n        if(!this.props.project.isInstanciated()){\r\n            this.two = new Two({ width: this.props.width, height: this.props.height, type: type });\r\n            this.props.project.getInstance(this.two);\r\n            this.two.renderer.domElement.className = \"TwoCanvas\";\r\n            this.two.renderer.domElement.addEventListener(\"mouseenter\", () => this.play());\r\n            this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.pause());\r\n        }else{\r\n            let instance = this.props.project.getInstance(this.two);\r\n            if(instance.two.width != this.props.width){\r\n                instance.width = instance.two.width = this.props.width;\r\n                instance.height = instance.two.height = this.props.height;\r\n                instance.two.clear();\r\n                instance.init();\r\n            }\r\n            this.two = instance.two;\r\n        }\r\n    }\r\n    play(){\r\n        return !this.two.maximized ? this.two.play(): null;\r\n    }\r\n    pause(){\r\n        return !this.two.maximized ? this.two.pause(): null;\r\n    }\r\n    init() {\r\n        this.two.maximized = this.props.maximized;\r\n        if (!this.props.maximized) {\r\n            this.two.renderer.domElement.style.background = null;\r\n            this.two.pause();\r\n        } else {\r\n            this.two.renderer.domElement.style.background = \"rgba(255, 255, 255, 1)\";\r\n            this.two.play();\r\n        }\r\n        this.two.update();\r\n    }\r\n    render() {\r\n        this.init();\r\n        return (\r\n            <div ref={(nodeElement) => { nodeElement && nodeElement.appendChild(this.two.renderer.domElement) }}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TwoCanvas;","import React from 'react';\r\nimport Two from 'twojs-ts';\r\nimport PathFinder from '../projects/PathFinder';\r\nimport TwoCanvas from './TwoCanvas';\r\nclass ProjectCard extends React.Component {\r\n    constructor(two) {\r\n        super(two);\r\n        this.state = this.props.state;\r\n    }\r\n    render() {\r\n        this.state = this.props.state;\r\n        const project = this.props.project;\r\n        return (\r\n            <div className={this.state.cssClass} style= {this.state.style}>\r\n                <div className={this.state.maximized ? \"divTwoMaximized\" : \"divTwo\"}>\r\n                    <TwoCanvas\r\n                        maximized = {this.state.maximized}\r\n                        project={project.project}\r\n                        key={project}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        type={project.project == PathFinder ? Two.Types.webgl : Two.Types.canvas}\r\n                    />\r\n                    <button id=\"maximize\" onClick={() => this.props.onClick()}></button>\r\n                </div>\r\n                {Array(1).fill(0).map(() => {if(! this.state.maximized) return <h1 key='Paused'>Paused</h1>;})}\r\n                <h2 className=\"sim-title\" style= {this.state.style}>{project.title}</h2>\r\n                <div className=\"game-info\" style={this.state.gameInfoStyle}>\r\n                    <p>About: {project.description}</p>\r\n                    {Object.keys(project.tips).map(key => {\r\n                        if(key == \"tips\")\r\n                            return (<p key={key}>Tips: {project.tips[key]}</p>)\r\n                        else{\r\n                            return (\r\n                                <div key={key} style={{display: \"flex\", alignItems:\"center\"}}>\r\n                                    <button id=\"keyButton\">{key}</button>\r\n                                    <p >{project.tips[key]}</p>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    })}\r\n                </div>       \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectCard;","import Two from 'twojs-ts';\r\nimport { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass PerlinNoise extends Project {\r\n    init(){\r\n        this.noise = new Noise(Math.random());\r\n        this.position = new Two.Vector(this.width / 2, this.height / 2);\r\n        this.radius = this.two.height / 3;\r\n        this.noiseLayer = 0;\r\n        this.blob = new Two.Path([], true, true);\r\n        this.two.add(this.blob);\r\n        this.blob.fill = 'rgb(0,0,40)'\r\n        this.blob.noStroke();\r\n    }\r\n    update() {\r\n        const vertices = [];\r\n        this.noiseLayer += 0.01;\r\n        for (let angle = 0; angle < 2 * Math.PI; angle += 0.01) {\r\n            var x = Math.cos(angle);\r\n            var y = Math.sin(angle);\r\n\r\n            var position = new Two.Anchor(x, y);\r\n            var radius = this.noise.perlin3(x*2, y*2, this.noiseLayer) * this.radius/3 + this.radius;\r\n\r\n            position.multiplyScalar(radius);\r\n            position.addSelf(this.position);\r\n\r\n            vertices.push(position);\r\n        }\r\n        this.blob.vertices = vertices;\r\n    }\r\n}\r\nexport default PerlinNoise;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst G = 100;\r\n\r\nclass Planet {\r\n    constructor(position, mass, two, orbitSim) {\r\n        this.orbitSim = orbitSim;\r\n        this.two = two;\r\n        this.position = position;\r\n        this.mass = mass;\r\n        this.radius = mass * 10;\r\n        this.init();\r\n        this.sandbox = false;\r\n    }\r\n    init() {\r\n        this.twoObject = new Two.Circle(this.position.x, this.position.y, this.radius);\r\n        this.two.add(this.twoObject);\r\n        this.twoObject.fill = \"black\";\r\n        this.twoObject.translation = this.position;\r\n    }\r\n}\r\nclass Moon extends Planet {\r\n    constructor(position, velocity, mass, two, planets, orbitSim) {\r\n        super(position, mass, two, orbitSim);\r\n        this.velocity = velocity;\r\n        this.planets = planets;\r\n        this.acceleration = new Two.Anchor();\r\n        this.trajectory = [];\r\n    }\r\n    update() {\r\n        let collided = false;\r\n        this.planets.forEach(planet => {\r\n            let ab = new Anchor();\r\n            ab.sub(planet.position, this.position);\r\n            ab.multiplyScalar(G * planet.mass / Math.pow(ab.length(), 3));\r\n            this.velocity.addSelf(ab);\r\n            if (ab.sub(this.position, planet.position).length() < this.radius + planet.radius) {\r\n                collided = true;\r\n                if (!this.sandbox)\r\n                    this.orbitSim.removeMoon(this);\r\n            }\r\n        });\r\n        this.position.addSelf(this.velocity);\r\n        if (this.position.length() > 5000)\r\n            this.sandbox ? collided = true : this.orbitSim.removeMoon(this);\r\n        if (collided && !this.sandbox)\r\n            this.two.unbind('update', this.update);\r\n        if (!this.sandbox && !collided) {\r\n            if (this.trajectory.length > 255)\r\n                this.trajectory.shift();\r\n            this.trajectory.push(this.position.clone());\r\n            this.two.remove(this.orbit);\r\n            this.orbit = new Two.Path(this.trajectory, false, true);\r\n            this.two.add(this.orbit);\r\n            this.orbit.noFill();\r\n        }\r\n        return collided;\r\n    }\r\n}\r\n\r\nclass OrbitSim extends Project {\r\n    init() {\r\n        this.intervalFunction = this.spawnMoon;\r\n        this.mouse = false;\r\n        this.mousePos = new Anchor();\r\n        this.planets = [new Planet(new Anchor(this.width / 2, this.height / 2), this.height / 100, this.two, this)];\r\n        this.moons = [new Moon(new Anchor(this.width / 4, this.height / 2), new Anchor(0, 1.5), this.height / 350, this.two, this.planets, this)]\r\n        this.ui = new Two.Text(`Planets remaining: ${this.moons.length}`, 10, 20, { alignment: \"left\", size: this.height / 15 });\r\n        this.two.add(this.ui);\r\n    }\r\n    update() {\r\n        this.ui.value = `Planets remaining: ${this.moons.length}`;\r\n        for (let index = 0; index < this.moons.length; index++) {\r\n            this.moons[index].update();\r\n        }\r\n    }\r\n    removeMoon(moon) {\r\n        let index = this.moons.indexOf(moon);\r\n        if (index > 0)\r\n            this.moons.splice(index, 1);\r\n        this.two.unbind('update', moon.update);\r\n        this.two.remove(moon.orbit);\r\n        this.two.remove(moon.twoObject);\r\n    }\r\n    onMouseDown() {\r\n        this.tempPosition = this.mousePos.clone();\r\n        this.tempMoon = new Moon(this.mousePos.clone(), new Anchor(0, 0), Math.random() * this.height / 150 + 0.1, this.two, this.planets, this);\r\n        this.tempMoon.sandbox = true;\r\n        this.mouse = setInterval(() => this.spawnMoon(), 10);\r\n    }\r\n    onMouseUp() {\r\n        if (this.mouse) {\r\n            clearInterval(this.mouse);\r\n            this.moons.push(this.tempMoon);\r\n            this.tempMoon.position = this.tempPosition.clone();\r\n            this.tempMoon.twoObject.translation = this.tempMoon.position;\r\n            this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n            this.tempMoon.sandbox = false;\r\n            this.mouse = false;\r\n            this.two.remove(this.group);\r\n            this.two.remove(this.powerLine);\r\n        }\r\n    }\r\n    getMoonMouseVelocity() {\r\n        let ab = new Anchor();\r\n        ab.sub(this.tempMoon.position, this.mousePos);\r\n        ab.multiplyScalar(0.01);\r\n        return ab;\r\n    }\r\n    spawnMoon() {\r\n        this.two.remove(this.group);\r\n        this.two.remove(this.powerLine);\r\n        this.tempMoon.position = this.tempPosition.clone();\r\n        this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n        this.powerLine = this.two.makeLine(this.mousePos.x, this.mousePos.y, this.tempMoon.position.x, this.tempMoon.position.y);\r\n        const iterations = 500;\r\n        const futurePositions = [];\r\n        for (let index = 0; index < iterations; index++) {\r\n            if (this.tempMoon.update())\r\n                break;\r\n            if (index % 20 === 0) {\r\n                futurePositions.push(new Two.Circle(this.tempMoon.position.x, this.tempMoon.position.y, 1));\r\n                const rgb = 255 * index / iterations;\r\n                futurePositions[futurePositions.length - 1].fill = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n                futurePositions[futurePositions.length - 1].stroke = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n            }\r\n        }\r\n        this.group = this.two.makeGroup(futurePositions);\r\n    }\r\n\r\n}\r\n\r\nexport default OrbitSim;","import { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass Snake extends Project {\r\n    constructor(two){\r\n        super(two);\r\n        this.highestScore = 0;\r\n    }\r\n    init() {\r\n        document.addEventListener(\"keydown\", (e) => this.moveSnake(e));\r\n        this.size = 20;\r\n        this.velocity = 4;\r\n        this.length = 5;\r\n        this.position = new Anchor(100 + this.size / 2, 120 + this.size / 2);\r\n        this.food = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        this.food.fill = \"rgb(0,0,100)\";\r\n        this.food.translation = new Anchor(0, 0);\r\n        this.body = [];\r\n        this.SpawnFood();\r\n        this.coords = [this.position];\r\n        this.vels = [];\r\n        for (let index = 0; index < this.length; index++) {\r\n            if (index !== 0)\r\n                this.coords.push(this.position.clone().addSelf(new Anchor(-this.size * index, 0)));\r\n            this.vels.push(new Anchor(this.velocity, 0));\r\n            let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n            square.translation = this.coords[index];\r\n            square.fill = index === 0 ? \"red\" : \"black\";\r\n            this.body.push(square);\r\n        }\r\n        this.currentScore = this.two.makeText(`Score: ${this.body.length}`, 15, 50, { size: 20, alignment: \"left\" });\r\n        this.maxScore = this.two.makeText(`Highest Score: ${this.highestScore ? this.highestScore : 0}`, 15, 80, { size: 20, alignment: \"left\" })\r\n    }\r\n    elongate() {\r\n        this.coords.push(this.coords[this.coords.length - 1].clone());\r\n        this.vels.push(new Anchor(0, 0));\r\n        let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        square.translation = this.coords[this.coords.length - 1];\r\n        square.fill = \"black\";\r\n        this.body.push(square);\r\n    }\r\n    moveSnake(e) {\r\n        if ((e.code === \"KeyW\" || e.code === \"ArrowUp\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, -this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyS\" || e.code === \"ArrowDown\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyA\" || e.code === \"ArrowLeft\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(-this.velocity, 0);\r\n        }\r\n        else if ((e.code === \"KeyD\" || e.code === \"ArrowRight\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(this.velocity, 0);\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.justChanged = this.elongate;\r\n        }\r\n    }\r\n    SpawnFood() {\r\n        var condition = true;\r\n        var x, y;\r\n        while(condition){\r\n            condition = false;\r\n            x = Math.floor(Math.random() * this.width / this.size) * this.size + this.size / 2;\r\n            y = Math.floor(Math.random() * this.height / this.size) * this.size + this.size / 2;\r\n            for (let index = 0; index < this.body.length; index++) {\r\n                if(!this.body[index].translation.distanceTo(new Anchor(x, y))){\r\n                    condition = true;\r\n                    break;\r\n                }  \r\n            }  \r\n        }      \r\n        this.food.translation.set(x, y);\r\n    }\r\n    respawn() {\r\n        this.two.clear();\r\n        this.init();\r\n    }\r\n    update() {\r\n        let died = false;\r\n        this.coords.forEach((position, index) => {\r\n            position.addSelf(this.vels[index]);\r\n            if (!position.distanceTo(this.position) && index !== 0)\r\n                died = true;\r\n        })\r\n        if (this.position.x < 0 || this.position.y < 0 || this.position.x > this.width || this.position.y > this.height)\r\n            died = true;\r\n        if (died)\r\n            this.respawn();\r\n\r\n        if ((this.position.x - this.size / 2) % this.size === 0 && (this.position.y - this.size / 2) % this.size === 0) {\r\n            for (let index = this.vels.length - 1; index > 0; index--) {\r\n                this.vels[index].copy(this.vels[index - 1]);\r\n            }\r\n            if (typeof this.justChanged === \"function\") {\r\n                this.justChanged();\r\n                this.justChanged = null;\r\n            }\r\n            else if (this.justChanged) {\r\n                this.vels[0].copy(this.justChanged);\r\n                this.justChanged = null;\r\n            }\r\n        }\r\n\r\n        if (!this.position.distanceTo(this.food.translation)) {\r\n            this.SpawnFood();\r\n            this.elongate();\r\n            this.currentScore.value = `Score: ${this.body.length}`;\r\n            if (this.body.length > this.highestScore) {\r\n                this.highestScore = this.body.length;\r\n                this.maxScore.value = `Highest Score: ${this.highestScore}`;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Snake;","import { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass Sort extends Project {\r\n    constructor(two){\r\n        super(two);\r\n        this.id = Math.floor( Math.random() * 100 );\r\n        this.random = true;\r\n    }\r\n    init() {\r\n        this.two.clear();\r\n        this.justStarted = \"justStarted\";\r\n        this.noise = new Noise(Math.random());\r\n        this.rectWidth = 1;\r\n        this.algorithm = null;\r\n        this.frameCount = - 10;\r\n        this.length = this.width / this.rectWidth;\r\n        this.rects = Array(this.length).fill(0).map((value, index) => {\r\n            let rect = this.two.makeRectangle(\r\n                index * this.rectWidth,\r\n                this.height / 2,\r\n                this.rectWidth,\r\n                this.random?\r\n                this.height * Math.random():\r\n                this.noise.perlin2(index * 0.01, 0) * this.height + this.height / 2\r\n            );\r\n            rect.fill = \"black\";\r\n            return rect;\r\n        })\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyR\") {\r\n            this.init();\r\n        } else if (e.code === \"KeyD\" && this.two.frameCount - this.frameCount > 10) {\r\n            this.frameCount = this.two.frameCount;\r\n            this.random = ! this.random;\r\n            this.init();\r\n        } else if (e.code === \"KeyA\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.iterativeQuickSort;\r\n        } else if (e.code === \"KeyB\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.bubbleSort;\r\n        } else if (e.code === \"KeyI\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.insertionSort;\r\n        } else if (e.code === \"KeyS\") {\r\n            for (let index = 0; index < 300; index++)\r\n                this.update()\r\n        }\r\n    }\r\n    swap(i, j) {\r\n        let tmp = this.rects[i].height;\r\n        this.rects[i].height = this.rects[j].height;\r\n        this.rects[j].height = tmp;\r\n    }\r\n    partitionHigh(low, high) {\r\n        let pivot = this.rects[high].height;\r\n        let i = low;\r\n        for (let j = low; j < high; j++) {\r\n            if (this.rects[j].height <= pivot) {\r\n                this.swap(i, j);\r\n                i++;\r\n            }\r\n        }\r\n        this.swap(i, high);\r\n        return i;\r\n    }\r\n    iterativeQuickSort() {\r\n        if (this.justStarted) {\r\n            this.stack = [];\r\n            this.start = 0;\r\n            this.end = this.rects.length - 1;\r\n            this.stack.push({ x: this.start, y: this.end });\r\n            this.justStarted = false;\r\n        }\r\n        if (this.stack.length) {\r\n            const { x, y } = this.stack.shift();\r\n            const PI = this.partitionHigh(x, y);\r\n\r\n            if (PI - 1 > x) {\r\n                this.stack.push({ x: x, y: PI - 1 });\r\n            }\r\n            if (PI + 1 < y) {\r\n                this.stack.push({ x: PI + 1, y: y });\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    bubbleSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length - 1) {\r\n            if (this.j < this.length - this.i - 1) {\r\n                if (this.rects[this.j].height > this.rects[this.j + 1].height) {\r\n                    this.swap(this.j, this.j + 1);\r\n                }\r\n                this.j++;\r\n            }\r\n            else {\r\n                this.j = 0;\r\n                this.i++;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    insertionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 1;\r\n            this.j = 0;\r\n            this.current = this.rects[this.i].height;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j > - 1 && this.current < this.rects[this.j].height) {\r\n                this.rects[this.j + 1].height = this.rects[this.j].height;\r\n                this.j--;\r\n            } else {\r\n                this.rects[this.j + 1].height = this.current;\r\n                this.i++;\r\n                this.j = this.i - 1;\r\n                if (this.i < this.length)\r\n                    this.current = this.rects[this.i].height;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    selectionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = this.i + 1;\r\n            this.min = this.i;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j < this.length) {\r\n                if (this.rects[this.j].height < this.rects[this.min].height) {\r\n                    this.min = this.j\r\n                }\r\n                this.j++;\r\n            } else {\r\n                this.swap(this.i, this.min);\r\n                this.i++;\r\n                this.j = this.i + 1;\r\n                this.min = this.i;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    greenAll() {\r\n        if (this.i < this.length) {\r\n            this.rects[this.i].fill = \"green\";\r\n            this.rects[this.i].stroke = \"green\";\r\n            this.i++;\r\n        } else {\r\n            this.init();\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default Sort;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst PI = Math.PI;\r\nconst sqrt = Math.sqrt;\r\n\r\nfunction line_intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n    var ua, ub, denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n    if (denom == 0) {\r\n        return null;\r\n    }\r\n    ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;\r\n    ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;\r\n    let seg1 = ua >= 0 && ua <= 1;\r\n    let seg2 = ub >= 0 && ub <= 1;\r\n    if(seg1 && seg2)\r\n        return new Anchor(x1 + ua * (x2 - x1), y1 + ua * (y2 - y1));\r\n    else \r\n        return null;\r\n}\r\n\r\nclass LightSource {\r\n    constructor(rc) {\r\n        this.rc = rc;\r\n        this.position = rc.mousePos;\r\n        this.rayCount = 101;\r\n    }\r\n    drawRays() {\r\n        this.rc.two.remove(this.rays);\r\n        this.rays = new Two.Group();\r\n        for (let theta = 0; theta < 2 * PI; theta += 2 * PI / this.rayCount) {\r\n            let x1 = this.position.x + this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let x2 = this.position.x - this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let y1 = this.position.y + (x1 - this.position.x) * sin(theta) / cos(theta);\r\n            let y2 = this.position.y + (x2 - this.position.x) * sin(theta) / cos(theta);\r\n            let point1 = new Anchor(x1, y1);\r\n            let point2 = new Anchor(x2, y2);\r\n            this.rc.obstacles.forEach(element => {\r\n                let point = line_intersect(\r\n                    x1, y1,\r\n                    x2, y2,\r\n                    element[0].x, element[0].y,\r\n                    element[1].x, element[1].y\r\n                );\r\n                if (point && (x1 - this.position.x) * (point.x - this.position.x) > 0){\r\n                    if (point.distanceTo(this.position) < point1.distanceTo(this.position))\r\n                        point1.copy(point);\r\n                }    \r\n                else if (point){\r\n                    if (point.distanceTo(this.position) < this.position.distanceTo(point2))\r\n                        point2.copy(point);\r\n                }               \r\n            });\r\n            let line = new Two.Line(point1.x, point1.y, point2.x, point2.y);\r\n            line.stroke = \"white\";\r\n            this.rays.add(line);\r\n        }\r\n        this.rc.two.add(this.rays);\r\n    }\r\n}\r\n\r\nclass RayCasting extends Project {\r\n    init() {\r\n        this.rect = this.two.makeRectangle(this.width / 2, this.height / 2, this.width, this.height);\r\n        this.rect.fill = \"black\";\r\n        this.setObstacles();  \r\n        this.lightSource = new LightSource(this);\r\n        \r\n    }\r\n    setObstacles(){\r\n        this.two.remove(this.lines);\r\n        this.lines = new Two.Group();\r\n        this.obstacles = []\r\n        for (let i = 0; i < 5; i++) {\r\n            let x1 = Math.random()*this.width;\r\n            let x2 = Math.random()*this.width;\r\n            let y1 = Math.random()*this.height;\r\n            let y2 = Math.random()*this.height;\r\n            let obstacle = new Two.Line(x1, y1, x2, y2);\r\n            obstacle.stroke = \"white\";\r\n            this.lines.add(obstacle);\r\n            this.obstacles.push([new Anchor(x1, y1), new Anchor(x2, y2)]);\r\n        }\r\n        this.two.add(this.lines);\r\n    }\r\n    update() {\r\n        this.lightSource.drawRays();\r\n    }\r\n    changeState(e){\r\n        if(e.code === \"KeyR\"){\r\n            this.setObstacles();\r\n        }\r\n    }\r\n}\r\nexport default RayCasting;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass DoublePendulum extends Project {\r\n    init() {\r\n        this.intervalFunction = this.controlPendulum;\r\n        this.m1 = this.m2 = this.height / 30;\r\n        this.r1 = this.r2 = this.height / 4;\r\n        this.g = 0.07;\r\n        this.a1 = [3.9, 0, 0];\r\n        this.a2 = [2.5, 0, 0];\r\n        this.path = [];\r\n        this.position = new Anchor(this.width / 2, this.height / 3);\r\n        this.masses = [new Two.Circle(0, 0, this.m1), new Two.Circle(0, 0, this.m2)];\r\n        this.masses.forEach((mass) => {\r\n            mass.translation = new Anchor();\r\n            mass.fill = \"black\";\r\n        })\r\n        this.firstLine = this.two.makeLine();\r\n        this.secondLine = this.two.makeLine();\r\n        this.firstLine.vertices = [this.position, this.masses[0].translation];\r\n        this.secondLine.vertices = [ this.masses[1].translation, this.masses[0].translation];\r\n        this.two.add(this.masses);\r\n        // this.text = new Two.Text(\"Hold and drag to change masses' position..\", 10, 30, {alignment: \"left\", size: this.height / 20});\r\n        // this.two.add(this.text);\r\n    }\r\n    controlPendulum(){\r\n        let mousePos = new Anchor(this.mx, this.my);\r\n        if(mousePos.distanceTo(this.masses[0].translation) < mousePos.distanceTo(this.masses[1].translation)){\r\n            mousePos.subSelf(this.position);\r\n            mousePos.normalize();\r\n            this.a1[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }else{\r\n            mousePos.subSelf(this.masses[0].translation);\r\n            mousePos.normalize();\r\n            this.a2[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }\r\n        this.a1[1] = this.a2[1] = 0;\r\n    }\r\n    update() {\r\n        const sin1 = Math.sin(this.a1[0])\r\n        const cos1 = Math.cos(this.a1[0])\r\n        const sin2 = Math.sin(this.a2[0])\r\n        const cos2 = Math.cos(this.a2[0])\r\n\r\n        this.a1[2] = -this.g * (2 * this.m1 + this.m2) * sin1 - this.m2 * this.g * Math.sin(this.a1[0] - 2 * this.a2[0])\r\n        this.a1[2] -= 2 * Math.sin(this.a1[0] - this.a2[0]) * this.m2 * (this.a2[1] * this.a2[1] * this.r2 + this.a1[1] * this.a1[1] * this.r1 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a1[2] *= 1 / (this.r1 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a2[2] = 2 * Math.sin(this.a1[0] - this.a2[0])\r\n        this.a2[2] *= (this.a1[1] * this.a1[1] * this.r1 * (this.m1 + this.m2) + this.g * (this.m1 + this.m2) * cos1 + this.a2[1] * this.a2[1] * this.r2 * this.m2 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a2[2] *= 1 / (this.r2 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a1[1] += this.a1[2]\r\n        this.a2[1] += this.a2[2]\r\n        this.a1[0] += this.a1[1]\r\n        this.a2[0] += this.a2[1]\r\n\r\n        this.masses[0].translation.set(this.position.x + sin1 * this.r1, this.position.y + cos1 * this.r1);\r\n        this.masses[1].translation.set(this.masses[0].translation.x + sin2 * this.r2, this.masses[0].translation.y + cos2 * this.r2);\r\n\r\n        this.two.remove(this.traject);\r\n        if(this.path.length > 255)\r\n            this.path.shift();\r\n        this.path.push(this.masses[1].translation.clone());\r\n        this.traject = new Two.Path(this.path, false);\r\n        this.two.add(this.traject);\r\n        this.traject.noFill();\r\n    }\r\n}\r\nexport default DoublePendulum;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nvar G = 0;\r\nclass MassBall {\r\n    constructor(position, velocity, radius, two) {\r\n        this.acceleration = new Anchor(0, G);\r\n        this.two = two;\r\n        this.position = position;\r\n        this.velocity = velocity;\r\n        this.radius = radius;\r\n        this.mass = radius / 10;\r\n        this.circle = this.two.makeCircle(0, 0, radius);\r\n        this.circle.translation = position;\r\n        this.circle.fill = \"black\";\r\n    }\r\n    update() {\r\n        this.acceleration.y = G;\r\n        this.velocity.addSelf(this.acceleration);\r\n        this.position.addSelf(this.velocity);\r\n\r\n        if (this.position.y + this.radius > this.two.height) {\r\n            this.position.y = this.two.height - this.radius;\r\n            this.velocity.y *= -0.7;\r\n        } else if (this.position.y < this.radius) {\r\n            this.position.y = this.radius;\r\n            this.velocity.y *= -0.95;\r\n        }\r\n        if (this.position.x < this.radius) {\r\n            this.position.x = this.radius;\r\n            this.velocity.x *= -0.95;\r\n        } else if (this.position.x > this.two.width - this.radius) {\r\n            this.position.x = this.two.width - this.radius;\r\n            this.velocity.x *= -0.95;\r\n        }\r\n    }\r\n}\r\n\r\nclass ElascticCollisions extends Project {\r\n    constructor(two) {\r\n        super(two);\r\n    }\r\n    randomBallSpawner(radius = -1){\r\n        let x = Math.random() * this.width;\r\n        let y = Math.random() * this.height;\r\n        let pos = new Anchor(x, y);\r\n        let vel = new Anchor(Math.random() * 2 - 1, Math.random() * 2 - 1);\r\n        if(radius === -1)\r\n            radius = Math.random() * 35 + 5;\r\n        this.massBalls.push(new MassBall(pos, vel, radius, this.two));\r\n    }\r\n    init() {\r\n        this.reset();\r\n        for (let i = 0; i < Math.floor(Math.random() * 10) + 3; i++) {\r\n            this.randomBallSpawner();\r\n        }\r\n    }\r\n    reset() {\r\n        this.two.clear();\r\n        this.gravityIndicator = this.two.makeText(G === 0 ? \"Gravity OFF\" : \"Gravity ON\", this.two.width / 2, 15, {size: 15});\r\n        this.frameCountAtChange = 0;\r\n        this.massBalls = [];\r\n    }\r\n    detectCollisions() {\r\n        this.massBalls.sort((a, b) => {\r\n            return a.position.x - b.position.x;\r\n        });\r\n        for (let i = 0; i < this.massBalls.length - 1; i++) {\r\n            for (let j = i + 1; j < this.massBalls.length; j++) {\r\n                let r1 = this.massBalls[i].radius;\r\n                let r2 = this.massBalls[j].radius;\r\n                let p1 = this.massBalls[i].position;\r\n                let p2 = this.massBalls[j].position;\r\n                if (p1.distanceTo(p2) < r1 + r2) {\r\n                    let m1 = this.massBalls[i].mass;\r\n                    let m2 = this.massBalls[j].mass;\r\n                    let v1 = this.massBalls[i].velocity;\r\n                    let v2 = this.massBalls[j].velocity;\r\n                    let normal = new Anchor();\r\n                    normal.sub(p1, p2).normalize();\r\n                    //Teleporting one of the mass balls to prevent it from merging with the other one.\r\n                    if (r1 > r2)\r\n                        p2.sub(p1, normal.clone().multiplyScalar(r1 + r2));\r\n                    else\r\n                        p1.add(normal.clone().multiplyScalar(r1 + r2), p2);\r\n                    normal.sub(p1, p2).normalize();\r\n                    let vr = new Anchor();\r\n                    let vn = normal.clone().multiplyScalar(vr.sub(v1, v2).dot(normal));\r\n                    v1.subSelf(vn.clone().multiplyScalar(2 * m2 / (m1 + m2)));\r\n                    v2.addSelf(vn.clone().multiplyScalar(2 * m1 / (m1 + m2)));\r\n                } else if (Math.abs(p1.x - p2.x) > 100)\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        // console.log(this.uniqueId);\r\n        for (let i = 0; i < this.massBalls.length; i++) {\r\n            this.massBalls[i].update();\r\n        }\r\n        this.detectCollisions();\r\n    }\r\n    simulateAtoms() {\r\n        this.reset();\r\n        let radius = 5\r\n        for (let i = 0; i < 100; i++) {\r\n            this.randomBallSpawner(radius);\r\n        }\r\n    }\r\n    controlBall() {\r\n        let d = new Date();\r\n        let n = d.getTime();\r\n        this.currentBall.radius = 5 + Math.abs(Math.sin(n / 1000)) * 30;\r\n        this.currentBall.mass = this.currentBall.radius / 10;\r\n        this.currentBall.circle.radius = this.currentBall.radius;\r\n        this.two.remove(this.line);\r\n        this.line = this.two.makeLine(this.mousePos.x, this.mousePos.y, this.currentBall.position.x, this.currentBall.position.y);\r\n        this.currentBall.velocity.sub(this.currentBall.position, this.mousePos).multiplyScalar(0.05);\r\n    }\r\n    onMouseDown() {\r\n        this.currentBall = new MassBall(this.mousePos.clone(), new Anchor(), 25, this.two);\r\n        this.currentPos = this.mousePos.clone();\r\n        if (this.controlBall)\r\n            this.interval = setInterval(() => this.controlBall(), 10);\r\n    }\r\n    onMouseUp() {\r\n        if (this.currentBall)\r\n            this.massBalls.push(this.currentBall);\r\n        this.two.remove(this.line);\r\n        clearInterval(this.interval);\r\n        this.interval = false;\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyR\") {\r\n            this.reset();\r\n        } else if (e.code === \"KeyG\") {\r\n            if (this.two.frameCount - this.frameCountAtChange > 10) {\r\n                G = G === 0 ? 0.1 : 0;\r\n                this.gravityIndicator.value = G === 0 ? \"Gravity OFF\" : \"Gravity ON\";\r\n                this.frameCountAtChange = this.two.frameCount;\r\n            }\r\n        } else if (e.code === \"KeyQ\") {\r\n            if (this.two.frameCount - this.frameCountAtChange > 10) {\r\n                this.simulateAtoms();\r\n                this.frameCountAtChange = this.two.frameCount;\r\n            }\r\n        } else if (e.code === \"KeyS\") {\r\n            for (let index = 0; index < 1000; index++) {\r\n                this.update();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ElascticCollisions;","import PerlinNoise from '../projects/PerlinNoise';\r\nimport OrbitSim from '../projects/OrbitSim';\r\nimport Snake from '../projects/Snake'\r\nimport Sort from '../projects/Sort.js';\r\nimport PathFinder from '../projects/PathFinder.js';\r\nimport RayCasting from '../projects/RayCasting.js';\r\nimport DoublePendulum from '../projects/DoublePendulum';\r\nimport ElascticCollisions from '../projects/ElasticCollisions';\r\n\r\n\r\nclass Project {\r\n    constructor(project, title, description, tips, keys){\r\n        this.project = project;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.tips = {\r\n            tips: tips,\r\n        }\r\n        Object.keys(keys).forEach( key => this.tips[key] = keys[key]);\r\n    }\r\n}\r\n\r\nconst projects = [\r\n    {\r\n        project: OrbitSim,\r\n        title: \"Orbit Simulation\",\r\n        description: \"This is a gravity simulator where you can spawn planets and make them orbit the sun by setting their initial velocity and direction.\",\r\n        tips: {\r\n            tips: \"Press, hold and drag the mouse to spawn a planet, try to make it orbit the sun.\",\r\n        }\r\n    },\r\n    {\r\n        project: ElascticCollisions,\r\n        title: \"Elastic Collisions\",\r\n        description: \"This is a simulation of Elastic Collisions where you can see how balls interact with each other.\",\r\n        tips: {\r\n            tips: \"Press, hold and drag the mouse to spawn a mass ball and control its velocity, be aware don't time travel if spawned many balls (it's heavy on the cpu).\",\r\n            \"Q\": \"Press Q (A for Azerty Keybords) for gaz simulation.\",\r\n            \"R\": \"Press R to reset the simulation and empty the chamber.\",\r\n            \"G\": \"Press G to toggle Gravity On/Off.\",\r\n            \"S\": \"Press and hold S for time travel.\",\r\n        }\r\n    },\r\n    {\r\n        project: Snake,\r\n        title: \"Snake\",\r\n        description: \"This is the basic snake game where you can feed your snake so that it grows and rizes your score.\",\r\n        tips: {\r\n            tips: \"use (W, A, S, D) or Arrows for controlling the snake, try to get the maximum score without hitting the walls.\",\r\n            \"E\": \"Press E to make the snake grow (Don't cheat, play the game !!).\",\r\n        }\r\n    },\r\n    {\r\n        project: DoublePendulum,\r\n        title: \"Double Pendulum\",\r\n        description: \"If you like physics like me, you must've heard about the double pendulum, which is basically two balls attached to each other by two lines and let the gravity do its thing.\",\r\n        tips: {\r\n            tips: \"Press, hold and drag the pendulum to control its initial state.\",\r\n        }\r\n    },\r\n    {\r\n        project: PerlinNoise,\r\n        title: \"Perlin Noise\",\r\n        description: \"This is an animation that showcases how smooth is the perlin noise. It's not just random values, it generates randomly close values\",\r\n        tips: {\r\n            tips: \"Just enjoy the animation.\",\r\n        }\r\n    },\r\n    {\r\n        project: Sort,\r\n        title: \"Sorting Visualizer\",\r\n        description: \"This program showcases different sorting algorithms. Basically it tries to sort the lines from the shortest to the longest\",\r\n        tips: {\r\n            tips: \"Shuffle the way you like, choose and algorithm and watch it do its thing, if you get too bored hold S to make it go boom boom\",\r\n            \"R\": \"Press R to shuffle\",\r\n            \"D\": \"Press D to change the suffling method (Perlin Noise/Random)\",\r\n            \"A\": \"Press A (Q for Azerty Keyboards) to choose QuickSort algorithm\",\r\n            \"B\": \"Press B to toggle Bubble Sort\",\r\n            \"I\": \"Press I to toggle Insertion Sort\",\r\n            \"S\": \"Press and hold S for time travel.\",\r\n        }\r\n    },\r\n    {\r\n        project: PathFinder,\r\n        title: \"Path Finder & Maze Generator\",\r\n        description: \"This program showcases how the Greedy Best First Search works in Finding paths to any location on the grid, it also shows two different ways for generating random mazes, the first uses the recursive division algorithm and the second uses Depth First Search algorithm\",\r\n        tips: {\r\n            tips: \"Generate a maze and set the start location and the final one, and start the path finding process, or you can draw your own obstacles using your mouse. Be creative and have fun!\",\r\n            \"G\": \"Press G for generating a maze using the Depth First Search algorithm.\",\r\n            \"Q\": \"Press Q(A for Azerty Keyboards) for generating a maze using the recusive division algorithm.\",\r\n            \"R\": \"Press R to empty the grid\",\r\n            \"D\": \"Press D to toggle Drawing\",\r\n            \"E\": \"Press E to toggle Erasing\",\r\n            \"P\": \"Pres P to generate a map using Perlin Noise\",\r\n            \"S\": \"Press S to start the Path Finding process.\"\r\n        }\r\n    },\r\n    {\r\n        project: RayCasting,\r\n        title: \"Ray Casting\",\r\n        description: \"This is a program that simulates how light rays interact with obstacles.\",\r\n        tips: {\r\n            tips: \"Use your mouse to move the light source.\",\r\n            \"R\": \"Press R to shuffle the obstacles.\",\r\n        }\r\n    },\r\n    \r\n]\r\nexport default projects","import React from \"react\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport projects from '../data/projects';\r\n\r\nclass ProjectsHandler extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardsStates: Array(projects.length).fill({\r\n        maximized: false,\r\n        width: 420,\r\n        height: 260,\r\n        cssClass: \"sim-div\",\r\n        gameInfoStyle: { display: \"none\" },\r\n      }),\r\n    }\r\n  }\r\n  handleMaximize(i) {\r\n    this.setState(\r\n      {\r\n        cardsStates: Array(projects.length).fill(0).map(\r\n          (value, index) => index === i && !this.state.cardsStates[i].maximized ?\r\n            {\r\n              maximized: true,\r\n              width: Math.floor(window.innerWidth * 0.64 / 20) * 20,\r\n              height: Math.floor(window.innerWidth * 0.64 * 9 / 16 / 20) * 20,\r\n              style: { order: -1 },\r\n              gameInfoStyle: { display: \"block\" },\r\n              cssClass: \"sim-div\",\r\n            } :\r\n            {\r\n              maximized: false,\r\n              width: 420,\r\n              height: 260,\r\n              style: {},\r\n              gameInfoStyle: { display: \"none\" },\r\n              cssClass: \"sim-div\",\r\n            })\r\n      }\r\n    );\r\n    window.scrollTo({ top: 200, behavior: 'smooth' });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {projects.map((element, index) =>\r\n          <ProjectCard\r\n            onClick={() => this.handleMaximize(index)}\r\n            state={this.state.cardsStates[index]}\r\n            project={element}\r\n            key={Math.random() * 100_000_000 * Date.now()}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectsHandler;","export default __webpack_public_path__ + \"static/media/CV-Med-Aziz-Khayati.2baf76ee.docx\";","import cv from '../assets/files/CV-Med-Aziz-Khayati.docx'\r\nfunction Profile(props){\r\n    return(\r\n        <div className=\"profile\">\r\n            <h1>Hi,</h1>\r\n            <h1>I'm Mohamed Aziz,</h1>\r\n            <h1>Software Engineer.</h1>\r\n            <form method='get' action={cv}>\r\n                <button type='submit'>Download CV <i></i></button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","export default __webpack_public_path__ + \"static/media/coder.e82f4066.png\";","function Skillset(props){\r\n    return(\r\n        <div className=\"skills\">\r\n            <div>Skills</div>\r\n            <h1>Teamwork</h1>\r\n            <h1>Problem Solving</h1>\r\n        </div>\r\n    );\r\n}\r\nexport default Skillset;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport coder from '../assets/images/coder.png'\r\nimport Skillset from './Skillset';\r\n\r\nclass About extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        window.addEventListener(\"resize\", () => this.resize());\r\n        this.state = {\r\n            imgSize: window.innerWidth  / 5 + 'px'\r\n        }\r\n    }\r\n    resize(){\r\n        this.setState({\r\n            imgSize: window.innerWidth  / 5 + 'px'\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='about'>\r\n                <div className='welcome'>\r\n                    <Profile/>\r\n                    <img \r\n                    src={coder} \r\n                    style={{width: this.state.imgSize, height: this.state.imgSize}}/>\r\n                </div>\r\n                {/* <Skillset/> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default About;","import Two, { Anchor } from 'twojs-ts';\r\nimport { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass PerlinDiv extends Project {\r\n    init(){\r\n        this.noise = new Noise(Math.random());\r\n        this.blob = new Two.Path([], true, true);\r\n        this.two.add(this.blob);\r\n        this.blob.fill = \"#333\";\r\n        this.blob.noStroke();\r\n        this.noiseLayer = 0;\r\n    }\r\n    update(){\r\n        const vertices = [];\r\n        vertices.push(new Anchor(0, 0));\r\n        this.noiseLayer += 0.007;\r\n        for(let i = 0; i <= this.width; i += 10){\r\n            vertices.push(new Anchor(i, this.height / 2 + this.noise.perlin2(i * 0.005, this.noiseLayer) * this.height / 2));\r\n        }\r\n        vertices.push(new Anchor(this.width, 0));\r\n        this.blob.vertices = vertices;\r\n    }\r\n}\r\nexport default PerlinDiv;","import React from 'react';\r\nimport Two from 'twojs-ts'\r\n\r\nclass TwoSvg extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        if(!this.props.project.isInstanciated()){\r\n            const type = this.props.type ? this.props.type : Two.Types.canvas;\r\n            this.two = new Two({ width: this.props.width, height: this.props.height, type: type });\r\n            this.props.project.getInstance(this.two);\r\n        }else{\r\n            this.init()\r\n        }\r\n        this.two.play();\r\n        this.two.update();\r\n    }\r\n\r\n    init(){\r\n        let instance = this.props.project.getInstance(this.two);\r\n        instance.two.width = this.props.width;\r\n        instance.two.height = this.props.height;\r\n        this.two = instance.two;\r\n        instance.width = this.two.width;\r\n        instance.height = this.two.height;\r\n    }\r\n\r\n    render() {\r\n        this.init();\r\n        return (\r\n            <div ref={(nodeElement) => { nodeElement && nodeElement.appendChild(this.two.renderer.domElement) }}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TwoSvg;","import React from \"react\"\r\nimport Two from \"twojs-ts\"\r\nimport PerlinDiv from \"../projects/PerlinDiv\"\r\nimport TwoSvg from \"./TwoSvg\"\r\n\r\nclass Navbar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            width: window.innerWidth \r\n        }\r\n        window.addEventListener(\"resize\", () => this.resize());\r\n    }\r\n    resize(){\r\n        this.setState({\r\n            width: window.innerWidth\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"navbar\">\r\n                    <h3>{this.props.title}</h3>\r\n                    <nav>\r\n                        <ul>\r\n                            <li onClick={this.props.home}>Home</li>\r\n                            <li onClick={this.props.about}>About</li>\r\n                        </ul>\r\n                    </nav>         \r\n                </div>\r\n                <TwoSvg\r\n                    project={PerlinDiv}\r\n                    width={this.state.width}\r\n                    height={100}\r\n                    type={Two.Types.svg}\r\n                />\r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport ProjectsHandler from './components/ProjectsHandler.js';\nimport About from './components/About.js';\nimport Navbar from './components/Navbar.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 'Home'\n    }\n    this.redirectToAbout = this.redirectToAbout.bind(this);\n    this.redirectToHome = this.redirectToHome.bind(this);\n    document.documentElement.style.setProperty('--game-info-width', Math.floor(window.innerWidth * 0.64 / 20) * 20+'px');\n  }\n  redirectToHome(){\n    this.setState({\n      page: 'Home'\n    });\n  }\n  redirectToAbout(){\n    this.setState({\n      page: 'About'\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar\n          title={this.state.page === 'Home'? 'Summer Projects': 'Resume'}\n          home={this.redirectToHome}\n          about={this.redirectToAbout}\n        />\n        {this.state.page === 'Home'? <ProjectsHandler />: <About/>}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nwindow.addEventListener(\"keydown\", function (e) {\n  if ([\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.code) > -1) {\n    e.preventDefault();\n  }\n}, false);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}