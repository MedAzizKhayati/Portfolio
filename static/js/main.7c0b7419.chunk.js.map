{"version":3,"sources":["components/Footer.js","projects/Project.js","projects/PathFinder.js","components/TwoCanvas.js","components/ProjectCard.js","projects/PerlinNoise.js","projects/OrbitSim.js","projects/Snake.js","projects/Sort.js","projects/RayCasting.js","projects/DoublePendulum.js","projects/ElasticCollisions.js","data/projects.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Project","two","this","width","height","renderer","domElement","addEventListener","e","onMouseMove","onMouseDown","onMouseUp","mousePos","Anchor","document","changeState","intervalFunction","init","update","bind","mx","clientX","getBoundingClientRect","left","my","clientY","top","set","interval","setInterval","clearInterval","text","Two","Text","size","add","PathFinder","clear","start","end","state","algorithm","grid","algorithmState","draw","gridHeight","gridWidth","lineGroup","Group","children","length","i","push","line","Line","stroke","code","greedyBestFirstSearch","recursiveDivision","noiseGrid","depthFirstSearchMaze","makeRectangle","Math","floor","x","y","node","min","max","translation","rect","makeRectangleRelativeToMouse","getIndexesOfRectangle","remove","fill","tmp","currentNode","getSurroundingIndexes","neighbours","forEach","coord","parentNode","distance","calculateDistanceToEnd","distanceTo","closedList","openList","getNeighbours","sort","a","b","current","shift","currentPathNode","random","areas","horizontal","vertical","condition","makeGridRect","noSpace","area","pop","leftLimit","rightLimit","topLimit","bottomLimit","rand","tmpRect","xx","yy","isAdjacentToOtherNodes","array","j","temp","shuffleArray","lastAdjecentNode","stack","getNeighbourForDepthFirstSearch","element","noise","Noise","simplex2","TwoCanvas","type","props","Types","canvas","project","maximized","play","pause","parentElement","removeChild","ref","nodeElement","appendChild","React","Component","ProjectCard","cssClass","gameInfoStyle","display","setState","style","order","window","scrollTo","behavior","KeyboardEvent","Array","map","webgl","id","onClick","maximize","title","description","Object","keys","tips","key","alignItems","PerlinNoise","position","Vector","radius","noiseLayer","blob","Path","noStroke","vertices","angle","PI","cos","sin","perlin3","multiplyScalar","addSelf","Planet","mass","orbitSim","sandbox","twoObject","Circle","Moon","velocity","planets","acceleration","trajectory","collided","planet","ab","sub","pow","removeMoon","unbind","clone","orbit","noFill","OrbitSim","spawnMoon","mouse","moons","ui","alignment","value","moon","index","indexOf","splice","tempPosition","tempMoon","getMoonMouseVelocity","group","powerLine","makeLine","futurePositions","rgb","makeGroup","Snake","highestScore","moveSnake","food","makeRoundedRectangle","SpawnFood","coords","vels","body","square","currentScore","makeText","maxScore","justChanged","elongate","died","respawn","copy","Sort","justStarted","rectWidth","frameCount","rects","perlin2","iterativeQuickSort","bubbleSort","insertionSort","low","high","pivot","swap","partitionHigh","greenAll","sqrt","LightSource","rc","rayCount","rays","theta","x1","x2","y1","y2","point1","point2","obstacles","point","x3","y3","x4","y4","ua","ub","denom","line_intersect","RayCasting","setObstacles","lightSource","lines","obstacle","drawRays","DoublePendulum","controlPendulum","m1","m2","r1","r2","g","a1","a2","path","masses","firstLine","secondLine","subSelf","normalize","atan2","sin1","cos1","sin2","cos2","traject","G","MassBall","circle","makeCircle","projects","massBalls","gravityIndicator","frameCountAtChange","p1","p2","v1","v2","normal","vr","vn","dot","abs","detectCollisions","tempBall","n","Date","getTime","currentBall","currentPos","controlBall","simulateAtoms","App","projectWidth","projectHeight","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","preventDefault"],"mappings":"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","file":"static/js/main.7c0b7419.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer className=\"footer\">\r\n            <h3>Summer Projects</h3>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import Two, { Anchor } from \"twojs-ts\";\r\n\r\nclass Project{\r\n    constructor(two){\r\n        this.two = two;\r\n        this.width = this.two.width;\r\n        this.height = this.two.height;\r\n        this.two.renderer.domElement.addEventListener(\"mousemove\", (e) => this.onMouseMove(e));\r\n        this.two.renderer.domElement.addEventListener(\"mousedown\", () => this.onMouseDown());\r\n        this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.onMouseUp());\r\n        this.two.renderer.domElement.addEventListener(\"mouseup\", () => this.onMouseUp());\r\n        this.mousePos = new Anchor();\r\n        document.addEventListener(\"keydown\", (e) => this.changeState(e));\r\n        this.intervalFunction = null;\r\n        this.init();\r\n        this.update = this.update.bind(this);\r\n        this.two.bind('update', this.update);\r\n    }\r\n    changeState(e){\r\n\r\n    }\r\n    onMouseMove(e){\r\n        this.mx = e.clientX - this.two.renderer.domElement.getBoundingClientRect().left;\r\n        this.my = e.clientY - this.two.renderer.domElement.getBoundingClientRect().top;\r\n        this.mousePos.set(this.mx, this.my);\r\n    }\r\n    onMouseDown() {\r\n        if(this.intervalFunction)\r\n            this.interval = setInterval(() => this.intervalFunction(), 10);\r\n    }\r\n    onMouseUp() {\r\n        clearInterval(this.interval);\r\n        this.interval = false;\r\n    }\r\n    init(){\r\n        //Overwrite this init function in your project subclass to initialise your simulation\r\n        let text = new Two.Text('Two Projects', this.width / 2, this.height /2, {size: 30});\r\n        this.two.add(text);\r\n    }\r\n    update(){\r\n        //Overwrite this Function in your project subclass \r\n    }\r\n    toString(){\r\n        return \"Project\";\r\n    }\r\n}\r\nexport default Project;","import { Noise } from 'noisejs';\r\nimport Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nfunction shuffleArray(array) {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n}\r\n\r\nclass PathFinder extends Project {\r\n    init() {\r\n        this.two.clear();\r\n        this.start = null;\r\n        this.end = null;\r\n        this.state = \"drawing\";\r\n        this.algorithm = null\r\n        this.grid = [];\r\n        if (!this.size) {\r\n            this.size = 20;\r\n            this.algorithmState = \"justStarted\";\r\n            this.intervalFunction = this.draw;\r\n            this.gridHeight = this.height / this.size;\r\n            this.gridWidth = this.width / this.size;\r\n            this.lineGroup = new Two.Group();\r\n        }\r\n        if (this.lineGroup.children.length < this.gridWidth * this.gridHeight) {\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n                let line = new Two.Line(i * this.size, 0, i * this.size, this.height);\r\n                line.stroke = \"lightblue\";\r\n                this.lineGroup.add(line);\r\n                if (i < this.gridHeight) {\r\n                    let line = new Two.Line(0, i * this.size, this.width, i * this.size);\r\n                    line.stroke = \"lightblue\";\r\n                    this.lineGroup.add(line);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n            }\r\n        }\r\n\r\n        this.two.add(this.lineGroup);\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyS\") {\r\n            if (this.start && this.end && !this.algorithm) {\r\n                this.algorithm = this.greedyBestFirstSearch;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyQ\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.recursiveDivision;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyP\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.noiseGrid;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyG\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.depthFirstSearchMaze;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        }\r\n        else if (e.code === \"KeyD\") {\r\n            this.state = \"drawing\";\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.state = \"erasing\";\r\n        }\r\n        else if (e.code === \"KeyR\") {\r\n            this.state = \"resetting\";\r\n            this.init();\r\n        }\r\n    }\r\n    makeRectangleRelativeToMouse() {\r\n        return this.two.makeRectangle(\r\n            Math.floor(this.mx / this.size) * this.size + this.size / 2,\r\n            Math.floor(this.my / this.size) * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    makeGridRect(x, y) {\r\n        return this.two.makeRectangle(\r\n            x * this.size + this.size / 2,\r\n            y * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    getIndexesOfRectangle(node) {\r\n        let x = Math.min(\r\n            Math.max((\r\n                node.translation.x - this.size / 2) / this.size,\r\n                0),\r\n            this.width - 1\r\n        );\r\n        let y = (node.translation.y - this.size / 2) / this.size;\r\n        return [x, y];\r\n    }\r\n    draw() {\r\n        let rect = this.makeRectangleRelativeToMouse();\r\n        let [x, y] = this.getIndexesOfRectangle(rect);\r\n        if (this.state === \"drawing\") {\r\n            if (!this.grid[x][y]) {\r\n                this.grid[x][y] = rect;\r\n                if (!this.start) {\r\n                    this.start = rect\r\n                    this.start.fill = \"red\";\r\n                }\r\n                else if (!this.end) {\r\n                    this.end = rect;\r\n                    this.end.fill = \"green\";\r\n                }\r\n                else {\r\n                    rect.fill = \"black\";\r\n                }\r\n            }\r\n            else {\r\n                this.two.remove(rect);\r\n            }\r\n        }\r\n        else if (this.state === \"erasing\") {\r\n            this.two.remove(rect);\r\n            this.two.remove(this.grid[x][y]);\r\n            if (this.grid[x][y] === this.start)\r\n                this.start = null;\r\n            else if (this.grid[x][y] === this.end)\r\n                this.end = null;\r\n            this.grid[x][y] = null;\r\n        }\r\n\r\n    }\r\n    getSurroundingIndexes(node) {\r\n        let [x, y] = this.getIndexesOfRectangle(node);\r\n        const tmp = [];\r\n        if (x !== 0)\r\n            tmp.push([-1, 0])\r\n        if (x !== this.gridWidth - 1)\r\n            tmp.push([1, 0])\r\n        if (y !== this.gridHeight - 1)\r\n            tmp.push([0, 1])\r\n        if (y !== 0)\r\n            tmp.push([0, -1])\r\n        return tmp;\r\n    }\r\n    getNeighbours(node) {\r\n        let [x, y] = this.getIndexesOfRectangle(node.currentNode);\r\n        const tmp = this.getSurroundingIndexes(node.currentNode);\r\n        let neighbours = []\r\n        tmp.forEach((coord) => {\r\n            if (!this.grid[x + coord[0]][coord[1] + y]) {\r\n                const tmp = this.grid[x + coord[0]][coord[1] + y] = this.two.makeRectangle(\r\n                    Math.floor(x + coord[0]) * this.size + this.size / 2,\r\n                    Math.floor(coord[1] + y) * this.size + this.size / 2,\r\n                    this.size,\r\n                    this.size\r\n                );\r\n                tmp.fill = \"lightblue\";\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: tmp,\r\n                    distance: this.calculateDistanceToEnd(tmp)\r\n                });\r\n            }\r\n            else if (this.grid[x + coord[0]][coord[1] + y] === this.end) {\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: this.grid[x + coord[0]][coord[1] + y],\r\n                    distance: this.calculateDistanceToEnd(this.grid[x + coord[0]][coord[1] + y])\r\n                });\r\n            }\r\n        });\r\n        return neighbours;\r\n    }\r\n    calculateDistanceToEnd(node) {\r\n        return node.translation.distanceTo(this.end.translation);\r\n    }\r\n    greedyBestFirstSearch() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.closedList = [{\r\n                parentNode: null,\r\n                currentNode: this.start,\r\n                distance: this.calculateDistanceToEnd(this.start)\r\n            }];\r\n            this.openList = this.getNeighbours(this.closedList[0]);\r\n            this.algorithmState = \"findingPath\";\r\n        } else if (this.algorithmState === \"findingPath\") {\r\n            this.openList.sort((a, b) => a.distance - b.distance);\r\n            let current = this.openList.shift();\r\n            if (current && current.currentNode !== this.end) {\r\n                current.currentNode.fill = \"skyblue\";\r\n                this.closedList.push(current);\r\n                this.getNeighbours(current).forEach((e) =>\r\n                    this.openList.push(e)\r\n                );\r\n            } else if (!current) {\r\n                this.algorithmState = \"pathNotFound\";\r\n                this.algorithm = null;\r\n            } else {\r\n                this.algorithmState = \"pathFound\";\r\n                this.closedList.push(current);\r\n                this.currentPathNode = current.parentNode;\r\n            }\r\n        } else if (this.algorithmState === \"pathFound\") {\r\n            if (this.currentPathNode.currentNode !== this.start) {\r\n                this.currentPathNode.currentNode.fill = \"yellow\";\r\n                this.currentPathNode = this.currentPathNode.parentNode;\r\n            } else {\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    rand(x, y) {\r\n        return x = Math.floor(Math.random() * (1 + y - x)) + x;\r\n    }\r\n    recursiveDivision() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.algorithmState = \"borderLimiting\";\r\n            this.i = 0;\r\n            this.areas = [{ horizontal: [0, this.gridWidth - 1], vertical: [0, this.gridHeight - 1] }];\r\n        } else if (this.algorithmState === \"borderLimiting\") {\r\n            let condition = 0;\r\n            if (this.i < this.gridWidth) {\r\n                this.grid[this.i][0] = this.makeGridRect(this.i, 0);\r\n                this.grid[this.i][0].fill = \"black\";\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1] = this.makeGridRect(this.gridWidth - 1 - this.i, this.gridHeight - 1);\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            if (0 < this.i && this.i < this.gridHeight - 1) {\r\n                this.grid[0][this.i] = this.makeGridRect(0, this.i)\r\n                this.grid[0][this.i].fill = \"black\";\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i] = this.makeGridRect(this.gridWidth - 1, this.gridHeight - 1 - this.i);\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            this.i++;\r\n            if (condition === 2)\r\n                this.algorithmState = \"mazeGenerating\";\r\n        } else if (this.areas.length && this.algorithmState === \"mazeGenerating\") {\r\n            //let horizontal = Boolean(Math.round(Math.random()));\r\n            let noSpace = 0;\r\n            const area = this.areas.pop();\r\n            let [leftLimit, rightLimit] = area.horizontal;\r\n            let [topLimit, bottomLimit] = area.vertical;\r\n            let horizontal = (rightLimit - leftLimit) > (bottomLimit - topLimit);\r\n            if (horizontal) {\r\n                if (rightLimit - leftLimit > 3) {\r\n                    this.x = this.rand(leftLimit + 3, rightLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: [leftLimit, this.x], vertical: area.vertical },\r\n                        { horizontal: [this.x, rightLimit], vertical: area.vertical }\r\n                    );\r\n                    if (!this.grid[this.x][topLimit])\r\n                        topLimit += 2;\r\n                    if (!this.grid[this.x][bottomLimit])\r\n                        bottomLimit -= 2;\r\n                    this.y = this.rand(topLimit + 1, bottomLimit - 1)\r\n                    this.i = topLimit;\r\n                    this.bottomLimit = bottomLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = true;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (!horizontal) {\r\n                if (bottomLimit - topLimit > 3) {\r\n                    this.y = this.rand(topLimit + 3, bottomLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: area.horizontal, vertical: [topLimit, this.y] },\r\n                        { horizontal: area.horizontal, vertical: [this.y, bottomLimit] }\r\n                    );\r\n                    if (!this.grid[leftLimit][this.y])\r\n                        leftLimit += 2;\r\n                    if (!this.grid[rightLimit][this.y])\r\n                        rightLimit -= 2;\r\n                    this.x = this.rand(leftLimit + 1, rightLimit - 1)\r\n                    this.i = leftLimit;\r\n                    this.rightLimit = rightLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = false;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (noSpace == 1)\r\n                this.areas.pop();\r\n        } else if (this.algorithmState === \"lineDrawing\") {\r\n            if (this.vertical) {\r\n                if (this.i <= this.bottomLimit) {\r\n                    if (this.i != this.y && !this.grid[this.x][this.i]) {\r\n                        this.grid[this.x][this.i] = this.makeGridRect(this.x, this.i);\r\n                        this.grid[this.x][this.i].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n\r\n            } else {\r\n                if (this.i <= this.rightLimit) {\r\n                    if (this.i != this.x && !this.grid[this.i][this.y]) {\r\n                        this.grid[this.i][this.y] = this.makeGridRect(this.i, this.y);\r\n                        this.grid[this.i][this.y].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n            }\r\n            this.i++;\r\n        } else {\r\n            this.algorithm = null;\r\n        }\r\n    }\r\n    getNeighbourForDepthFirstSearch(node) {\r\n        let [x, y] = node;\r\n        let tmpRect = this.makeGridRect(x, y);\r\n        const tmp = this.getSurroundingIndexes(tmpRect);\r\n        this.two.remove(tmpRect);\r\n        let neighbours = []\r\n        tmp.forEach((coord) => {\r\n            let [xx, yy] = [x + coord[0], coord[1] + y];\r\n            if (this.grid[xx][yy]) {\r\n                if (this.isAdjacentToOtherNodes([xx, yy]) <= 1)\r\n                    neighbours.push([xx, yy]);\r\n            }\r\n        });\r\n        shuffleArray(neighbours);\r\n        return neighbours;\r\n    }\r\n    isAdjacentToOtherNodes(node) {\r\n        let [x, y] = node;\r\n        let tmpRect = this.makeGridRect(x, y);\r\n        const tmp = this.getSurroundingIndexes(tmpRect);\r\n        this.two.remove(tmpRect);\r\n        if (x !== 0 && y !== 0)\r\n            tmp.push([-1, -1])\r\n        if (x !== this.gridWidth - 1 && y !== this.gridHeight - 1)\r\n            tmp.push([1, 1])\r\n        if (x !== 0 && y !== this.gridHeight - 1)\r\n            tmp.push([-1, 1])\r\n        if (x !== this.gridWidth - 1 && y !== 0)\r\n            tmp.push([1, -1])\r\n        let condition = 0;\r\n        let lastAdjecentNode = null;\r\n        tmp.forEach((coord) => {\r\n            let node = this.grid[x + coord[0]][coord[1] + y];\r\n            if (!node) {\r\n                if (lastAdjecentNode) {\r\n                    if (new Anchor(x + coord[0], coord[1] + y).distanceTo(lastAdjecentNode) > 1)\r\n                        condition++;\r\n                }\r\n                else {\r\n                    condition++;\r\n                    lastAdjecentNode = new Anchor(x + coord[0], coord[1] + y);\r\n                }\r\n            }\r\n        });\r\n        return condition;\r\n    }\r\n    depthFirstSearchMaze() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.algorithmState = \"mazeGenerating\";\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                for (let j = 0; j < this.gridHeight; j++) {\r\n                    this.grid[i][j] = this.makeGridRect(i, j);\r\n                    this.grid[i][j].fill = \"black\";\r\n                }\r\n            }\r\n            this.stack = [];\r\n            let x = this.rand(0, this.gridWidth - 1);\r\n            let y = this.rand(0, this.gridHeight - 1);\r\n            this.stack.push([x, y]);\r\n        } else if (this.algorithmState === \"mazeGenerating\" && this.stack.length) {\r\n            this.current = this.stack[this.stack.length - 1];\r\n            this.stack.pop();\r\n            if (this.isAdjacentToOtherNodes(this.current) <= 1) {\r\n                let [x, y] = this.current;\r\n                this.two.remove(this.grid[x][y]);\r\n                this.grid[x][y] = null;\r\n                this.getNeighbourForDepthFirstSearch(this.current).forEach(element => this.stack.push(element));\r\n            }\r\n        } else {\r\n            this.algorithm = null;\r\n        }\r\n    }\r\n    noiseGrid() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.noise = new Noise(Math.random());\r\n            this.algorithmState = \"gridMaking\";\r\n        } else if (this.algorithmState === \"gridMaking\") {\r\n            if (this.i < this.gridWidth) {\r\n                if (this.j < this.gridHeight) {\r\n                    let noise = this.noise.simplex2(this.i * 0.1, this.j * 0.1)\r\n                    if (noise >= 0) {\r\n                        this.grid[this.i][this.j] = this.makeGridRect(this.i, this.j);\r\n                        this.grid[this.i][this.j].fill = \"black\";\r\n                    }\r\n                    this.j++;\r\n                } else {\r\n                    this.j = 0;\r\n                    this.i++;\r\n                }\r\n            } else {\r\n                this.algorithmState = \"justStarted\";\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default PathFinder;","import React from 'react';\r\nimport Two from 'twojs-ts'\r\n\r\nclass TwoCanvas extends React.Component {\r\n    init() {\r\n        const type = this.props.type ? this.props.type : Two.Types.canvas;\r\n        this.two = new Two({ width: this.props.width, height: this.props.height, type: type });\r\n        this.project = new this.props.project(this.two);\r\n        this.two.renderer.domElement.className = \"TwoCanvas\";\r\n        if (!this.props.maximized) {\r\n            this.two.renderer.domElement.addEventListener(\"mouseenter\", () => this.two.play());\r\n            this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.two.pause());\r\n            this.two.pause();\r\n        } else {\r\n            this.two.play();\r\n        }\r\n        this.two.update();\r\n    }\r\n    render() {\r\n        if (this.two) {\r\n            let domElement = this.two.renderer.domElement;\r\n            if (domElement.parentElement)\r\n                domElement.parentElement.removeChild(domElement);\r\n            this.two = null;\r\n        }\r\n        this.init();\r\n        return (\r\n            <div ref={(nodeElement) => { nodeElement && nodeElement.appendChild(this.two.renderer.domElement) }}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TwoCanvas;","import React from 'react';\r\nimport Two from 'twojs-ts';\r\nimport PathFinder from '../projects/PathFinder';\r\nimport TwoCanvas from './TwoCanvas';\r\nclass ProjectCard extends React.Component {\r\n    constructor(two) {\r\n        super(two);\r\n        this.state = {\r\n            maximized: false,\r\n            width: this.props.width,\r\n            height: this.props.height,\r\n            cssClass: \"sim-div\",\r\n            gameInfoStyle: {display: \"none\"}\r\n        }\r\n    }\r\n    maximize() {\r\n        if (this.state.maximized)\r\n            this.setState({\r\n                maximized: false,\r\n                width: 420,\r\n                height: 260,\r\n                style: {},\r\n                gameInfoStyle: {display: \"none\"}\r\n            });\r\n        else{\r\n            this.setState({\r\n                maximized: true,\r\n                width: 840,\r\n                height: 520,\r\n                style: {order: -1},\r\n                gameInfoStyle: {display: \"block\"}\r\n            });\r\n            window.scrollTo({top: 0, behavior: 'smooth'});\r\n        }          \r\n    }\r\n    simulateKeyPress(){\r\n        let QEvent = new KeyboardEvent({'keydown' : {'code': \"Q\", 'which': 8}});\r\n    }\r\n    render() {\r\n        const project = this.props.project;\r\n        return (\r\n            <div className={this.state.cssClass} style= {this.state.style}>\r\n                {Array(1).fill(0).map(() => {if(! this.state.maximized) return <h1>Paused</h1>;})}\r\n                <div className={this.state.maximized ? \"divTwoMaximized\" : \"divTwo\"}>\r\n                    <TwoCanvas\r\n                        maximized = {this.state.maximized}\r\n                        project={project.project}\r\n                        key={project}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        type={project.project == PathFinder ? Two.Types.webgl : Two.Types.canvas}\r\n                    />\r\n                    <button id=\"maximize\" onClick={() => this.maximize()}></button>\r\n                </div>\r\n                <h2 className=\"sim-title\" style= {this.state.style}>{project.title}</h2>\r\n                <div className=\"game-info\" style={this.state.gameInfoStyle}>\r\n                    <p>About: {project.description}</p>\r\n                    {Object.keys(project.tips).map(key => {\r\n                        if(key == \"tips\")\r\n                            return (<p>Tips: {project.tips[key]}</p>)\r\n                        else{\r\n                            return (\r\n                                <div style={{display: \"flex\", alignItems:\"center\"}}>\r\n                                    <button id=\"keyButton\">{key}</button>\r\n                                    <p>{project.tips[key]}</p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })}\r\n                </div>       \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectCard;","import Two from 'twojs-ts';\r\nimport { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass PerlinNoise extends Project {\r\n    init(){\r\n        this.noise = new Noise(Math.random());\r\n        this.position = new Two.Vector(this.width / 2, this.height / 2);\r\n        this.radius = this.two.height / 3;\r\n        this.noiseLayer = 0;\r\n        this.blob = new Two.Path([], true, true);\r\n        this.two.add(this.blob);\r\n        this.blob.fill = 'rgb(0,0,40)'\r\n        this.blob.noStroke();\r\n    }\r\n    update() {\r\n        const vertices = [];\r\n        this.noiseLayer += 0.01;\r\n        for (let angle = 0; angle < 2 * Math.PI; angle += 0.01) {\r\n            var x = Math.cos(angle);\r\n            var y = Math.sin(angle);\r\n\r\n            var position = new Two.Anchor(x, y);\r\n            var radius = this.noise.perlin3(x*2, y*2, this.noiseLayer) * this.radius/3 + this.radius;\r\n\r\n            position.multiplyScalar(radius);\r\n            position.addSelf(this.position);\r\n\r\n            vertices.push(position);\r\n        }\r\n        this.blob.vertices = vertices;\r\n    }\r\n}\r\nexport default PerlinNoise;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst G = 100;\r\n\r\nclass Planet {\r\n    constructor(position, mass, two, orbitSim) {\r\n        this.orbitSim = orbitSim;\r\n        this.two = two;\r\n        this.position = position;\r\n        this.mass = mass;\r\n        this.radius = mass * 10;\r\n        this.init();\r\n        this.sandbox = false;\r\n    }\r\n    init() {\r\n        this.twoObject = new Two.Circle(this.position.x, this.position.y, this.radius);\r\n        this.two.add(this.twoObject);\r\n        this.twoObject.fill = \"black\";\r\n        this.twoObject.translation = this.position;\r\n    }\r\n}\r\nclass Moon extends Planet {\r\n    constructor(position, velocity, mass, two, planets, orbitSim) {\r\n        super(position, mass, two, orbitSim);\r\n        this.velocity = velocity;\r\n        this.planets = planets;\r\n        this.acceleration = new Two.Anchor();\r\n        this.update = this.update.bind(this);\r\n        this.trajectory = [];\r\n        this.two.bind('update', this.update).play();\r\n    }\r\n    update() {\r\n        let collided = false;\r\n        this.planets.forEach(planet => {\r\n            let ab = new Anchor();\r\n            ab.sub(planet.position, this.position);\r\n            ab.multiplyScalar(G * planet.mass / Math.pow(ab.length(), 3));\r\n            this.velocity.addSelf(ab);\r\n            if (ab.sub(this.position, planet.position).length() < this.radius + planet.radius) {\r\n                collided = true;\r\n                if (!this.sandbox)\r\n                    this.orbitSim.removeMoon(this);\r\n            }\r\n        });\r\n        this.position.addSelf(this.velocity);\r\n        if (this.position.length() > 5000)\r\n            this.sandbox ? collided = true : this.orbitSim.removeMoon(this);\r\n        if (collided && !this.sandbox)\r\n            this.two.unbind('update', this.update);\r\n        if (!this.sandbox && !collided) {\r\n            if (this.trajectory.length > 255)\r\n                this.trajectory.shift();\r\n            this.trajectory.push(this.position.clone());\r\n            this.two.remove(this.orbit);\r\n            this.orbit = new Two.Path(this.trajectory, false, true);\r\n            this.two.add(this.orbit);\r\n            this.orbit.noFill();\r\n        }\r\n        return collided;\r\n    }\r\n}\r\n\r\nclass OrbitSim extends Project {\r\n    init() {\r\n        this.intervalFunction = this.spawnMoon;\r\n        this.mouse = false;\r\n        this.mousePos = new Anchor();\r\n        this.planets = [new Planet(new Anchor(this.width / 2, this.height / 2), this.height / 100, this.two, this)];\r\n        this.moons = [new Moon(new Anchor(this.width / 4, this.height / 2), new Anchor(0, 1.5), this.height / 350, this.two, this.planets, this)]\r\n        this.ui = new Two.Text(`Planets remaining: ${this.moons.length}`, 10, 20, { alignment: \"left\", size: this.height / 15 });\r\n        this.two.add(this.ui);\r\n    }\r\n    update() {\r\n        this.ui.value = `Planets remaining: ${this.moons.length}`;\r\n    }\r\n    removeMoon(moon) {\r\n        let index = this.moons.indexOf(moon);\r\n        if (index > 0)\r\n            this.moons.splice(index, 1);\r\n        this.two.unbind('update', moon.update);\r\n        this.two.remove(moon.orbit);\r\n        this.two.remove(moon.twoObject);\r\n    }\r\n    onMouseDown() {\r\n        this.tempPosition = this.mousePos.clone();\r\n        this.tempMoon = new Moon(this.mousePos.clone(), new Anchor(0, 0), Math.random() * this.height / 150 + 0.1, this.two, this.planets, this);\r\n        this.tempMoon.sandbox = true;\r\n        this.mouse = setInterval(() => this.spawnMoon(), 10);\r\n    }\r\n    onMouseUp() {\r\n        if (this.mouse) {\r\n            clearInterval(this.mouse);\r\n            this.moons.push(this.tempMoon);\r\n            this.tempMoon.position = this.tempPosition.clone();\r\n            this.tempMoon.twoObject.translation = this.tempMoon.position;\r\n            this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n            this.tempMoon.sandbox = false;\r\n            this.mouse = false;\r\n            this.two.remove(this.group);\r\n            this.two.remove(this.powerLine);\r\n        }\r\n    }\r\n    getMoonMouseVelocity() {\r\n        let ab = new Anchor();\r\n        ab.sub(this.tempMoon.position, this.mousePos);\r\n        ab.multiplyScalar(0.01);\r\n        return ab;\r\n    }\r\n    spawnMoon() {\r\n        this.two.remove(this.group);\r\n        this.two.remove(this.powerLine);\r\n        this.tempMoon.position = this.tempPosition.clone();\r\n        this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n        this.powerLine = this.two.makeLine(this.mousePos.x, this.mousePos.y, this.tempMoon.position.x, this.tempMoon.position.y);\r\n        const iterations = 500;\r\n        const futurePositions = [];\r\n        for (let index = 0; index < iterations; index++) {\r\n            if (this.tempMoon.update())\r\n                break;\r\n            if (index % 20 === 0) {\r\n                futurePositions.push(new Two.Circle(this.tempMoon.position.x, this.tempMoon.position.y, 1));\r\n                const rgb = 255 * index / iterations;\r\n                futurePositions[futurePositions.length - 1].fill = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n                futurePositions[futurePositions.length - 1].stroke = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n            }\r\n        }\r\n        this.group = this.two.makeGroup(futurePositions);\r\n    }\r\n\r\n}\r\n\r\nexport default OrbitSim;","import { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass Snake extends Project {\r\n    constructor(two){\r\n        super(two);\r\n        this.highestScore = 0;\r\n    }\r\n    init() {\r\n        document.addEventListener(\"keydown\", (e) => this.moveSnake(e));\r\n        this.size = 20;\r\n        this.velocity = 2;\r\n        this.length = 4;\r\n        this.position = new Anchor(100 + this.size / 2, 120 + this.size / 2);\r\n        this.food = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        this.food.fill = \"rgb(0,0,100)\";\r\n        this.food.translation = new Anchor(0, 0);\r\n        this.SpawnFood();\r\n        this.coords = [this.position];\r\n        this.vels = [];\r\n        this.body = [];\r\n        for (let index = 0; index < this.length; index++) {\r\n            if (index !== 0)\r\n                this.coords.push(this.position.clone().addSelf(new Anchor(-this.size * index, 0)));\r\n            this.vels.push(new Anchor(this.velocity, 0));\r\n            let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n            square.translation = this.coords[index];\r\n            square.fill = index === 0 ? \"red\" : \"black\";\r\n            this.body.push(square);\r\n        }\r\n        this.currentScore = this.two.makeText(`Score: ${this.body.length}`, 15, 50, { size: 20, alignment: \"left\" });\r\n        this.maxScore = this.two.makeText(`Highest Score: ${this.highestScore ? this.highestScore : 0}`, 15, 80, { size: 20, alignment: \"left\" })\r\n    }\r\n    elongate() {\r\n        this.coords.push(this.coords[this.coords.length - 1].clone());\r\n        this.vels.push(new Anchor(0, 0));\r\n        let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        square.translation = this.coords[this.coords.length - 1];\r\n        square.fill = \"black\";\r\n        this.body.push(square);\r\n    }\r\n    moveSnake(e) {\r\n        if ((e.code === \"KeyW\" || e.code === \"ArrowUp\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, -this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyS\" || e.code === \"ArrowDown\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyA\" || e.code === \"ArrowLeft\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(-this.velocity, 0);\r\n        }\r\n        else if ((e.code === \"KeyD\" || e.code === \"ArrowRight\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(this.velocity, 0);\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.justChanged = this.elongate;\r\n        }\r\n    }\r\n    SpawnFood() {\r\n        let x = Math.floor(Math.random() * this.width / this.size) * this.size + this.size / 2;\r\n        let y = Math.floor(Math.random() * this.height / this.size) * this.size + this.size / 2;\r\n        this.food.translation.set(x, y);\r\n    }\r\n    respawn() {\r\n        this.two.clear();\r\n        this.init();\r\n    }\r\n    update() {\r\n        let died = false;\r\n        this.coords.forEach((position, index) => {\r\n            position.addSelf(this.vels[index]);\r\n            if (!position.distanceTo(this.position) && index !== 0)\r\n                died = true;\r\n        })\r\n        if (this.position.x < 0 || this.position.y < 0 || this.position.x > this.width || this.position.y > this.height)\r\n            died = true;\r\n        if (died)\r\n            this.respawn();\r\n\r\n        if ((this.position.x - this.size / 2) % this.size === 0 && (this.position.y - this.size / 2) % this.size === 0) {\r\n            for (let index = this.vels.length - 1; index > 0; index--) {\r\n                this.vels[index].copy(this.vels[index - 1]);\r\n            }\r\n            if (typeof this.justChanged === \"function\") {\r\n                this.justChanged();\r\n                this.justChanged = null;\r\n            }\r\n            else if (this.justChanged) {\r\n                this.vels[0].copy(this.justChanged);\r\n                this.justChanged = null;\r\n            }\r\n        }\r\n\r\n        if (!this.position.distanceTo(this.food.translation)) {\r\n            this.SpawnFood();\r\n            this.elongate();\r\n            this.currentScore.value = `Score: ${this.body.length}`;\r\n            if (this.body.length > this.highestScore) {\r\n                this.highestScore = this.body.length;\r\n                this.maxScore.value = `Highest Score: ${this.highestScore}`;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Snake;","import { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass Sort extends Project {\r\n    constructor(two){\r\n        super(two);\r\n        this.id = Math.floor( Math.random() * 100 );\r\n        this.random = true;\r\n    }\r\n    init() {\r\n        this.two.clear();\r\n        this.justStarted = \"justStarted\";\r\n        this.noise = new Noise(Math.random());\r\n        this.rectWidth = 1;\r\n        this.algorithm = null;\r\n        this.frameCount = - 10;\r\n        this.length = this.width / this.rectWidth;\r\n        this.rects = Array(this.length).fill(0).map((value, index) => {\r\n            let rect = this.two.makeRectangle(\r\n                index * this.rectWidth,\r\n                this.height / 2,\r\n                this.rectWidth,\r\n                this.random?\r\n                this.height * (this.length - index) / this.length:\r\n                this.noise.perlin2(index * 0.02, 0) * this.height / 2 + this.height / 2\r\n            );\r\n            rect.fill = \"black\";\r\n            return rect;\r\n        })\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyR\") {\r\n            this.init();\r\n        } else if (e.code === \"KeyD\" && this.two.frameCount - this.frameCount > 10) {\r\n            this.frameCount = this.two.frameCount;\r\n            this.random = ! this.random;\r\n            this.init();\r\n        } else if (e.code === \"KeyA\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.iterativeQuickSort;\r\n        } else if (e.code === \"KeyB\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.bubbleSort;\r\n        } else if (e.code === \"KeyI\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.insertionSort;\r\n        } else if (e.code === \"KeyS\") {\r\n            for (let index = 0; index < 300; index++)\r\n                this.update()\r\n        }\r\n    }\r\n    swap(i, j) {\r\n        let tmp = this.rects[i].height;\r\n        this.rects[i].height = this.rects[j].height;\r\n        this.rects[j].height = tmp;\r\n    }\r\n    partitionHigh(low, high) {\r\n        let pivot = this.rects[high].height;\r\n        let i = low;\r\n        for (let j = low; j < high; j++) {\r\n            if (this.rects[j].height <= pivot) {\r\n                this.swap(i, j);\r\n                i++;\r\n            }\r\n        }\r\n        this.swap(i, high);\r\n        return i;\r\n    }\r\n    iterativeQuickSort() {\r\n        if (this.justStarted) {\r\n            this.stack = [];\r\n            this.start = 0;\r\n            this.end = this.rects.length - 1;\r\n            this.stack.push({ x: this.start, y: this.end });\r\n            this.justStarted = false;\r\n        }\r\n        if (this.stack.length) {\r\n            const { x, y } = this.stack.shift();\r\n            const PI = this.partitionHigh(x, y);\r\n\r\n            if (PI - 1 > x) {\r\n                this.stack.push({ x: x, y: PI - 1 });\r\n            }\r\n            if (PI + 1 < y) {\r\n                this.stack.push({ x: PI + 1, y: y });\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    bubbleSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length - 1) {\r\n            if (this.j < this.length - this.i - 1) {\r\n                if (this.rects[this.j].height > this.rects[this.j + 1].height) {\r\n                    this.swap(this.j, this.j + 1);\r\n                }\r\n                this.j++;\r\n            }\r\n            else {\r\n                this.j = 0;\r\n                this.i++;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    insertionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 1;\r\n            this.j = 0;\r\n            this.current = this.rects[this.i].height;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j > - 1 && this.current < this.rects[this.j].height) {\r\n                this.rects[this.j + 1].height = this.rects[this.j].height;\r\n                this.j--;\r\n            } else {\r\n                this.rects[this.j + 1].height = this.current;\r\n                this.i++;\r\n                this.j = this.i - 1;\r\n                if (this.i < this.length)\r\n                    this.current = this.rects[this.i].height;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    selectionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = this.i + 1;\r\n            this.min = this.i;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j < this.length) {\r\n                if (this.rects[this.j].height < this.rects[this.min].height) {\r\n                    this.min = this.j\r\n                }\r\n                this.j++;\r\n            } else {\r\n                this.swap(this.i, this.min);\r\n                this.i++;\r\n                this.j = this.i + 1;\r\n                this.min = this.i;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    greenAll() {\r\n        if (this.i < this.length) {\r\n            this.rects[this.i].fill = \"green\";\r\n            this.rects[this.i].stroke = \"green\";\r\n            this.i++;\r\n        } else {\r\n            this.init();\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default Sort;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst PI = Math.PI;\r\nconst sqrt = Math.sqrt;\r\n\r\nfunction line_intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n    var ua, ub, denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n    if (denom == 0) {\r\n        return null;\r\n    }\r\n    ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;\r\n    ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;\r\n    let seg1 = ua >= 0 && ua <= 1;\r\n    let seg2 = ub >= 0 && ub <= 1;\r\n    if(seg1 && seg2)\r\n        return new Anchor(x1 + ua * (x2 - x1), y1 + ua * (y2 - y1));\r\n    else \r\n        return null;\r\n}\r\n\r\nclass LightSource {\r\n    constructor(rc) {\r\n        this.rc = rc;\r\n        this.position = rc.mousePos;\r\n        this.rayCount = 101;\r\n    }\r\n    drawRays() {\r\n        this.rc.two.remove(this.rays);\r\n        this.rays = new Two.Group();\r\n        for (let theta = 0; theta < 2 * PI; theta += 2 * PI / this.rayCount) {\r\n            let x1 = this.position.x + this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let x2 = this.position.x - this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let y1 = this.position.y + (x1 - this.position.x) * sin(theta) / cos(theta);\r\n            let y2 = this.position.y + (x2 - this.position.x) * sin(theta) / cos(theta);\r\n            let point1 = new Anchor(x1, y1);\r\n            let point2 = new Anchor(x2, y2);\r\n            this.rc.obstacles.forEach(element => {\r\n                let point = line_intersect(\r\n                    x1, y1,\r\n                    x2, y2,\r\n                    element[0].x, element[0].y,\r\n                    element[1].x, element[1].y\r\n                );\r\n                if (point && (x1 - this.position.x) * (point.x - this.position.x) > 0){\r\n                    if (point.distanceTo(this.position) < point1.distanceTo(this.position))\r\n                        point1.copy(point);\r\n                }    \r\n                else if (point){\r\n                    if (point.distanceTo(this.position) < this.position.distanceTo(point2))\r\n                        point2.copy(point);\r\n                }               \r\n            });\r\n            let line = new Two.Line(point1.x, point1.y, point2.x, point2.y);\r\n            line.stroke = \"white\";\r\n            this.rays.add(line);\r\n        }\r\n        this.rc.two.add(this.rays);\r\n    }\r\n}\r\n\r\nclass RayCasting extends Project {\r\n    init() {\r\n        this.rect = this.two.makeRectangle(this.width / 2, this.height / 2, this.width, this.height);\r\n        this.rect.fill = \"black\";\r\n        this.setObstacles();  \r\n        this.lightSource = new LightSource(this);\r\n        \r\n    }\r\n    setObstacles(){\r\n        this.two.remove(this.lines);\r\n        this.lines = new Two.Group();\r\n        this.obstacles = []\r\n        for (let i = 0; i < 5; i++) {\r\n            let x1 = Math.random()*this.width;\r\n            let x2 = Math.random()*this.width;\r\n            let y1 = Math.random()*this.height;\r\n            let y2 = Math.random()*this.height;\r\n            let obstacle = new Two.Line(x1, y1, x2, y2);\r\n            obstacle.stroke = \"white\";\r\n            this.lines.add(obstacle);\r\n            this.obstacles.push([new Anchor(x1, y1), new Anchor(x2, y2)]);\r\n        }\r\n        this.two.add(this.lines);\r\n    }\r\n    update() {\r\n        this.lightSource.drawRays();\r\n    }\r\n    changeState(e){\r\n        if(e.code === \"KeyR\"){\r\n            this.setObstacles();\r\n        }\r\n    }\r\n}\r\nexport default RayCasting;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass DoublePendulum extends Project {\r\n    init() {\r\n        this.intervalFunction = this.controlPendulum;\r\n        this.m1 = this.m2 = this.height / 30;\r\n        this.r1 = this.r2 = this.height / 4;\r\n        this.g = 0.05;\r\n        this.a1 = [3.9, 0, 0];\r\n        this.a2 = [2.5, 0, 0];\r\n        this.path = [];\r\n        this.position = new Anchor(this.width / 2, this.height / 3);\r\n        this.masses = [new Two.Circle(0, 0, this.m1), new Two.Circle(0, 0, this.m2)];\r\n        this.masses.forEach((mass) => {\r\n            mass.translation = new Anchor();\r\n            mass.fill = \"black\";\r\n        })\r\n        this.firstLine = this.two.makeLine();\r\n        this.secondLine = this.two.makeLine();\r\n        this.firstLine.vertices = [this.position, this.masses[0].translation];\r\n        this.secondLine.vertices = [ this.masses[1].translation, this.masses[0].translation];\r\n        this.two.add(this.masses);\r\n        // this.text = new Two.Text(\"Hold and drag to change masses' position..\", 10, 30, {alignment: \"left\", size: this.height / 20});\r\n        // this.two.add(this.text);\r\n    }\r\n    controlPendulum(){\r\n        let mousePos = new Anchor(this.mx, this.my);\r\n        if(mousePos.distanceTo(this.masses[0].translation) < mousePos.distanceTo(this.masses[1].translation)){\r\n            mousePos.subSelf(this.position);\r\n            mousePos.normalize();\r\n            this.a1[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }else{\r\n            mousePos.subSelf(this.masses[0].translation);\r\n            mousePos.normalize();\r\n            this.a2[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }\r\n        this.a1[1] = this.a2[1] = 0;\r\n    }\r\n    update() {\r\n        const sin1 = Math.sin(this.a1[0])\r\n        const cos1 = Math.cos(this.a1[0])\r\n        const sin2 = Math.sin(this.a2[0])\r\n        const cos2 = Math.cos(this.a2[0])\r\n\r\n        this.a1[2] = -this.g * (2 * this.m1 + this.m2) * sin1 - this.m2 * this.g * Math.sin(this.a1[0] - 2 * this.a2[0])\r\n        this.a1[2] -= 2 * Math.sin(this.a1[0] - this.a2[0]) * this.m2 * (this.a2[1] * this.a2[1] * this.r2 + this.a1[1] * this.a1[1] * this.r1 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a1[2] *= 1 / (this.r1 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a2[2] = 2 * Math.sin(this.a1[0] - this.a2[0])\r\n        this.a2[2] *= (this.a1[1] * this.a1[1] * this.r1 * (this.m1 + this.m2) + this.g * (this.m1 + this.m2) * cos1 + this.a2[1] * this.a2[1] * this.r2 * this.m2 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a2[2] *= 1 / (this.r2 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a1[1] += this.a1[2]\r\n        this.a2[1] += this.a2[2]\r\n        this.a1[0] += this.a1[1]\r\n        this.a2[0] += this.a2[1]\r\n\r\n        this.masses[0].translation.set(this.position.x + sin1 * this.r1, this.position.y + cos1 * this.r1);\r\n        this.masses[1].translation.set(this.masses[0].translation.x + sin2 * this.r2, this.masses[0].translation.y + cos2 * this.r2);\r\n\r\n        this.two.remove(this.traject);\r\n        if(this.path.length > 255)\r\n            this.path.shift();\r\n        this.path.push(this.masses[1].translation.clone());\r\n        this.traject = new Two.Path(this.path, false);\r\n        this.two.add(this.traject);\r\n        this.traject.noFill();\r\n    }\r\n}\r\nexport default DoublePendulum;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nvar G = 0;\r\nclass MassBall {\r\n    constructor(position, velocity, radius, two) {\r\n        this.acceleration = new Anchor(0, G);\r\n        this.two = two;\r\n        this.position = position;\r\n        this.velocity = velocity;\r\n        this.radius = radius;\r\n        this.mass = radius / 10;\r\n        this.circle = this.two.makeCircle(0, 0, radius);\r\n        this.circle.translation = position;\r\n        this.circle.fill = \"black\";\r\n    }\r\n    update() {\r\n        this.acceleration.y = G;\r\n        this.velocity.addSelf(this.acceleration);\r\n        this.position.addSelf(this.velocity);\r\n\r\n        if (this.position.y + this.radius > this.two.height) {\r\n            this.position.y = this.two.height - this.radius;\r\n            this.velocity.y *= -0.7;\r\n        } else if (this.position.y < this.radius) {\r\n            this.position.y = this.radius;\r\n            this.velocity.y *= -0.95;\r\n        }\r\n        if (this.position.x < this.radius) {\r\n            this.position.x = this.radius;\r\n            this.velocity.x *= -0.95;\r\n        } else if (this.position.x > this.two.width - this.radius) {\r\n            this.position.x = this.two.width - this.radius;\r\n            this.velocity.x *= -0.95;\r\n        }\r\n    }\r\n}\r\n\r\nclass ElascticCollisions extends Project {\r\n    constructor(two) {\r\n        super(two);\r\n        this.massBalls = [\r\n            new MassBall(new Anchor(this.width / 2 - 100, this.height), new Anchor(1, 0), 25, this.two),\r\n            new MassBall(new Anchor(this.width / 2 + 100, this.height), new Anchor(-1, 0), 25, this.two),\r\n        ];\r\n        this.gravityIndicator = this.two.makeText(\"Gravity OFF\", this.two.width / 2, 15, {size: 15});\r\n    }\r\n    init() {\r\n        this.two.clear();\r\n        this.frameCountAtChange = 0;\r\n        this.massBalls = [];\r\n    }\r\n    detectCollisions() {\r\n        this.massBalls.sort((a, b) => {\r\n            return a.position.x - b.position.x;\r\n        });\r\n        for (let i = 0; i < this.massBalls.length - 1; i++) {\r\n            for (let j = i + 1; j < this.massBalls.length; j++) {\r\n                let r1 = this.massBalls[i].radius;\r\n                let r2 = this.massBalls[j].radius;\r\n                let p1 = this.massBalls[i].position;\r\n                let p2 = this.massBalls[j].position;\r\n                if (p1.distanceTo(p2) < r1 + r2) {\r\n                    let m1 = this.massBalls[i].mass;\r\n                    let m2 = this.massBalls[j].mass;\r\n                    let v1 = this.massBalls[i].velocity;\r\n                    let v2 = this.massBalls[j].velocity;\r\n                    let normal = new Anchor();\r\n                    normal.sub(p1, p2).normalize();\r\n                    //Teleporting one of the mass balls to prevent it from merging with the other one.\r\n                    if (r1 > r2)\r\n                        p2.sub(p1, normal.clone().multiplyScalar(r1 + r2));\r\n                    else\r\n                        p1.add(normal.clone().multiplyScalar(r1 + r2), p2);\r\n                    normal.sub(p1, p2).normalize();\r\n                    let vr = new Anchor();\r\n                    let vn = normal.clone().multiplyScalar(vr.sub(v1, v2).dot(normal));\r\n                    v1.subSelf(vn.clone().multiplyScalar(2 * m2 / (m1 + m2)));\r\n                    v2.addSelf(vn.clone().multiplyScalar(2 * m1 / (m1 + m2)));\r\n                } else if (Math.abs(p1.x - p2.x) > 100)\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        // console.log(this.uniqueId);\r\n        for (let i = 0; i < this.massBalls.length; i++) {\r\n            this.massBalls[i].update();\r\n        }\r\n        this.detectCollisions();\r\n    }\r\n    simulateAtoms() {\r\n        this.init();\r\n        let radius = 5\r\n        for (let i = 0; i < 100; i++) {\r\n            let x = Math.random() * (this.width - radius) + radius;\r\n            let y = Math.random() * (this.height - radius) + radius;\r\n            let tempBall = new MassBall(new Anchor(x, y), new Anchor(Math.random() * 2 - 1, Math.random() * 2 - 1), radius, this.two);\r\n            this.massBalls.push(tempBall);\r\n        }\r\n    }\r\n    controlBall() {\r\n        let d = new Date();\r\n        let n = d.getTime();\r\n        this.currentBall.radius = 5 + Math.abs(Math.sin(n / 1000)) * 30;\r\n        this.currentBall.mass = this.currentBall.radius / 10;\r\n        this.currentBall.circle.radius = this.currentBall.radius;\r\n        this.two.remove(this.line);\r\n        this.line = this.two.makeLine(this.mousePos.x, this.mousePos.y, this.currentBall.position.x, this.currentBall.position.y);\r\n        this.currentBall.velocity.sub(this.currentBall.position, this.mousePos).multiplyScalar(0.05);\r\n    }\r\n    onMouseDown() {\r\n        this.currentBall = new MassBall(this.mousePos.clone(), new Anchor(), 25, this.two);\r\n        this.currentPos = this.mousePos.clone();\r\n        if (this.controlBall)\r\n            this.interval = setInterval(() => this.controlBall(), 10);\r\n    }\r\n    onMouseUp() {\r\n        if (this.currentBall)\r\n            this.massBalls.push(this.currentBall);\r\n        this.two.remove(this.line);\r\n        clearInterval(this.interval);\r\n        this.interval = false;\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyR\") {\r\n            this.init();\r\n        } else if (e.code === \"KeyG\") {\r\n            if (this.two.frameCount - this.frameCountAtChange > 10) {\r\n                G = G === 0 ? 0.1 : 0;\r\n                this.gravityIndicator.value = G === 0 ? \"Gravity OFF\" : \"Gravity ON\";\r\n                this.frameCountAtChange = this.two.frameCount;\r\n            }\r\n        } else if (e.code === \"KeyQ\") {\r\n            if (this.two.frameCount - this.frameCountAtChange > 10) {\r\n                this.simulateAtoms();\r\n                this.frameCountAtChange = this.two.frameCount;\r\n            }\r\n        } else if (e.code === \"KeyS\") {\r\n            for (let index = 0; index < 1000; index++) {\r\n                this.update();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ElascticCollisions;","import PerlinNoise from '../projects/PerlinNoise';\r\nimport OrbitSim from '../projects/OrbitSim';\r\nimport Snake from '../projects/Snake'\r\nimport Sort from '../projects/Sort.js';\r\nimport PathFinder from '../projects/PathFinder.js';\r\nimport RayCasting from '../projects/RayCasting.js';\r\nimport DoublePendulum from '../projects/DoublePendulum';\r\nimport ElascticCollisions from '../projects/ElasticCollisions';\r\n\r\n\r\nclass Project {\r\n    constructor(project, title, description, tips, keys){\r\n        this.project = project;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.tips = {\r\n            tips: tips,\r\n        }\r\n        Object.keys(keys).forEach( key => this.tips[key] = keys[key]);\r\n    }\r\n}\r\n\r\nconst projects = [\r\n    {\r\n        project: OrbitSim,\r\n        title: \"Orbit Simulation\",\r\n        description: \"This is a gravity simulator where you can spawn planets and make them orbit the sun by setting their initial velocity and direction.\",\r\n        tips: {\r\n            tips: \"Hold and drag the mouse to spawn a planet, try to make it orbit the sun.\",\r\n        }\r\n    },\r\n    {\r\n        project: ElascticCollisions,\r\n        title: \"Elastic Collisions\",\r\n        description: \"This is a simulation of Elastic Collisions where you can see how balls interact with each other.\",\r\n        tips: {\r\n            tips: \"Hold and drag the mouse to spawn a mass ball and control its velocity, be aware don't time travel if spawned many balls (it's heavy on the cpu).\",\r\n            \"Q\": \"Press Q (A for Azerty Keybords) for gaz simulation.\",\r\n            \"R\": \"Press R to reset the simulation and empty the chamber.\",\r\n            \"G\": \"Press G to toggle Gravity On/Off.\",\r\n            \"S\": \"Press and hold S for time travel.\",\r\n        }\r\n    },\r\n    {\r\n        project: Snake,\r\n        title: \"Snake\",\r\n        description: \"This is the basic snake game where you can feed your snake so that it grows and rizes your score.\",\r\n        tips: {\r\n            tips: \"use (W, A, S, D) or Arrows for controlling the snake, try to get the maximum score without hitting the walls.\",\r\n            \"E\": \"Press E to make the snake grow (Don't cheat, play the game !!).\",\r\n        }\r\n    },\r\n    {\r\n        project: DoublePendulum,\r\n        title: \"Double Pendulum\",\r\n        description: \"If you like physics like me, you must've heard about the double pendulum, which is basically two balls attached to each other by two lines and let the gravity do its thing.\",\r\n        tips: {\r\n            tips: \"Hold and drag the pendulum to control its initial state.\",\r\n        }\r\n    },\r\n    {\r\n        project: PerlinNoise,\r\n        title: \"Perlin Noise\",\r\n        description: \"This is an animation that showcases how smooth is the perlin noise. It's not just random values, it generates randomly close values\",\r\n        tips: {\r\n            tips: \"Just enjoy the animation.\",\r\n        }\r\n    },\r\n    {\r\n        project: Sort,\r\n        title: \"Sorting Visualizer\",\r\n        description: \"This program showcases different sorting algorithms. Basically it tries to sort the lines from the shortest to the longest\",\r\n        tips: {\r\n            tips: \"Shuffle the way you like, choose and algorithm and watch it do its thing, if you get too bored hold S to make it go boom boom\",\r\n            \"R\": \"Press R to shuffle\",\r\n            \"D\": \"Press D to change the suffling method (Perlin Noise/Random)\",\r\n            \"A\": \"Press A (Q for Azerty Keyboards) to choose QuickSort algorithm\",\r\n            \"B\": \"Press B to toggle Bubble Sort\",\r\n            \"I\": \"Press I to toggle Insertion Sort\",\r\n            \"S\": \"Press and hold S for time travel.\",\r\n        }\r\n    },\r\n    {\r\n        project: PathFinder,\r\n        title: \"Path Finder & Maze Generator\",\r\n        description: \"This program showcases how the Greedy Best First Search works in Finding paths to any location on the grid, it also shows two different ways for generating random mazes, the first uses the recursive division algorithm and the second uses Depth First Search algorithm\",\r\n        tips: {\r\n            tips: \"Generate a maze and set the start location and the final one, and start the path finding process, or you can draw your own obstacles using your mouse. Be creative and have fun!\",\r\n            \"G\": \"Press G for generating a maze using the Depth First Search algorithm.\",\r\n            \"Q\": \"Press Q(A for Azerty Keyboards) for generating a maze using the recusive division algorithm.\",\r\n            \"R\": \"Press R to empty the grid\",\r\n            \"D\": \"Press D to toggle Drawing\",\r\n            \"E\": \"Press E to toggle Erasing\",\r\n            \"P\": \"Pres P to generate a map using Perlin Noise\",\r\n            \"S\": \"Press S to start the Path Finding process.\"\r\n        }\r\n    },\r\n    {\r\n        project: RayCasting,\r\n        title: \"Ray Casting\",\r\n        description: \"This is a program that simulates how light rays interact with obstacles.\",\r\n        tips: {\r\n            tips: \"Use your mouse to move the light source.\",\r\n            \"R\": \"Press R to shuffle the obstacles.\",\r\n        }\r\n    },\r\n    \r\n]\r\nexport default projects","import Footer from './components/Footer.js';\nimport React from 'react';\nimport ProjectCard from './components/ProjectCard.js';\nimport projects from './data/projects';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectWidth: 420,\n      projectHeight: 260\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Footer/>\n        <div className=\"container\">\n          {projects.map((element, index) =>\n            <ProjectCard\n              project={element}\n              width={this.state.projectWidth}\n              height={this.state.projectHeight}\n              key={Math.random() * 100_000_000 * Date.now()}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nwindow.addEventListener(\"keydown\", function (e) {\n  if ([\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.code) > -1) {\n    e.preventDefault();\n  }\n}, false);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}