{"version":3,"sources":["components/TwoCanvas.js","projects/Project.js","projects/PerlinNoise.js","projects/OrbitSim.js","projects/Snake.js","components/Footer.js","projects/DoublePendulum.js","projects/Sort.js","projects/PathFinder.js","projects/RayCasting.js","App.js","reportWebVitals.js","index.js"],"names":["TwoCanvas","props","type","Two","Types","canvas","two","width","height","project","renderer","domElement","className","addEventListener","play","pause","update","ref","nodeElement","appendChild","React","Component","Project","this","e","onMouseMove","onMouseDown","onMouseUp","mousePos","Anchor","document","changeState","intervalFunction","init","bind","mx","clientX","getBoundingClientRect","left","my","clientY","top","set","interval","setInterval","clearInterval","text","Text","size","add","PerlinNoise","noise","Noise","Math","random","position","Vector","radius","noiseLayer","blob","Path","fill","noStroke","vertices","angle","PI","x","cos","y","sin","perlin3","multiplyScalar","addSelf","push","Planet","mass","orbitSim","sandbox","twoObject","Circle","translation","Moon","velocity","planets","acceleration","trajectory","collided","forEach","planet","ab","sub","pow","length","removeMoon","unbind","shift","clone","remove","orbit","noFill","OrbitSim","spawnMoon","mouse","moons","ui","alignment","value","moon","index","indexOf","splice","tempPosition","tempMoon","getMoonMouseVelocity","group","powerLine","makeLine","futurePositions","rgb","stroke","makeGroup","Snake","highestScore","moveSnake","food","makeRoundedRectangle","SpawnFood","coords","vels","body","square","currentScore","makeText","maxScore","code","justChanged","elongate","floor","clear","died","distanceTo","respawn","copy","Footer","DoublePendulum","controlPendulum","m1","m2","r1","r2","g","a1","a2","path","masses","firstLine","secondLine","subSelf","normalize","atan2","sin1","cos1","sin2","cos2","traject","Sort","justStarted","rectWidth","algorithm","rects","Array","map","rect","makeRectangle","perlin2","iterativeQuickSort","algorithmState","i","j","tmp","low","high","pivot","swap","stack","start","end","partitionHigh","greenAll","current","min","PathFinder","state","grid","draw","gridHeight","gridWidth","lineGroup","Group","children","line","Line","greedyBestFirstSearch","recursiveDivision","noiseGrid","node","max","makeRectangleRelativeToMouse","getIndexesOfRectangle","currentNode","neighbours","coord","parentNode","distance","calculateDistanceToEnd","closedList","openList","getNeighbours","sort","a","b","currentPathNode","areas","horizontal","vertical","condition","makeGridRect","noSpace","area","pop","leftLimit","rightLimit","topLimit","bottomLimit","rand","simplex2","sqrt","LightSource","rc","rayCount","rays","theta","x1","x2","y1","y2","point1","point2","obstacles","element","point","x3","y3","x4","y4","ua","ub","denom","line_intersect","RayCasting","setObstacles","lightSource","lines","obstacle","drawRays","App","projects","projectWidth","projectHeight","webgl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.356a08ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport Two from 'twojs-ts'\r\n\r\nclass TwoCanvas extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        const type = props.type ? props.type : Two.Types.canvas;\r\n        this.two = new Two({ width: props.width, height: props.height, type: type});\r\n        this.project = new props.project(this.two);\r\n        this.two.renderer.domElement.className = \"TwoCanvas\";\r\n        this.two.renderer.domElement.addEventListener(\"mouseenter\", () => this.two.play());\r\n        this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.two.pause());\r\n        this.two.update();\r\n        this.two.pause();\r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"divTwo\" ref={(nodeElement) => \r\n            {nodeElement && nodeElement.appendChild(this.two.renderer.domElement)}}>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default TwoCanvas;","import Two, { Anchor } from \"twojs-ts\";\r\n\r\nclass Project{\r\n    constructor(two){\r\n        this.two = two;\r\n        this.width = this.two.width;\r\n        this.height = this.two.height;\r\n        this.two.renderer.domElement.addEventListener(\"mousemove\", (e) => this.onMouseMove(e));\r\n        this.two.renderer.domElement.addEventListener(\"mousedown\", () => this.onMouseDown());\r\n        this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.onMouseUp());\r\n        this.two.renderer.domElement.addEventListener(\"mouseup\", () => this.onMouseUp());\r\n        this.mousePos = new Anchor();\r\n        document.addEventListener(\"keydown\", (e) => this.changeState(e));\r\n        this.intervalFunction = null;\r\n        this.init();\r\n        this.update = this.update.bind(this);\r\n        this.two.bind('update', this.update);\r\n    }\r\n    changeState(e){\r\n\r\n    }\r\n    onMouseMove(e){\r\n        this.mx = e.clientX - this.two.renderer.domElement.getBoundingClientRect().left;\r\n        this.my = e.clientY - this.two.renderer.domElement.getBoundingClientRect().top;\r\n        this.mousePos.set(this.mx, this.my);\r\n    }\r\n    onMouseDown() {\r\n        if(this.intervalFunction)\r\n            this.interval = setInterval(() => this.intervalFunction(), 10);\r\n    }\r\n    onMouseUp() {\r\n        clearInterval(this.interval);\r\n        this.interval = false;\r\n    }\r\n    init(){\r\n        //Overwrite this init function in your project subclass to initialise your simulation\r\n        let text = new Two.Text('Two Projects', this.width / 2, this.height /2, {size: 30});\r\n        this.two.add(text);\r\n    }\r\n    update(){\r\n        //Overwrite this Function in your project subclass \r\n    }\r\n}\r\nexport default Project;","import Two from 'twojs-ts';\r\nimport { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass PerlinNoise extends Project {\r\n    init(){\r\n        this.noise = new Noise(Math.random());\r\n        this.position = new Two.Vector(this.width / 2, this.height / 2);\r\n        this.radius = this.two.height / 3;\r\n        this.noiseLayer = 0;\r\n        this.blob = new Two.Path([], true, true);\r\n        this.two.add(this.blob);\r\n        this.blob.fill = 'rgb(0,0,40)'\r\n        this.blob.noStroke();\r\n    }\r\n    update() {\r\n        const vertices = [];\r\n        this.noiseLayer += 0.01;\r\n        for (let angle = 0; angle < 2 * Math.PI; angle += 0.01) {\r\n            var x = Math.cos(angle);\r\n            var y = Math.sin(angle);\r\n\r\n            var position = new Two.Anchor(x, y);\r\n            var radius = this.noise.perlin3(x*2, y*2, this.noiseLayer) * this.radius/3 + this.radius;\r\n\r\n            position.multiplyScalar(radius);\r\n            position.addSelf(this.position);\r\n\r\n            vertices.push(position);\r\n        }\r\n        this.blob.vertices = vertices;\r\n    }\r\n}\r\nexport default PerlinNoise;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst G = 100;\r\n\r\nclass Planet {\r\n    constructor(position, mass, two, orbitSim) {\r\n        this.orbitSim = orbitSim;\r\n        this.two = two;\r\n        this.position = position;\r\n        this.mass = mass;\r\n        this.radius = mass * 10;\r\n        this.init();\r\n        this.sandbox = false;\r\n    }\r\n    init() {\r\n        this.twoObject = new Two.Circle(this.position.x, this.position.y, this.radius);\r\n        this.two.add(this.twoObject);\r\n        this.twoObject.fill = \"black\";\r\n        this.twoObject.translation = this.position;\r\n    }\r\n}\r\nclass Moon extends Planet {\r\n    constructor(position, velocity, mass, two, planets, orbitSim) {\r\n        super(position, mass, two, orbitSim);\r\n        this.velocity = velocity;\r\n        this.planets = planets;\r\n        this.acceleration = new Two.Anchor();\r\n        this.update = this.update.bind(this);\r\n        this.trajectory = [];\r\n        this.two.bind('update', this.update).play();\r\n    }\r\n    update() {\r\n        let collided = false;\r\n        this.planets.forEach(planet => {\r\n            let ab = new Anchor();\r\n            ab.sub(planet.position, this.position);\r\n            ab.multiplyScalar(G * planet.mass / Math.pow(ab.length(), 3));\r\n            this.velocity.addSelf(ab);\r\n            if (ab.sub(this.position, planet.position).length() < this.radius + planet.radius) {\r\n                collided = true;\r\n                if (!this.sandbox)\r\n                    this.orbitSim.removeMoon(this);\r\n            }\r\n        });\r\n        this.position.addSelf(this.velocity);\r\n        if (this.position.length() > 5000)\r\n            this.sandbox ? collided = true : this.orbitSim.removeMoon(this);\r\n        if (collided && !this.sandbox)\r\n            this.two.unbind('update', this.update);\r\n        if (!this.sandbox && !collided) {\r\n            if (this.trajectory.length > 255)\r\n                this.trajectory.shift();\r\n            this.trajectory.push(this.position.clone());\r\n            this.two.remove(this.orbit);\r\n            this.orbit = new Two.Path(this.trajectory, false, true);\r\n            this.two.add(this.orbit);\r\n            this.orbit.noFill();\r\n        }\r\n        return collided;\r\n    }\r\n}\r\n\r\nclass OrbitSim extends Project {\r\n    init() {\r\n        this.intervalFunction = this.spawnMoon;\r\n        this.mouse = false;\r\n        this.mousePos = new Anchor();\r\n        this.planets = [new Planet(new Anchor(this.width / 2, this.height / 2), this.height / 100, this.two, this)];\r\n        this.moons = [new Moon(new Anchor(this.width / 4, this.height / 2), new Anchor(0, 1.5), this.height / 350, this.two, this.planets, this)]\r\n        this.ui = new Two.Text(`Moons remaining: ${this.moons.length}`, 10, 80, { alignment: \"left\", size: this.height / 15 });\r\n        this.two.add(this.ui);\r\n        this.two.add(new Two.Text(`Hold and drag to spawn a moon...`, 10, 50, { alignment: \"left\", size: this.height / 15 }));\r\n    }\r\n    update() {\r\n        this.ui.value = `Moons remaining: ${this.moons.length}`;\r\n    }\r\n    removeMoon(moon) {\r\n        let index = this.moons.indexOf(moon);\r\n        if (index > 0)\r\n            this.moons.splice(index, 1);\r\n        this.two.unbind('update', moon.update);\r\n        this.two.remove(moon.orbit);\r\n        this.two.remove(moon.twoObject);\r\n    }\r\n    onMouseDown() {\r\n        this.tempPosition = this.mousePos.clone();\r\n        this.tempMoon = new Moon(this.mousePos.clone(), new Anchor(0, 0), Math.random() * this.height / 150 + 0.1, this.two, this.planets, this);\r\n        this.tempMoon.sandbox = true;\r\n        this.mouse = setInterval(() => this.spawnMoon(), 10);\r\n    }\r\n    onMouseUp() {\r\n        if (this.mouse) {\r\n            clearInterval(this.mouse);\r\n            this.moons.push(this.tempMoon);\r\n            this.tempMoon.position = this.tempPosition.clone();\r\n            this.tempMoon.twoObject.translation = this.tempMoon.position;\r\n            this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n            this.tempMoon.sandbox = false;\r\n            this.mouse = false;\r\n            this.two.remove(this.group);\r\n            this.two.remove(this.powerLine);\r\n        }\r\n    }\r\n    getMoonMouseVelocity() {\r\n        let ab = new Anchor();\r\n        ab.sub(this.tempMoon.position, this.mousePos);\r\n        ab.multiplyScalar(0.01);\r\n        return ab;\r\n    }\r\n    spawnMoon() {\r\n        this.two.remove(this.group);\r\n        this.two.remove(this.powerLine);\r\n        this.tempMoon.position = this.tempPosition.clone();\r\n        this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n        this.powerLine = this.two.makeLine(this.mousePos.x, this.mousePos.y, this.tempMoon.position.x, this.tempMoon.position.y);\r\n        const iterations = 500;\r\n        const futurePositions = [];\r\n        for (let index = 0; index < iterations; index++) {\r\n            if (this.tempMoon.update())\r\n                break;\r\n            if (index % 20 === 0) {\r\n                futurePositions.push(new Two.Circle(this.tempMoon.position.x, this.tempMoon.position.y, 1));\r\n                const rgb = 255 * index / iterations;\r\n                futurePositions[futurePositions.length - 1].fill = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n                futurePositions[futurePositions.length - 1].stroke = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n            }\r\n        }\r\n        this.group = this.two.makeGroup(futurePositions);\r\n    }\r\n\r\n}\r\n\r\nexport default OrbitSim;","import { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass Snake extends Project {\r\n    constructor(two){\r\n        super(two);\r\n        this.highestScore = 0;\r\n    }\r\n    init() {\r\n        document.addEventListener(\"keydown\", (e) => this.moveSnake(e));\r\n        this.size = 20;\r\n        this.velocity = 2;\r\n        this.length = 4;\r\n        this.position = new Anchor(100 + this.size / 2, 120 + this.size / 2);\r\n        this.food = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        this.food.fill = \"rgb(0,0,100)\";\r\n        this.food.translation = new Anchor(0, 0);\r\n        this.SpawnFood();\r\n        this.coords = [this.position];\r\n        this.vels = [];\r\n        this.body = [];\r\n        for (let index = 0; index < this.length; index++) {\r\n            if (index !== 0)\r\n                this.coords.push(this.position.clone().addSelf(new Anchor(-this.size * index, 0)));\r\n            this.vels.push(new Anchor(this.velocity, 0));\r\n            let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n            square.translation = this.coords[index];\r\n            square.fill = index === 0 ? \"red\" : \"black\";\r\n            this.body.push(square);\r\n        }\r\n        this.currentScore = this.two.makeText(`Score: ${this.body.length}`, 15, 50, { size: 20, alignment: \"left\" });\r\n        this.maxScore = this.two.makeText(`Highest Score: ${this.highestScore}`, 15, 80, { size: 20, alignment: \"left\" })\r\n    }\r\n    elongate() {\r\n        this.coords.push(this.coords[this.coords.length - 1].clone());\r\n        this.vels.push(new Anchor(0, 0));\r\n        let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        square.translation = this.coords[this.coords.length - 1];\r\n        square.fill = \"black\";\r\n        this.body.push(square);\r\n    }\r\n    moveSnake(e) {\r\n        if ((e.code === \"KeyW\" || e.code === \"ArrowUp\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, -this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyS\" || e.code === \"ArrowDown\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyA\" || e.code === \"ArrowLeft\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(-this.velocity, 0);\r\n        }\r\n        else if ((e.code === \"KeyD\" || e.code === \"ArrowRight\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(this.velocity, 0);\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.justChanged = this.elongate;\r\n        }\r\n    }\r\n    SpawnFood() {\r\n        let x = Math.floor(Math.random() * this.width / this.size) * this.size + this.size / 2;\r\n        let y = Math.floor(Math.random() * this.height / this.size) * this.size + this.size / 2;\r\n        this.food.translation.set(x, y);\r\n    }\r\n    respawn() {\r\n        this.two.clear();\r\n        this.init();\r\n    }\r\n    update() {\r\n        let died = false;\r\n        this.coords.forEach((position, index) => {\r\n            position.addSelf(this.vels[index]);\r\n            if (!position.distanceTo(this.position) && index !== 0)\r\n                died = true;\r\n        })\r\n        if (this.position.x < 0 || this.position.y < 0 || this.position.x > this.width || this.position.y > this.height)\r\n            died = true;\r\n        if (died)\r\n            this.respawn();\r\n\r\n        if ((this.position.x - this.size / 2) % this.size === 0 && (this.position.y - this.size / 2) % this.size === 0) {\r\n            for (let index = this.vels.length - 1; index > 0; index--) {\r\n                this.vels[index].copy(this.vels[index - 1]);\r\n            }\r\n            if (typeof this.justChanged === \"function\") {\r\n                this.justChanged();\r\n                this.justChanged = null;\r\n            }\r\n            else if (this.justChanged) {\r\n                this.vels[0].copy(this.justChanged);\r\n                this.justChanged = null;\r\n            }\r\n        }\r\n\r\n        if (!this.position.distanceTo(this.food.translation)) {\r\n            this.SpawnFood();\r\n            this.elongate();\r\n            this.currentScore.value = `Score: ${this.body.length}`;\r\n            if (this.body.length > this.highestScore) {\r\n                this.highestScore = this.body.length;\r\n                this.maxScore.value = `Highest Score: ${this.highestScore}`;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Snake;","import React from \"react\"\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer className=\"footer\">\r\n            <h3>Summer Projects</h3>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass DoublePendulum extends Project {\r\n    init() {\r\n        this.intervalFunction = this.controlPendulum;\r\n        this.m1 = this.m2 = this.height / 30;\r\n        this.r1 = this.r2 = this.height / 4;\r\n        this.g = 0.05;\r\n        this.a1 = [3.9, 0, 0];\r\n        this.a2 = [2.5, 0, 0];\r\n        this.path = [];\r\n        this.position = new Anchor(this.width / 2, this.height / 3);\r\n        this.masses = [new Two.Circle(0, 0, this.m1), new Two.Circle(0, 0, this.m2)];\r\n        this.masses.forEach((mass) => {\r\n            mass.translation = new Anchor();\r\n            mass.fill = \"black\";\r\n        })\r\n        this.firstLine = this.two.makeLine();\r\n        this.secondLine = this.two.makeLine();\r\n        this.firstLine.vertices = [this.position, this.masses[0].translation];\r\n        this.secondLine.vertices = [ this.masses[1].translation, this.masses[0].translation];\r\n        this.two.add(this.masses);\r\n        this.text = new Two.Text(\"Hold and drag to change masses' position..\", 10, 30, {alignment: \"left\", size: this.height / 20});\r\n        this.two.add(this.text);\r\n    }\r\n    controlPendulum(){\r\n        let mousePos = new Anchor(this.mx, this.my);\r\n        if(mousePos.distanceTo(this.masses[0].translation) < mousePos.distanceTo(this.masses[1].translation)){\r\n            mousePos.subSelf(this.position);\r\n            mousePos.normalize();\r\n            this.a1[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }else{\r\n            mousePos.subSelf(this.masses[0].translation);\r\n            mousePos.normalize();\r\n            this.a2[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }\r\n        this.a1[1] = this.a2[1] = 0;\r\n    }\r\n    update() {\r\n        const sin1 = Math.sin(this.a1[0])\r\n        const cos1 = Math.cos(this.a1[0])\r\n        const sin2 = Math.sin(this.a2[0])\r\n        const cos2 = Math.cos(this.a2[0])\r\n\r\n        this.a1[2] = -this.g * (2 * this.m1 + this.m2) * sin1 - this.m2 * this.g * Math.sin(this.a1[0] - 2 * this.a2[0])\r\n        this.a1[2] -= 2 * Math.sin(this.a1[0] - this.a2[0]) * this.m2 * (this.a2[1] * this.a2[1] * this.r2 + this.a1[1] * this.a1[1] * this.r1 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a1[2] *= 1 / (this.r1 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a2[2] = 2 * Math.sin(this.a1[0] - this.a2[0])\r\n        this.a2[2] *= (this.a1[1] * this.a1[1] * this.r1 * (this.m1 + this.m2) + this.g * (this.m1 + this.m2) * cos1 + this.a2[1] * this.a2[1] * this.r2 * this.m2 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a2[2] *= 1 / (this.r2 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a1[1] += this.a1[2]\r\n        this.a2[1] += this.a2[2]\r\n        this.a1[0] += this.a1[1]\r\n        this.a2[0] += this.a2[1]\r\n\r\n        this.masses[0].translation.set(this.position.x + sin1 * this.r1, this.position.y + cos1 * this.r1);\r\n        this.masses[1].translation.set(this.masses[0].translation.x + sin2 * this.r2, this.masses[0].translation.y + cos2 * this.r2);\r\n\r\n        this.two.remove(this.traject);\r\n        if(this.path.length > 255)\r\n            this.path.shift();\r\n        this.path.push(this.masses[1].translation.clone());\r\n        this.traject = new Two.Path(this.path, false);\r\n        this.two.add(this.traject);\r\n        this.traject.noFill();\r\n    }\r\n}\r\nexport default DoublePendulum;","import { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass Sort extends Project {\r\n    init() {\r\n        this.two.clear();\r\n        this.justStarted = true;\r\n        this.noise = new Noise(Math.random());\r\n        this.rectWidth = 1;\r\n        this.algorithm = null;\r\n        this.length = this.width / this.rectWidth;\r\n        this.rects = Array(this.length).fill(0).map((value, index) => {\r\n            let rect = this.two.makeRectangle(\r\n                index * this.rectWidth,\r\n                this.height / 2,\r\n                this.rectWidth,\r\n                this.noise.perlin2(index * 0.02, 0) * this.height / 2 + this.height / 2\r\n                //this.height * (this.length - index) / this.length\r\n            );\r\n            rect.fill = \"black\";\r\n            return rect;\r\n        })\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyS\") {\r\n            this.algorithm = this.iterativeQuickSort;\r\n            this.algorithmState = \"justStarted\";\r\n        } else if (e.code === \"KeyR\") {\r\n            this.init();\r\n        }\r\n    }\r\n    swap(i, j) {\r\n        let tmp = this.rects[i].height;\r\n        this.rects[i].height = this.rects[j].height;\r\n        this.rects[j].height = tmp;\r\n    }\r\n    partitionHigh(low, high) {\r\n        let pivot = this.rects[high].height;\r\n        let i = low;\r\n        for (let j = low; j < high; j++) {\r\n            if (this.rects[j].height <= pivot) {\r\n                this.swap(i, j);\r\n                i++;\r\n            }\r\n        }\r\n        this.swap(i, high);\r\n        return i;\r\n    }\r\n    iterativeQuickSort() {\r\n        if (this.justStarted) {\r\n            this.stack = [];\r\n            this.start = 0;\r\n            this.end = this.rects.length - 1;\r\n            this.stack.push({ x: this.start, y: this.end });\r\n            this.justStarted = false;\r\n        }\r\n        if (this.stack.length) {\r\n            const { x, y } = this.stack.shift();\r\n            const PI = this.partitionHigh(x, y);\r\n\r\n            if (PI - 1 > x) {\r\n                this.stack.push({ x: x, y: PI - 1 });\r\n            }\r\n            if (PI + 1 < y) {\r\n                this.stack.push({ x: PI + 1, y: y });\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    bubbleSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length - 1) {\r\n            if (this.j < this.length - this.i - 1) {\r\n                if (this.rects[this.j].height > this.rects[this.j + 1].height) {\r\n                    this.swap(this.j, this.j + 1);\r\n                }\r\n                this.j++;\r\n            }\r\n            else {\r\n                this.j = 0;\r\n                this.i++;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    insertionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 1;\r\n            this.j = 0;\r\n            this.current = this.rects[this.i].height;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j > - 1 && this.current < this.rects[this.j].height) {\r\n                this.rects[this.j + 1].height = this.rects[this.j].height;\r\n                this.j--;\r\n            } else {\r\n                this.rects[this.j + 1].height = this.current;\r\n                this.i++;\r\n                this.j = this.i - 1;\r\n                if (this.i < this.length)\r\n                    this.current = this.rects[this.i].height;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    selectionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = this.i + 1;\r\n            this.min = this.i;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j < this.length) {\r\n                if (this.rects[this.j].height < this.rects[this.min].height) {\r\n                    this.min = this.j\r\n                }\r\n                this.j++;\r\n            } else {\r\n                this.swap(this.i, this.min);\r\n                this.i++;\r\n                this.j = this.i + 1;\r\n                this.min = this.i;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    greenAll() {\r\n        if (this.i < this.length) {\r\n            this.rects[this.i].fill = \"green\";\r\n            this.rects[this.i].stroke = \"green\";\r\n            this.i++;\r\n        } else {\r\n            this.init();\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default Sort;","import { Noise } from 'noisejs';\r\nimport Two from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass PathFinder extends Project {\r\n    init() {\r\n        this.two.clear();\r\n        this.start = null;\r\n        this.end = null;\r\n        this.state = \"drawing\";\r\n        this.algorithm = null\r\n        this.grid = [];\r\n        if (!this.size){\r\n            this.size = 10;\r\n            this.algorithmState = \"justStarted\";\r\n            this.intervalFunction = this.draw;\r\n            this.gridHeight = this.height / this.size;\r\n            this.gridWidth = this.width / this.size;\r\n            this.lineGroup = new Two.Group();\r\n        }\r\n        if(this.lineGroup.children.length < this.gridWidth * this.gridHeight){\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n                let line = new Two.Line(i * this.size, 0, i * this.size, this.height);\r\n                line.stroke = \"lightblue\";\r\n                this.lineGroup.add(line);\r\n                if (i < this.gridHeight) {\r\n                    let line = new Two.Line(0, i * this.size, this.width, i * this.size);\r\n                    line.stroke = \"lightblue\";\r\n                    this.lineGroup.add(line);\r\n                }\r\n            }\r\n        }else{\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n            }\r\n        }\r\n        \r\n        this.two.add(this.lineGroup);\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyS\") {\r\n            if (this.start && this.end && !this.algorithm) {\r\n                this.algorithm = this.greedyBestFirstSearch;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        }\r\n        else if (e.code === \"KeyD\") {\r\n            this.state = \"drawing\";\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.state = \"erasing\";\r\n        }\r\n        else if (e.code === \"KeyR\") {\r\n            this.state = \"resetting\";\r\n            this.init();\r\n        } else if (e.code === \"KeyQ\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.recursiveDivision;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyP\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.noiseGrid;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        }\r\n    }\r\n    makeRectangleRelativeToMouse() {\r\n        return this.two.makeRectangle(\r\n            Math.floor(this.mx / this.size) * this.size + this.size / 2,\r\n            Math.floor(this.my / this.size) * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    makeGridRect(x, y) {\r\n        return this.two.makeRectangle(\r\n            x * this.size + this.size / 2,\r\n            y * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    getIndexesOfRectangle(node) {\r\n        let x = Math.min(\r\n            Math.max((\r\n                node.translation.x - this.size / 2) / this.size,\r\n                0),\r\n            this.width - 1\r\n        );\r\n        let y = (node.translation.y - this.size / 2) / this.size;\r\n        return [x, y];\r\n    }\r\n    draw() {\r\n        let rect = this.makeRectangleRelativeToMouse();\r\n        let [x, y] = this.getIndexesOfRectangle(rect);\r\n        if (this.state === \"drawing\") {\r\n            if (!this.grid[x][y]) {\r\n                this.grid[x][y] = rect;\r\n                if (!this.start) {\r\n                    this.start = rect\r\n                    this.start.fill = \"red\";\r\n                }\r\n                else if (!this.end) {\r\n                    this.end = rect;\r\n                    this.end.fill = \"green\";\r\n                }\r\n                else {\r\n                    rect.fill = \"black\";\r\n                }\r\n            }\r\n            else {\r\n                this.two.remove(rect);\r\n            }\r\n        }\r\n        else if (this.state === \"erasing\") {\r\n            this.two.remove(rect);\r\n            this.two.remove(this.grid[x][y]);\r\n            if (this.grid[x][y] === this.start)\r\n                this.start = null;\r\n            else if (this.grid[x][y] === this.end)\r\n                this.end = null;\r\n            this.grid[x][y] = null;\r\n        }\r\n\r\n    }\r\n    getNeighbours(node) {\r\n        let [x, y] = this.getIndexesOfRectangle(node.currentNode);\r\n        const tmp = [];\r\n        if (x !== 0)\r\n            tmp.push([-1, 0])\r\n        if (x !== this.gridWidth - 1)\r\n            tmp.push([1, 0])\r\n        if (y !== this.gridHeight - 1)\r\n            tmp.push([0, 1])\r\n        if (y !== 0)\r\n            tmp.push([0, -1])\r\n        let neighbours = []\r\n        tmp.forEach((coord) => {\r\n            if (!this.grid[x + coord[0]][coord[1] + y]) {\r\n                const tmp = this.grid[x + coord[0]][coord[1] + y] = this.two.makeRectangle(\r\n                    Math.floor(x + coord[0]) * this.size + this.size / 2,\r\n                    Math.floor(coord[1] + y) * this.size + this.size / 2,\r\n                    this.size,\r\n                    this.size\r\n                );\r\n                tmp.fill = \"lightblue\";\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: tmp,\r\n                    distance: this.calculateDistanceToEnd(tmp)\r\n                });\r\n            }\r\n            else if (this.grid[x + coord[0]][coord[1] + y] === this.end) {\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: this.grid[x + coord[0]][coord[1] + y],\r\n                    distance: this.calculateDistanceToEnd(this.grid[x + coord[0]][coord[1] + y])\r\n                });\r\n            }\r\n        });\r\n        return neighbours;\r\n    }\r\n    calculateDistanceToEnd(node) {\r\n        return node.translation.distanceTo(this.end.translation);\r\n    }\r\n    greedyBestFirstSearch() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.closedList = [{\r\n                parentNode: null,\r\n                currentNode: this.start,\r\n                distance: this.calculateDistanceToEnd(this.start)\r\n            }];\r\n            this.openList = this.getNeighbours(this.closedList[0]);\r\n            this.algorithmState = \"findingPath\";\r\n        } else if (this.algorithmState === \"findingPath\") {\r\n            this.openList.sort((a, b) => a.distance - b.distance);\r\n            let current = this.openList.shift();\r\n            if (current && current.currentNode !== this.end) {\r\n                current.currentNode.fill = \"skyblue\";\r\n                this.closedList.push(current);\r\n                this.getNeighbours(current).forEach((e) =>\r\n                    this.openList.push(e)\r\n                );\r\n            } else if (!current) {\r\n                this.algorithmState = \"pathNotFound\";\r\n                this.algorithm = null;\r\n            } else {\r\n                this.algorithmState = \"pathFound\";\r\n                this.closedList.push(current);\r\n                this.currentPathNode = current.parentNode;\r\n            }\r\n        } else if (this.algorithmState === \"pathFound\") {\r\n            if (this.currentPathNode.currentNode !== this.start) {\r\n                this.currentPathNode.currentNode.fill = \"yellow\";\r\n                this.currentPathNode = this.currentPathNode.parentNode;\r\n            } else {\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    rand(x, y) {\r\n        return x = Math.floor(Math.random() * (1 + y - x)) + x;\r\n    }\r\n    recursiveDivision() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.algorithmState = \"borderLimiting\";\r\n            this.i = 0;\r\n            this.areas = [{ horizontal: [0, this.gridWidth - 1], vertical: [0, this.gridHeight - 1] }];\r\n        } else if (this.algorithmState === \"borderLimiting\") {\r\n            let condition = 0;\r\n            if (this.i < this.gridWidth) {\r\n                this.grid[this.i][0] = this.makeGridRect(this.i, 0);\r\n                this.grid[this.i][0].fill = \"black\";\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1] = this.makeGridRect(this.gridWidth - 1 - this.i, this.gridHeight - 1);\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            if (0 < this.i && this.i < this.gridHeight - 1) {\r\n                this.grid[0][this.i] = this.makeGridRect(0, this.i)\r\n                this.grid[0][this.i].fill = \"black\";\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i] = this.makeGridRect(this.gridWidth - 1, this.gridHeight - 1 - this.i);\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            this.i++;\r\n            if (condition === 2)\r\n                this.algorithmState = \"mazeGenerating\";\r\n        } else if (this.areas.length && this.algorithmState === \"mazeGenerating\") {\r\n            //let horizontal = Boolean(Math.round(Math.random()));\r\n            let noSpace = 0;\r\n            const area = this.areas.pop();\r\n            let [leftLimit, rightLimit] = area.horizontal;\r\n            let [topLimit, bottomLimit] = area.vertical;\r\n            let horizontal = (rightLimit - leftLimit) > (bottomLimit - topLimit);\r\n            if (horizontal) {\r\n                if (rightLimit - leftLimit > 3) {\r\n                    this.x = this.rand(leftLimit + 3, rightLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: [leftLimit, this.x], vertical: area.vertical },\r\n                        { horizontal: [this.x, rightLimit], vertical: area.vertical }\r\n                    );\r\n                    if (!this.grid[this.x][topLimit])\r\n                        topLimit += 2;\r\n                    if (!this.grid[this.x][bottomLimit])\r\n                        bottomLimit -= 2;\r\n                    this.y = this.rand(topLimit + 1, bottomLimit - 1)\r\n                    this.i = topLimit;\r\n                    this.bottomLimit = bottomLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = true;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (!horizontal) {\r\n                if (bottomLimit - topLimit > 3) {\r\n                    this.y = this.rand(topLimit + 3, bottomLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: area.horizontal, vertical: [topLimit, this.y] },\r\n                        { horizontal: area.horizontal, vertical: [this.y, bottomLimit] }\r\n                    );\r\n                    if (!this.grid[leftLimit][this.y])\r\n                        leftLimit += 2;\r\n                    if (!this.grid[rightLimit][this.y])\r\n                        rightLimit -= 2;\r\n                    this.x = this.rand(leftLimit + 1, rightLimit - 1)\r\n                    this.i = leftLimit;\r\n                    this.rightLimit = rightLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = false;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (noSpace == 1)\r\n                this.areas.pop();\r\n        } else if (this.algorithmState === \"lineDrawing\") {\r\n            if (this.vertical) {\r\n                if (this.i <= this.bottomLimit) {\r\n                    if (this.i != this.y && !this.grid[this.x][this.i]) {\r\n                        this.grid[this.x][this.i] = this.makeGridRect(this.x, this.i);\r\n                        this.grid[this.x][this.i].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n\r\n            } else {\r\n                if (this.i <= this.rightLimit) {\r\n                    if (this.i != this.x && !this.grid[this.i][this.y]) {\r\n                        this.grid[this.i][this.y] = this.makeGridRect(this.i, this.y);\r\n                        this.grid[this.i][this.y].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n            }\r\n            this.i++;\r\n        } else {\r\n            this.algorithm = null;\r\n        }\r\n    }\r\n    noiseGrid() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.noise = new Noise(Math.random());\r\n            this.algorithmState = \"gridMaking\";\r\n        } else if (this.algorithmState === \"gridMaking\") {\r\n            if (this.i < this.gridWidth) {\r\n                if (this.j < this.gridHeight) {\r\n                    let noise = this.noise.simplex2(this.i * 0.1, this.j * 0.1)\r\n                    if (noise >= 0) {\r\n                        this.grid[this.i][this.j] = this.makeGridRect(this.i, this.j);\r\n                        this.grid[this.i][this.j].fill = \"black\";\r\n                    }\r\n                    this.j++;\r\n                } else {\r\n                    this.j = 0;\r\n                    this.i++;\r\n                }\r\n            } else {\r\n                this.algorithmState = \"justStarted\";\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default PathFinder;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst PI = Math.PI;\r\nconst sqrt = Math.sqrt;\r\n\r\nfunction line_intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n    var ua, ub, denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n    if (denom == 0) {\r\n        return null;\r\n    }\r\n    ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;\r\n    ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;\r\n    let seg1 = ua >= 0 && ua <= 1;\r\n    let seg2 = ub >= 0 && ub <= 1;\r\n    if(seg1 && seg2)\r\n        return new Anchor(x1 + ua * (x2 - x1), y1 + ua * (y2 - y1));\r\n    else \r\n        return null;\r\n}\r\n\r\nclass LightSource {\r\n    constructor(rc) {\r\n        this.rc = rc;\r\n        this.position = rc.mousePos;\r\n        this.rayCount = 101;\r\n    }\r\n    drawRays() {\r\n        this.rc.two.remove(this.rays);\r\n        this.rays = new Two.Group();\r\n        for (let theta = 0; theta < 2 * PI; theta += 2 * PI / this.rayCount) {\r\n            let x1 = this.position.x + this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let x2 = this.position.x - this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let y1 = this.position.y + (x1 - this.position.x) * sin(theta) / cos(theta);\r\n            let y2 = this.position.y + (x2 - this.position.x) * sin(theta) / cos(theta);\r\n            let point1 = new Anchor(x1, y1);\r\n            let point2 = new Anchor(x2, y2);\r\n            this.rc.obstacles.forEach(element => {\r\n                let point = line_intersect(\r\n                    x1, y1,\r\n                    x2, y2,\r\n                    element[0].x, element[0].y,\r\n                    element[1].x, element[1].y\r\n                );\r\n                if (point && (x1 - this.position.x) * (point.x - this.position.x) > 0){\r\n                    if (point.distanceTo(this.position) < point1.distanceTo(this.position))\r\n                        point1.copy(point);\r\n                }    \r\n                else if (point){\r\n                    if (point.distanceTo(this.position) < this.position.distanceTo(point2))\r\n                        point2.copy(point);\r\n                }               \r\n            });\r\n            let line = new Two.Line(point1.x, point1.y, point2.x, point2.y);\r\n            line.stroke = \"white\";\r\n            this.rays.add(line);\r\n        }\r\n        this.rc.two.add(this.rays);\r\n    }\r\n}\r\n\r\nclass RayCasting extends Project {\r\n    init() {\r\n        this.rect = this.two.makeRectangle(this.width / 2, this.height / 2, this.width, this.height);\r\n        this.rect.fill = \"black\";\r\n        this.setObstacles();  \r\n        this.lightSource = new LightSource(this);\r\n        \r\n    }\r\n    setObstacles(){\r\n        this.two.remove(this.lines);\r\n        this.lines = new Two.Group();\r\n        this.obstacles = []\r\n        for (let i = 0; i < 5; i++) {\r\n            let x1 = Math.random()*this.width;\r\n            let x2 = Math.random()*this.width;\r\n            let y1 = Math.random()*this.height;\r\n            let y2 = Math.random()*this.height;\r\n            let obstacle = new Two.Line(x1, y1, x2, y2);\r\n            obstacle.stroke = \"white\";\r\n            this.lines.add(obstacle);\r\n            this.obstacles.push([new Anchor(x1, y1), new Anchor(x2, y2)]);\r\n        }\r\n        this.two.add(this.lines);\r\n    }\r\n    update() {\r\n        this.lightSource.drawRays();\r\n    }\r\n    changeState(e){\r\n        if(e.code === \"KeyR\"){\r\n            this.setObstacles();\r\n        }\r\n    }\r\n}\r\nexport default RayCasting;","import TwoCanvas from './components/TwoCanvas.js';\nimport PerlinNoise from './projects/PerlinNoise';\nimport OrbitSim from './projects/OrbitSim';\nimport Snake from './projects/Snake'\nimport Footer from './components/Footer.js';\nimport React from 'react';\nimport DoublePendulum from './projects/DoublePendulum.js';\nimport Sort from './projects/Sort.js';\nimport PathFinder from './projects/PathFinder.js';\nimport Project from './projects/Project.js';\nimport Two from 'twojs-ts';\nimport RayCasting from './projects/RayCasting.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [OrbitSim, Snake, DoublePendulum, PerlinNoise, Sort, PathFinder, RayCasting ,Project],\n      projectWidth: 420,\n      projectHeight: 260\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Footer />\n        <div className=\"container\">\n          {this.state.projects.map(element =>\n               <TwoCanvas \n               project={element}\n               key={element}\n               width={this.state.projectWidth} \n               height={this.state.projectHeight}\n               type={element == PathFinder ? Two.Types.webgl : Two.Types.canvas}\n               />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}