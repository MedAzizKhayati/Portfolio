{"version":3,"sources":["projects/Project.js","projects/PerlinNoise.js","projects/OrbitSim.js","projects/Snake.js","components/Footer.js","projects/DoublePendulum.js","projects/Sort.js","projects/PathFinder.js","projects/RayCasting.js","components/TwoCanvas.js","components/ProjectCard.js","App.js","reportWebVitals.js","index.js"],"names":["Project","two","this","width","height","renderer","domElement","addEventListener","e","onMouseMove","onMouseDown","onMouseUp","mousePos","Anchor","document","changeState","intervalFunction","init","update","bind","mx","clientX","getBoundingClientRect","left","my","clientY","top","set","interval","setInterval","clearInterval","text","Two","Text","size","add","PerlinNoise","noise","Noise","Math","random","position","Vector","radius","noiseLayer","blob","Path","fill","noStroke","vertices","angle","PI","x","cos","y","sin","perlin3","multiplyScalar","addSelf","push","Planet","mass","orbitSim","sandbox","twoObject","Circle","translation","Moon","velocity","planets","acceleration","trajectory","play","collided","forEach","planet","ab","sub","pow","length","removeMoon","unbind","shift","clone","remove","orbit","noFill","OrbitSim","spawnMoon","mouse","moons","ui","alignment","value","moon","index","indexOf","splice","tempPosition","tempMoon","getMoonMouseVelocity","group","powerLine","makeLine","futurePositions","rgb","stroke","makeGroup","Snake","highestScore","moveSnake","food","makeRoundedRectangle","SpawnFood","coords","vels","body","square","currentScore","makeText","maxScore","code","justChanged","elongate","floor","clear","died","distanceTo","respawn","copy","Footer","className","DoublePendulum","controlPendulum","m1","m2","r1","r2","g","a1","a2","path","masses","firstLine","secondLine","subSelf","normalize","atan2","sin1","cos1","sin2","cos2","traject","Sort","justStarted","rectWidth","algorithm","rects","Array","map","rect","makeRectangle","perlin2","iterativeQuickSort","algorithmState","i","j","tmp","low","high","pivot","swap","stack","start","end","partitionHigh","greenAll","current","min","PathFinder","state","grid","draw","gridHeight","gridWidth","lineGroup","Group","children","line","Line","greedyBestFirstSearch","recursiveDivision","noiseGrid","node","max","makeRectangleRelativeToMouse","getIndexesOfRectangle","currentNode","neighbours","coord","parentNode","distance","calculateDistanceToEnd","closedList","openList","getNeighbours","sort","a","b","currentPathNode","areas","horizontal","vertical","condition","makeGridRect","noSpace","area","pop","leftLimit","rightLimit","topLimit","bottomLimit","rand","simplex2","sqrt","LightSource","rc","rayCount","rays","theta","x1","x2","y1","y2","point1","point2","obstacles","element","point","x3","y3","x4","y4","ua","ub","denom","line_intersect","RayCasting","setObstacles","lightSource","lines","obstacle","drawRays","TwoCanvas","type","props","Types","canvas","project","pause","parentElement","removeChild","ref","nodeElement","appendChild","React","Component","ProjectCard","maximized","setState","webgl","onClick","maximize","App","projects","projectWidth","projectHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0a3eb62.chunk.js","sourcesContent":["import Two, { Anchor } from \"twojs-ts\";\r\n\r\nclass Project{\r\n    constructor(two){\r\n        this.two = two;\r\n        this.width = this.two.width;\r\n        this.height = this.two.height;\r\n        this.two.renderer.domElement.addEventListener(\"mousemove\", (e) => this.onMouseMove(e));\r\n        this.two.renderer.domElement.addEventListener(\"mousedown\", () => this.onMouseDown());\r\n        this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.onMouseUp());\r\n        this.two.renderer.domElement.addEventListener(\"mouseup\", () => this.onMouseUp());\r\n        this.mousePos = new Anchor();\r\n        document.addEventListener(\"keydown\", (e) => this.changeState(e));\r\n        this.intervalFunction = null;\r\n        this.init();\r\n        this.update = this.update.bind(this);\r\n        this.two.bind('update', this.update);\r\n    }\r\n    changeState(e){\r\n\r\n    }\r\n    onMouseMove(e){\r\n        this.mx = e.clientX - this.two.renderer.domElement.getBoundingClientRect().left;\r\n        this.my = e.clientY - this.two.renderer.domElement.getBoundingClientRect().top;\r\n        this.mousePos.set(this.mx, this.my);\r\n    }\r\n    onMouseDown() {\r\n        if(this.intervalFunction)\r\n            this.interval = setInterval(() => this.intervalFunction(), 10);\r\n    }\r\n    onMouseUp() {\r\n        clearInterval(this.interval);\r\n        this.interval = false;\r\n    }\r\n    init(){\r\n        //Overwrite this init function in your project subclass to initialise your simulation\r\n        let text = new Two.Text('Two Projects', this.width / 2, this.height /2, {size: 30});\r\n        this.two.add(text);\r\n    }\r\n    update(){\r\n        //Overwrite this Function in your project subclass \r\n    }\r\n    toString(){\r\n        return \"Project\";\r\n    }\r\n}\r\nexport default Project;","import Two from 'twojs-ts';\r\nimport { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass PerlinNoise extends Project {\r\n    init(){\r\n        this.noise = new Noise(Math.random());\r\n        this.position = new Two.Vector(this.width / 2, this.height / 2);\r\n        this.radius = this.two.height / 3;\r\n        this.noiseLayer = 0;\r\n        this.blob = new Two.Path([], true, true);\r\n        this.two.add(this.blob);\r\n        this.blob.fill = 'rgb(0,0,40)'\r\n        this.blob.noStroke();\r\n    }\r\n    update() {\r\n        const vertices = [];\r\n        this.noiseLayer += 0.01;\r\n        for (let angle = 0; angle < 2 * Math.PI; angle += 0.01) {\r\n            var x = Math.cos(angle);\r\n            var y = Math.sin(angle);\r\n\r\n            var position = new Two.Anchor(x, y);\r\n            var radius = this.noise.perlin3(x*2, y*2, this.noiseLayer) * this.radius/3 + this.radius;\r\n\r\n            position.multiplyScalar(radius);\r\n            position.addSelf(this.position);\r\n\r\n            vertices.push(position);\r\n        }\r\n        this.blob.vertices = vertices;\r\n    }\r\n}\r\nexport default PerlinNoise;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst G = 100;\r\n\r\nclass Planet {\r\n    constructor(position, mass, two, orbitSim) {\r\n        this.orbitSim = orbitSim;\r\n        this.two = two;\r\n        this.position = position;\r\n        this.mass = mass;\r\n        this.radius = mass * 10;\r\n        this.init();\r\n        this.sandbox = false;\r\n    }\r\n    init() {\r\n        this.twoObject = new Two.Circle(this.position.x, this.position.y, this.radius);\r\n        this.two.add(this.twoObject);\r\n        this.twoObject.fill = \"black\";\r\n        this.twoObject.translation = this.position;\r\n    }\r\n}\r\nclass Moon extends Planet {\r\n    constructor(position, velocity, mass, two, planets, orbitSim) {\r\n        super(position, mass, two, orbitSim);\r\n        this.velocity = velocity;\r\n        this.planets = planets;\r\n        this.acceleration = new Two.Anchor();\r\n        this.update = this.update.bind(this);\r\n        this.trajectory = [];\r\n        this.two.bind('update', this.update).play();\r\n    }\r\n    update() {\r\n        let collided = false;\r\n        this.planets.forEach(planet => {\r\n            let ab = new Anchor();\r\n            ab.sub(planet.position, this.position);\r\n            ab.multiplyScalar(G * planet.mass / Math.pow(ab.length(), 3));\r\n            this.velocity.addSelf(ab);\r\n            if (ab.sub(this.position, planet.position).length() < this.radius + planet.radius) {\r\n                collided = true;\r\n                if (!this.sandbox)\r\n                    this.orbitSim.removeMoon(this);\r\n            }\r\n        });\r\n        this.position.addSelf(this.velocity);\r\n        if (this.position.length() > 5000)\r\n            this.sandbox ? collided = true : this.orbitSim.removeMoon(this);\r\n        if (collided && !this.sandbox)\r\n            this.two.unbind('update', this.update);\r\n        if (!this.sandbox && !collided) {\r\n            if (this.trajectory.length > 255)\r\n                this.trajectory.shift();\r\n            this.trajectory.push(this.position.clone());\r\n            this.two.remove(this.orbit);\r\n            this.orbit = new Two.Path(this.trajectory, false, true);\r\n            this.two.add(this.orbit);\r\n            this.orbit.noFill();\r\n        }\r\n        return collided;\r\n    }\r\n}\r\n\r\nclass OrbitSim extends Project {\r\n    init() {\r\n        this.intervalFunction = this.spawnMoon;\r\n        this.mouse = false;\r\n        this.mousePos = new Anchor();\r\n        this.planets = [new Planet(new Anchor(this.width / 2, this.height / 2), this.height / 100, this.two, this)];\r\n        this.moons = [new Moon(new Anchor(this.width / 4, this.height / 2), new Anchor(0, 1.5), this.height / 350, this.two, this.planets, this)]\r\n        this.ui = new Two.Text(`Moons remaining: ${this.moons.length}`, 10, 80, { alignment: \"left\", size: this.height / 15 });\r\n        this.two.add(this.ui);\r\n        this.two.add(new Two.Text(`Hold and drag to spawn a moon...`, 10, 50, { alignment: \"left\", size: this.height / 15 }));\r\n    }\r\n    update() {\r\n        this.ui.value = `Moons remaining: ${this.moons.length}`;\r\n    }\r\n    removeMoon(moon) {\r\n        let index = this.moons.indexOf(moon);\r\n        if (index > 0)\r\n            this.moons.splice(index, 1);\r\n        this.two.unbind('update', moon.update);\r\n        this.two.remove(moon.orbit);\r\n        this.two.remove(moon.twoObject);\r\n    }\r\n    onMouseDown() {\r\n        this.tempPosition = this.mousePos.clone();\r\n        this.tempMoon = new Moon(this.mousePos.clone(), new Anchor(0, 0), Math.random() * this.height / 150 + 0.1, this.two, this.planets, this);\r\n        this.tempMoon.sandbox = true;\r\n        this.mouse = setInterval(() => this.spawnMoon(), 10);\r\n    }\r\n    onMouseUp() {\r\n        if (this.mouse) {\r\n            clearInterval(this.mouse);\r\n            this.moons.push(this.tempMoon);\r\n            this.tempMoon.position = this.tempPosition.clone();\r\n            this.tempMoon.twoObject.translation = this.tempMoon.position;\r\n            this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n            this.tempMoon.sandbox = false;\r\n            this.mouse = false;\r\n            this.two.remove(this.group);\r\n            this.two.remove(this.powerLine);\r\n        }\r\n    }\r\n    getMoonMouseVelocity() {\r\n        let ab = new Anchor();\r\n        ab.sub(this.tempMoon.position, this.mousePos);\r\n        ab.multiplyScalar(0.01);\r\n        return ab;\r\n    }\r\n    spawnMoon() {\r\n        this.two.remove(this.group);\r\n        this.two.remove(this.powerLine);\r\n        this.tempMoon.position = this.tempPosition.clone();\r\n        this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n        this.powerLine = this.two.makeLine(this.mousePos.x, this.mousePos.y, this.tempMoon.position.x, this.tempMoon.position.y);\r\n        const iterations = 500;\r\n        const futurePositions = [];\r\n        for (let index = 0; index < iterations; index++) {\r\n            if (this.tempMoon.update())\r\n                break;\r\n            if (index % 20 === 0) {\r\n                futurePositions.push(new Two.Circle(this.tempMoon.position.x, this.tempMoon.position.y, 1));\r\n                const rgb = 255 * index / iterations;\r\n                futurePositions[futurePositions.length - 1].fill = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n                futurePositions[futurePositions.length - 1].stroke = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n            }\r\n        }\r\n        this.group = this.two.makeGroup(futurePositions);\r\n    }\r\n\r\n}\r\n\r\nexport default OrbitSim;","import { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass Snake extends Project {\r\n    constructor(two){\r\n        super(two);\r\n        this.highestScore = 0;\r\n    }\r\n    init() {\r\n        document.addEventListener(\"keydown\", (e) => this.moveSnake(e));\r\n        this.size = 20;\r\n        this.velocity = 2;\r\n        this.length = 4;\r\n        this.position = new Anchor(100 + this.size / 2, 120 + this.size / 2);\r\n        this.food = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        this.food.fill = \"rgb(0,0,100)\";\r\n        this.food.translation = new Anchor(0, 0);\r\n        this.SpawnFood();\r\n        this.coords = [this.position];\r\n        this.vels = [];\r\n        this.body = [];\r\n        for (let index = 0; index < this.length; index++) {\r\n            if (index !== 0)\r\n                this.coords.push(this.position.clone().addSelf(new Anchor(-this.size * index, 0)));\r\n            this.vels.push(new Anchor(this.velocity, 0));\r\n            let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n            square.translation = this.coords[index];\r\n            square.fill = index === 0 ? \"red\" : \"black\";\r\n            this.body.push(square);\r\n        }\r\n        this.currentScore = this.two.makeText(`Score: ${this.body.length}`, 15, 50, { size: 20, alignment: \"left\" });\r\n        this.maxScore = this.two.makeText(`Highest Score: ${this.highestScore}`, 15, 80, { size: 20, alignment: \"left\" })\r\n    }\r\n    elongate() {\r\n        this.coords.push(this.coords[this.coords.length - 1].clone());\r\n        this.vels.push(new Anchor(0, 0));\r\n        let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        square.translation = this.coords[this.coords.length - 1];\r\n        square.fill = \"black\";\r\n        this.body.push(square);\r\n    }\r\n    moveSnake(e) {\r\n        if ((e.code === \"KeyW\" || e.code === \"ArrowUp\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, -this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyS\" || e.code === \"ArrowDown\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyA\" || e.code === \"ArrowLeft\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(-this.velocity, 0);\r\n        }\r\n        else if ((e.code === \"KeyD\" || e.code === \"ArrowRight\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(this.velocity, 0);\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.justChanged = this.elongate;\r\n        }\r\n    }\r\n    SpawnFood() {\r\n        let x = Math.floor(Math.random() * this.width / this.size) * this.size + this.size / 2;\r\n        let y = Math.floor(Math.random() * this.height / this.size) * this.size + this.size / 2;\r\n        this.food.translation.set(x, y);\r\n    }\r\n    respawn() {\r\n        this.two.clear();\r\n        this.init();\r\n    }\r\n    update() {\r\n        let died = false;\r\n        this.coords.forEach((position, index) => {\r\n            position.addSelf(this.vels[index]);\r\n            if (!position.distanceTo(this.position) && index !== 0)\r\n                died = true;\r\n        })\r\n        if (this.position.x < 0 || this.position.y < 0 || this.position.x > this.width || this.position.y > this.height)\r\n            died = true;\r\n        if (died)\r\n            this.respawn();\r\n\r\n        if ((this.position.x - this.size / 2) % this.size === 0 && (this.position.y - this.size / 2) % this.size === 0) {\r\n            for (let index = this.vels.length - 1; index > 0; index--) {\r\n                this.vels[index].copy(this.vels[index - 1]);\r\n            }\r\n            if (typeof this.justChanged === \"function\") {\r\n                this.justChanged();\r\n                this.justChanged = null;\r\n            }\r\n            else if (this.justChanged) {\r\n                this.vels[0].copy(this.justChanged);\r\n                this.justChanged = null;\r\n            }\r\n        }\r\n\r\n        if (!this.position.distanceTo(this.food.translation)) {\r\n            this.SpawnFood();\r\n            this.elongate();\r\n            this.currentScore.value = `Score: ${this.body.length}`;\r\n            if (this.body.length > this.highestScore) {\r\n                this.highestScore = this.body.length;\r\n                this.maxScore.value = `Highest Score: ${this.highestScore}`;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Snake;","import React from \"react\"\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer className=\"footer\">\r\n            <h3>Summer Projects</h3>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass DoublePendulum extends Project {\r\n    init() {\r\n        this.intervalFunction = this.controlPendulum;\r\n        this.m1 = this.m2 = this.height / 30;\r\n        this.r1 = this.r2 = this.height / 4;\r\n        this.g = 0.05;\r\n        this.a1 = [3.9, 0, 0];\r\n        this.a2 = [2.5, 0, 0];\r\n        this.path = [];\r\n        this.position = new Anchor(this.width / 2, this.height / 3);\r\n        this.masses = [new Two.Circle(0, 0, this.m1), new Two.Circle(0, 0, this.m2)];\r\n        this.masses.forEach((mass) => {\r\n            mass.translation = new Anchor();\r\n            mass.fill = \"black\";\r\n        })\r\n        this.firstLine = this.two.makeLine();\r\n        this.secondLine = this.two.makeLine();\r\n        this.firstLine.vertices = [this.position, this.masses[0].translation];\r\n        this.secondLine.vertices = [ this.masses[1].translation, this.masses[0].translation];\r\n        this.two.add(this.masses);\r\n        this.text = new Two.Text(\"Hold and drag to change masses' position..\", 10, 30, {alignment: \"left\", size: this.height / 20});\r\n        this.two.add(this.text);\r\n    }\r\n    controlPendulum(){\r\n        let mousePos = new Anchor(this.mx, this.my);\r\n        if(mousePos.distanceTo(this.masses[0].translation) < mousePos.distanceTo(this.masses[1].translation)){\r\n            mousePos.subSelf(this.position);\r\n            mousePos.normalize();\r\n            this.a1[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }else{\r\n            mousePos.subSelf(this.masses[0].translation);\r\n            mousePos.normalize();\r\n            this.a2[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }\r\n        this.a1[1] = this.a2[1] = 0;\r\n    }\r\n    update() {\r\n        const sin1 = Math.sin(this.a1[0])\r\n        const cos1 = Math.cos(this.a1[0])\r\n        const sin2 = Math.sin(this.a2[0])\r\n        const cos2 = Math.cos(this.a2[0])\r\n\r\n        this.a1[2] = -this.g * (2 * this.m1 + this.m2) * sin1 - this.m2 * this.g * Math.sin(this.a1[0] - 2 * this.a2[0])\r\n        this.a1[2] -= 2 * Math.sin(this.a1[0] - this.a2[0]) * this.m2 * (this.a2[1] * this.a2[1] * this.r2 + this.a1[1] * this.a1[1] * this.r1 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a1[2] *= 1 / (this.r1 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a2[2] = 2 * Math.sin(this.a1[0] - this.a2[0])\r\n        this.a2[2] *= (this.a1[1] * this.a1[1] * this.r1 * (this.m1 + this.m2) + this.g * (this.m1 + this.m2) * cos1 + this.a2[1] * this.a2[1] * this.r2 * this.m2 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a2[2] *= 1 / (this.r2 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a1[1] += this.a1[2]\r\n        this.a2[1] += this.a2[2]\r\n        this.a1[0] += this.a1[1]\r\n        this.a2[0] += this.a2[1]\r\n\r\n        this.masses[0].translation.set(this.position.x + sin1 * this.r1, this.position.y + cos1 * this.r1);\r\n        this.masses[1].translation.set(this.masses[0].translation.x + sin2 * this.r2, this.masses[0].translation.y + cos2 * this.r2);\r\n\r\n        this.two.remove(this.traject);\r\n        if(this.path.length > 255)\r\n            this.path.shift();\r\n        this.path.push(this.masses[1].translation.clone());\r\n        this.traject = new Two.Path(this.path, false);\r\n        this.two.add(this.traject);\r\n        this.traject.noFill();\r\n    }\r\n}\r\nexport default DoublePendulum;","import { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass Sort extends Project {\r\n    init() {\r\n        this.two.clear();\r\n        this.justStarted = true;\r\n        this.noise = new Noise(Math.random());\r\n        this.rectWidth = 1;\r\n        this.algorithm = null;\r\n        this.length = this.width / this.rectWidth;\r\n        this.rects = Array(this.length).fill(0).map((value, index) => {\r\n            let rect = this.two.makeRectangle(\r\n                index * this.rectWidth,\r\n                this.height / 2,\r\n                this.rectWidth,\r\n                this.noise.perlin2(index * 0.02, 0) * this.height / 2 + this.height / 2\r\n                //this.height * (this.length - index) / this.length\r\n            );\r\n            rect.fill = \"black\";\r\n            return rect;\r\n        })\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyS\") {\r\n            this.algorithm = this.iterativeQuickSort;\r\n            this.algorithmState = \"justStarted\";\r\n        } else if (e.code === \"KeyR\") {\r\n            this.init();\r\n        }\r\n    }\r\n    swap(i, j) {\r\n        let tmp = this.rects[i].height;\r\n        this.rects[i].height = this.rects[j].height;\r\n        this.rects[j].height = tmp;\r\n    }\r\n    partitionHigh(low, high) {\r\n        let pivot = this.rects[high].height;\r\n        let i = low;\r\n        for (let j = low; j < high; j++) {\r\n            if (this.rects[j].height <= pivot) {\r\n                this.swap(i, j);\r\n                i++;\r\n            }\r\n        }\r\n        this.swap(i, high);\r\n        return i;\r\n    }\r\n    iterativeQuickSort() {\r\n        if (this.justStarted) {\r\n            this.stack = [];\r\n            this.start = 0;\r\n            this.end = this.rects.length - 1;\r\n            this.stack.push({ x: this.start, y: this.end });\r\n            this.justStarted = false;\r\n        }\r\n        if (this.stack.length) {\r\n            const { x, y } = this.stack.shift();\r\n            const PI = this.partitionHigh(x, y);\r\n\r\n            if (PI - 1 > x) {\r\n                this.stack.push({ x: x, y: PI - 1 });\r\n            }\r\n            if (PI + 1 < y) {\r\n                this.stack.push({ x: PI + 1, y: y });\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    bubbleSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length - 1) {\r\n            if (this.j < this.length - this.i - 1) {\r\n                if (this.rects[this.j].height > this.rects[this.j + 1].height) {\r\n                    this.swap(this.j, this.j + 1);\r\n                }\r\n                this.j++;\r\n            }\r\n            else {\r\n                this.j = 0;\r\n                this.i++;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    insertionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 1;\r\n            this.j = 0;\r\n            this.current = this.rects[this.i].height;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j > - 1 && this.current < this.rects[this.j].height) {\r\n                this.rects[this.j + 1].height = this.rects[this.j].height;\r\n                this.j--;\r\n            } else {\r\n                this.rects[this.j + 1].height = this.current;\r\n                this.i++;\r\n                this.j = this.i - 1;\r\n                if (this.i < this.length)\r\n                    this.current = this.rects[this.i].height;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    selectionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = this.i + 1;\r\n            this.min = this.i;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j < this.length) {\r\n                if (this.rects[this.j].height < this.rects[this.min].height) {\r\n                    this.min = this.j\r\n                }\r\n                this.j++;\r\n            } else {\r\n                this.swap(this.i, this.min);\r\n                this.i++;\r\n                this.j = this.i + 1;\r\n                this.min = this.i;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    greenAll() {\r\n        if (this.i < this.length) {\r\n            this.rects[this.i].fill = \"green\";\r\n            this.rects[this.i].stroke = \"green\";\r\n            this.i++;\r\n        } else {\r\n            this.init();\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default Sort;","import { Noise } from 'noisejs';\r\nimport Two from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass PathFinder extends Project {\r\n    init() {\r\n        this.two.clear();\r\n        this.start = null;\r\n        this.end = null;\r\n        this.state = \"drawing\";\r\n        this.algorithm = null\r\n        this.grid = [];\r\n        if (!this.size){\r\n            this.size = 10;\r\n            this.algorithmState = \"justStarted\";\r\n            this.intervalFunction = this.draw;\r\n            this.gridHeight = this.height / this.size;\r\n            this.gridWidth = this.width / this.size;\r\n            this.lineGroup = new Two.Group();\r\n        }\r\n        if(this.lineGroup.children.length < this.gridWidth * this.gridHeight){\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n                let line = new Two.Line(i * this.size, 0, i * this.size, this.height);\r\n                line.stroke = \"lightblue\";\r\n                this.lineGroup.add(line);\r\n                if (i < this.gridHeight) {\r\n                    let line = new Two.Line(0, i * this.size, this.width, i * this.size);\r\n                    line.stroke = \"lightblue\";\r\n                    this.lineGroup.add(line);\r\n                }\r\n            }\r\n        }else{\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n            }\r\n        }\r\n        \r\n        this.two.add(this.lineGroup);\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyS\") {\r\n            if (this.start && this.end && !this.algorithm) {\r\n                this.algorithm = this.greedyBestFirstSearch;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        }\r\n        else if (e.code === \"KeyD\") {\r\n            this.state = \"drawing\";\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.state = \"erasing\";\r\n        }\r\n        else if (e.code === \"KeyR\") {\r\n            this.state = \"resetting\";\r\n            this.init();\r\n        } else if (e.code === \"KeyQ\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.recursiveDivision;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyP\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.noiseGrid;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        }\r\n    }\r\n    makeRectangleRelativeToMouse() {\r\n        return this.two.makeRectangle(\r\n            Math.floor(this.mx / this.size) * this.size + this.size / 2,\r\n            Math.floor(this.my / this.size) * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    makeGridRect(x, y) {\r\n        return this.two.makeRectangle(\r\n            x * this.size + this.size / 2,\r\n            y * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    getIndexesOfRectangle(node) {\r\n        let x = Math.min(\r\n            Math.max((\r\n                node.translation.x - this.size / 2) / this.size,\r\n                0),\r\n            this.width - 1\r\n        );\r\n        let y = (node.translation.y - this.size / 2) / this.size;\r\n        return [x, y];\r\n    }\r\n    draw() {\r\n        let rect = this.makeRectangleRelativeToMouse();\r\n        let [x, y] = this.getIndexesOfRectangle(rect);\r\n        if (this.state === \"drawing\") {\r\n            if (!this.grid[x][y]) {\r\n                this.grid[x][y] = rect;\r\n                if (!this.start) {\r\n                    this.start = rect\r\n                    this.start.fill = \"red\";\r\n                }\r\n                else if (!this.end) {\r\n                    this.end = rect;\r\n                    this.end.fill = \"green\";\r\n                }\r\n                else {\r\n                    rect.fill = \"black\";\r\n                }\r\n            }\r\n            else {\r\n                this.two.remove(rect);\r\n            }\r\n        }\r\n        else if (this.state === \"erasing\") {\r\n            this.two.remove(rect);\r\n            this.two.remove(this.grid[x][y]);\r\n            if (this.grid[x][y] === this.start)\r\n                this.start = null;\r\n            else if (this.grid[x][y] === this.end)\r\n                this.end = null;\r\n            this.grid[x][y] = null;\r\n        }\r\n\r\n    }\r\n    getNeighbours(node) {\r\n        let [x, y] = this.getIndexesOfRectangle(node.currentNode);\r\n        const tmp = [];\r\n        if (x !== 0)\r\n            tmp.push([-1, 0])\r\n        if (x !== this.gridWidth - 1)\r\n            tmp.push([1, 0])\r\n        if (y !== this.gridHeight - 1)\r\n            tmp.push([0, 1])\r\n        if (y !== 0)\r\n            tmp.push([0, -1])\r\n        let neighbours = []\r\n        tmp.forEach((coord) => {\r\n            if (!this.grid[x + coord[0]][coord[1] + y]) {\r\n                const tmp = this.grid[x + coord[0]][coord[1] + y] = this.two.makeRectangle(\r\n                    Math.floor(x + coord[0]) * this.size + this.size / 2,\r\n                    Math.floor(coord[1] + y) * this.size + this.size / 2,\r\n                    this.size,\r\n                    this.size\r\n                );\r\n                tmp.fill = \"lightblue\";\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: tmp,\r\n                    distance: this.calculateDistanceToEnd(tmp)\r\n                });\r\n            }\r\n            else if (this.grid[x + coord[0]][coord[1] + y] === this.end) {\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: this.grid[x + coord[0]][coord[1] + y],\r\n                    distance: this.calculateDistanceToEnd(this.grid[x + coord[0]][coord[1] + y])\r\n                });\r\n            }\r\n        });\r\n        return neighbours;\r\n    }\r\n    calculateDistanceToEnd(node) {\r\n        return node.translation.distanceTo(this.end.translation);\r\n    }\r\n    greedyBestFirstSearch() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.closedList = [{\r\n                parentNode: null,\r\n                currentNode: this.start,\r\n                distance: this.calculateDistanceToEnd(this.start)\r\n            }];\r\n            this.openList = this.getNeighbours(this.closedList[0]);\r\n            this.algorithmState = \"findingPath\";\r\n        } else if (this.algorithmState === \"findingPath\") {\r\n            this.openList.sort((a, b) => a.distance - b.distance);\r\n            let current = this.openList.shift();\r\n            if (current && current.currentNode !== this.end) {\r\n                current.currentNode.fill = \"skyblue\";\r\n                this.closedList.push(current);\r\n                this.getNeighbours(current).forEach((e) =>\r\n                    this.openList.push(e)\r\n                );\r\n            } else if (!current) {\r\n                this.algorithmState = \"pathNotFound\";\r\n                this.algorithm = null;\r\n            } else {\r\n                this.algorithmState = \"pathFound\";\r\n                this.closedList.push(current);\r\n                this.currentPathNode = current.parentNode;\r\n            }\r\n        } else if (this.algorithmState === \"pathFound\") {\r\n            if (this.currentPathNode.currentNode !== this.start) {\r\n                this.currentPathNode.currentNode.fill = \"yellow\";\r\n                this.currentPathNode = this.currentPathNode.parentNode;\r\n            } else {\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    rand(x, y) {\r\n        return x = Math.floor(Math.random() * (1 + y - x)) + x;\r\n    }\r\n    recursiveDivision() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.algorithmState = \"borderLimiting\";\r\n            this.i = 0;\r\n            this.areas = [{ horizontal: [0, this.gridWidth - 1], vertical: [0, this.gridHeight - 1] }];\r\n        } else if (this.algorithmState === \"borderLimiting\") {\r\n            let condition = 0;\r\n            if (this.i < this.gridWidth) {\r\n                this.grid[this.i][0] = this.makeGridRect(this.i, 0);\r\n                this.grid[this.i][0].fill = \"black\";\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1] = this.makeGridRect(this.gridWidth - 1 - this.i, this.gridHeight - 1);\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            if (0 < this.i && this.i < this.gridHeight - 1) {\r\n                this.grid[0][this.i] = this.makeGridRect(0, this.i)\r\n                this.grid[0][this.i].fill = \"black\";\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i] = this.makeGridRect(this.gridWidth - 1, this.gridHeight - 1 - this.i);\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            this.i++;\r\n            if (condition === 2)\r\n                this.algorithmState = \"mazeGenerating\";\r\n        } else if (this.areas.length && this.algorithmState === \"mazeGenerating\") {\r\n            //let horizontal = Boolean(Math.round(Math.random()));\r\n            let noSpace = 0;\r\n            const area = this.areas.pop();\r\n            let [leftLimit, rightLimit] = area.horizontal;\r\n            let [topLimit, bottomLimit] = area.vertical;\r\n            let horizontal = (rightLimit - leftLimit) > (bottomLimit - topLimit);\r\n            if (horizontal) {\r\n                if (rightLimit - leftLimit > 3) {\r\n                    this.x = this.rand(leftLimit + 3, rightLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: [leftLimit, this.x], vertical: area.vertical },\r\n                        { horizontal: [this.x, rightLimit], vertical: area.vertical }\r\n                    );\r\n                    if (!this.grid[this.x][topLimit])\r\n                        topLimit += 2;\r\n                    if (!this.grid[this.x][bottomLimit])\r\n                        bottomLimit -= 2;\r\n                    this.y = this.rand(topLimit + 1, bottomLimit - 1)\r\n                    this.i = topLimit;\r\n                    this.bottomLimit = bottomLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = true;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (!horizontal) {\r\n                if (bottomLimit - topLimit > 3) {\r\n                    this.y = this.rand(topLimit + 3, bottomLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: area.horizontal, vertical: [topLimit, this.y] },\r\n                        { horizontal: area.horizontal, vertical: [this.y, bottomLimit] }\r\n                    );\r\n                    if (!this.grid[leftLimit][this.y])\r\n                        leftLimit += 2;\r\n                    if (!this.grid[rightLimit][this.y])\r\n                        rightLimit -= 2;\r\n                    this.x = this.rand(leftLimit + 1, rightLimit - 1)\r\n                    this.i = leftLimit;\r\n                    this.rightLimit = rightLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = false;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (noSpace == 1)\r\n                this.areas.pop();\r\n        } else if (this.algorithmState === \"lineDrawing\") {\r\n            if (this.vertical) {\r\n                if (this.i <= this.bottomLimit) {\r\n                    if (this.i != this.y && !this.grid[this.x][this.i]) {\r\n                        this.grid[this.x][this.i] = this.makeGridRect(this.x, this.i);\r\n                        this.grid[this.x][this.i].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n\r\n            } else {\r\n                if (this.i <= this.rightLimit) {\r\n                    if (this.i != this.x && !this.grid[this.i][this.y]) {\r\n                        this.grid[this.i][this.y] = this.makeGridRect(this.i, this.y);\r\n                        this.grid[this.i][this.y].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n            }\r\n            this.i++;\r\n        } else {\r\n            this.algorithm = null;\r\n        }\r\n    }\r\n    noiseGrid() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.noise = new Noise(Math.random());\r\n            this.algorithmState = \"gridMaking\";\r\n        } else if (this.algorithmState === \"gridMaking\") {\r\n            if (this.i < this.gridWidth) {\r\n                if (this.j < this.gridHeight) {\r\n                    let noise = this.noise.simplex2(this.i * 0.1, this.j * 0.1)\r\n                    if (noise >= 0) {\r\n                        this.grid[this.i][this.j] = this.makeGridRect(this.i, this.j);\r\n                        this.grid[this.i][this.j].fill = \"black\";\r\n                    }\r\n                    this.j++;\r\n                } else {\r\n                    this.j = 0;\r\n                    this.i++;\r\n                }\r\n            } else {\r\n                this.algorithmState = \"justStarted\";\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default PathFinder;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst PI = Math.PI;\r\nconst sqrt = Math.sqrt;\r\n\r\nfunction line_intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n    var ua, ub, denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n    if (denom == 0) {\r\n        return null;\r\n    }\r\n    ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;\r\n    ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;\r\n    let seg1 = ua >= 0 && ua <= 1;\r\n    let seg2 = ub >= 0 && ub <= 1;\r\n    if(seg1 && seg2)\r\n        return new Anchor(x1 + ua * (x2 - x1), y1 + ua * (y2 - y1));\r\n    else \r\n        return null;\r\n}\r\n\r\nclass LightSource {\r\n    constructor(rc) {\r\n        this.rc = rc;\r\n        this.position = rc.mousePos;\r\n        this.rayCount = 101;\r\n    }\r\n    drawRays() {\r\n        this.rc.two.remove(this.rays);\r\n        this.rays = new Two.Group();\r\n        for (let theta = 0; theta < 2 * PI; theta += 2 * PI / this.rayCount) {\r\n            let x1 = this.position.x + this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let x2 = this.position.x - this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let y1 = this.position.y + (x1 - this.position.x) * sin(theta) / cos(theta);\r\n            let y2 = this.position.y + (x2 - this.position.x) * sin(theta) / cos(theta);\r\n            let point1 = new Anchor(x1, y1);\r\n            let point2 = new Anchor(x2, y2);\r\n            this.rc.obstacles.forEach(element => {\r\n                let point = line_intersect(\r\n                    x1, y1,\r\n                    x2, y2,\r\n                    element[0].x, element[0].y,\r\n                    element[1].x, element[1].y\r\n                );\r\n                if (point && (x1 - this.position.x) * (point.x - this.position.x) > 0){\r\n                    if (point.distanceTo(this.position) < point1.distanceTo(this.position))\r\n                        point1.copy(point);\r\n                }    \r\n                else if (point){\r\n                    if (point.distanceTo(this.position) < this.position.distanceTo(point2))\r\n                        point2.copy(point);\r\n                }               \r\n            });\r\n            let line = new Two.Line(point1.x, point1.y, point2.x, point2.y);\r\n            line.stroke = \"white\";\r\n            this.rays.add(line);\r\n        }\r\n        this.rc.two.add(this.rays);\r\n    }\r\n}\r\n\r\nclass RayCasting extends Project {\r\n    init() {\r\n        this.rect = this.two.makeRectangle(this.width / 2, this.height / 2, this.width, this.height);\r\n        this.rect.fill = \"black\";\r\n        this.setObstacles();  \r\n        this.lightSource = new LightSource(this);\r\n        \r\n    }\r\n    setObstacles(){\r\n        this.two.remove(this.lines);\r\n        this.lines = new Two.Group();\r\n        this.obstacles = []\r\n        for (let i = 0; i < 5; i++) {\r\n            let x1 = Math.random()*this.width;\r\n            let x2 = Math.random()*this.width;\r\n            let y1 = Math.random()*this.height;\r\n            let y2 = Math.random()*this.height;\r\n            let obstacle = new Two.Line(x1, y1, x2, y2);\r\n            obstacle.stroke = \"white\";\r\n            this.lines.add(obstacle);\r\n            this.obstacles.push([new Anchor(x1, y1), new Anchor(x2, y2)]);\r\n        }\r\n        this.two.add(this.lines);\r\n    }\r\n    update() {\r\n        this.lightSource.drawRays();\r\n    }\r\n    changeState(e){\r\n        if(e.code === \"KeyR\"){\r\n            this.setObstacles();\r\n        }\r\n    }\r\n}\r\nexport default RayCasting;","import React from 'react';\r\nimport Two from 'twojs-ts'\r\n\r\nclass TwoCanvas extends React.Component {\r\n    init(){\r\n        const type = this.props.type ? this.props.type : Two.Types.canvas;\r\n        this.two = new Two({ width: this.props.width, height: this.props.height, type: type });\r\n        this.project = new this.props.project(this.two);\r\n        this.two.renderer.domElement.className = \"TwoCanvas\";\r\n        this.two.renderer.domElement.addEventListener(\"mouseenter\", () => this.two.play());\r\n        this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.two.pause());\r\n        this.two.update();\r\n        this.two.pause();\r\n    }\r\n    render() {     \r\n        if(this.two){\r\n            let domElement = this.two.renderer.domElement;\r\n            if(domElement.parentElement)\r\n                domElement.parentElement.removeChild(domElement);\r\n        }\r\n        this.init();\r\n        return (\r\n            <div ref={(nodeElement) => { nodeElement && nodeElement.appendChild(this.two.renderer.domElement) }}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TwoCanvas;","import React from 'react';\r\nimport Two from 'twojs-ts';\r\nimport PathFinder from '../projects/PathFinder';\r\nimport TwoCanvas from './TwoCanvas';\r\nclass ProjectCard extends React.Component {\r\n    constructor(two) {\r\n        super(two);\r\n        this.state = {\r\n            maximized: false,\r\n            width: this.props.width,\r\n            height: this.props.height\r\n        }\r\n    }\r\n    maximize() {\r\n        if (this.state.maximized)\r\n            this.setState({\r\n                maximized: false,\r\n                width: 480,\r\n                height: 260\r\n            });\r\n        else\r\n            this.setState({\r\n                maximized: true,\r\n                width: 700,\r\n                height: 400\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"sim-div\">\r\n                <h1>Paused</h1>\r\n                <div className=\"divTwo\">\r\n                    <TwoCanvas\r\n                        project={this.props.element}\r\n                        key={this.props.element}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        type={this.props.element == PathFinder ? Two.Types.webgl : Two.Types.canvas}\r\n                    />\r\n                    <button onClick={() => this.maximize()}></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectCard;","import PerlinNoise from './projects/PerlinNoise';\nimport OrbitSim from './projects/OrbitSim';\nimport Snake from './projects/Snake'\nimport Footer from './components/Footer.js';\nimport React from 'react';\nimport DoublePendulum from './projects/DoublePendulum.js';\nimport Sort from './projects/Sort.js';\nimport PathFinder from './projects/PathFinder.js';\nimport Project from './projects/Project.js';\nimport RayCasting from './projects/RayCasting.js';\nimport ProjectCard from './components/ProjectCard.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [OrbitSim, Snake, DoublePendulum, PerlinNoise, Sort, PathFinder, RayCasting, Project],\n      projectWidth: 420,\n      projectHeight: 260\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Footer />\n        <div className=\"container\">\n          {this.state.projects.map(element =>\n            <ProjectCard\n              element = {element}\n              width = {this.state.projectWidth}\n              height = {this.state.projectHeight}\n              key = {element}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}