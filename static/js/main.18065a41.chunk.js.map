{"version":3,"sources":["projects/Project.js","projects/PerlinDiv.js","components/TwoSvg.js","components/Footer.js","projects/PathFinder.js","components/TwoCanvas.js","components/ProjectCard.js","projects/PerlinNoise.js","projects/OrbitSim.js","projects/Snake.js","projects/Sort.js","projects/RayCasting.js","projects/DoublePendulum.js","projects/ElasticCollisions.js","data/projects.js","components/ProjectsHandler.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Project","two","this","width","height","renderer","domElement","addEventListener","e","onMouseMove","onMouseDown","onMouseUp","mousePos","Anchor","document","querySelector","changeState","intervalFunction","init","update","bind","mx","clientX","getBoundingClientRect","left","my","clientY","top","set","interval","setInterval","clearInterval","text","Two","Text","size","add","PerlinDiv","noise","Noise","Math","random","blob","Path","fill","noStroke","noiseLayer","vertices","push","i","perlin2","TwoSvg","type","props","Types","canvas","project","play","parentElement","removeChild","ref","nodeElement","appendChild","React","Component","Footer","className","title","onClick","home","about","window","innerWidth","svg","PathFinder","clear","start","end","state","algorithm","grid","algorithmState","draw","gridHeight","gridWidth","lineGroup","Group","children","length","line","Line","stroke","code","greedyBestFirstSearch","recursiveDivision","noiseGrid","depthFirstSearchMaze","makeRectangle","floor","x","y","node","min","max","translation","rect","makeRectangleRelativeToMouse","getIndexesOfRectangle","remove","tmp","currentNode","getSurroundingIndexes","neighbours","forEach","coord","parentNode","distance","calculateDistanceToEnd","distanceTo","closedList","openList","getNeighbours","sort","a","b","current","shift","currentPathNode","areas","horizontal","vertical","condition","makeGridRect","noSpace","area","pop","leftLimit","rightLimit","topLimit","bottomLimit","rand","tmpRect","xx","yy","isAdjacentToOtherNodes","array","j","temp","shuffleArray","lastAdjecentNode","stack","getNeighbourForDepthFirstSearch","element","simplex2","TwoCanvas","maximized","style","background","pause","ProjectCard","cssClass","webgl","id","Array","map","gameInfoStyle","description","Object","keys","tips","key","display","alignItems","PerlinNoise","position","Vector","radius","angle","PI","cos","sin","perlin3","multiplyScalar","addSelf","Planet","mass","orbitSim","sandbox","twoObject","Circle","Moon","velocity","planets","acceleration","trajectory","collided","planet","ab","sub","pow","removeMoon","unbind","clone","orbit","noFill","OrbitSim","spawnMoon","mouse","moons","ui","alignment","value","moon","index","indexOf","splice","tempPosition","tempMoon","getMoonMouseVelocity","group","powerLine","makeLine","futurePositions","rgb","makeGroup","Snake","highestScore","moveSnake","food","makeRoundedRectangle","SpawnFood","coords","vels","body","square","currentScore","makeText","maxScore","justChanged","elongate","died","respawn","copy","Sort","justStarted","rectWidth","frameCount","rects","iterativeQuickSort","bubbleSort","insertionSort","low","high","pivot","swap","partitionHigh","greenAll","sqrt","LightSource","rc","rayCount","rays","theta","x1","x2","y1","y2","point1","point2","obstacles","point","x3","y3","x4","y4","ua","ub","denom","line_intersect","RayCasting","setObstacles","lightSource","lines","obstacle","drawRays","DoublePendulum","controlPendulum","m1","m2","r1","r2","g","a1","a2","path","masses","firstLine","secondLine","subSelf","normalize","atan2","sin1","cos1","sin2","cos2","traject","G","MassBall","circle","makeCircle","projects","randomBallSpawner","pos","vel","massBalls","gravityIndicator","frameCountAtChange","p1","p2","v1","v2","normal","vr","vn","dot","abs","detectCollisions","n","Date","getTime","currentBall","currentPos","controlBall","simulateAtoms","ProjectsHandler","cardsStates","setState","order","scrollTo","behavior","handleMaximize","now","About","App","page","redirectToAbout","redirectToHome","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","preventDefault"],"mappings":"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","file":"static/js/main.18065a41.chunk.js","sourcesContent":["import Two, { Anchor } from \"twojs-ts\";\r\n\r\nclass Project{\r\n    constructor(two){\r\n        this.two = two;\r\n        this.width = this.two.width;\r\n        this.height = this.two.height;\r\n        this.two.renderer.domElement.addEventListener(\"mousemove\", (e) => this.onMouseMove(e));\r\n        this.two.renderer.domElement.addEventListener(\"mousedown\", () => this.onMouseDown());\r\n        this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.onMouseUp());\r\n        this.two.renderer.domElement.addEventListener(\"mouseup\", () => this.onMouseUp());\r\n        this.mousePos = new Anchor();\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            if(document.querySelector(\".TwoCanvas:hover\") === this.two.renderer.domElement)\r\n                this.changeState(e);    \r\n        });\r\n        this.intervalFunction = null;\r\n        this.init();\r\n        this.update = this.update.bind(this);\r\n        this.two.bind('update', this.update);\r\n    }\r\n    changeState(e){\r\n\r\n    }\r\n    onMouseMove(e){\r\n        this.mx = e.clientX - this.two.renderer.domElement.getBoundingClientRect().left;\r\n        this.my = e.clientY - this.two.renderer.domElement.getBoundingClientRect().top;\r\n        this.mousePos.set(this.mx, this.my);\r\n    }\r\n    onMouseDown() {\r\n        if(this.intervalFunction)\r\n            this.interval = setInterval(() => this.intervalFunction(), 10);\r\n    }\r\n    onMouseUp() {\r\n        clearInterval(this.interval);\r\n        this.interval = false;\r\n    }\r\n    init(){\r\n        //Overwrite this init function in your project subclass to initialise your simulation\r\n        let text = new Two.Text('Two Projects', this.width / 2, this.height /2, {size: 30});\r\n        this.two.add(text);\r\n    }\r\n    update(){\r\n        //Overwrite this Function in your project subclass \r\n    }\r\n    toString(){\r\n        return \"Project\";\r\n    }\r\n}\r\nexport default Project;","import Two, { Anchor } from 'twojs-ts';\r\nimport { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass PerlinDiv extends Project {\r\n    init(){\r\n        this.noise = new Noise(Math.random());\r\n        this.blob = new Two.Path([], true, true);\r\n        this.two.add(this.blob);\r\n        this.blob.fill = \"#333\";\r\n        this.blob.noStroke();\r\n        this.noiseLayer = 0;\r\n    }\r\n    update(){\r\n        const vertices = [];\r\n        vertices.push(new Anchor(0, 0));\r\n        this.noiseLayer += 0.006;\r\n        for(let i = 0; i <= this.width; i += 10){\r\n            vertices.push(new Anchor(i, this.height / 2 + this.noise.perlin2(i * 0.005, this.noiseLayer) * this.height / 3));\r\n        }\r\n        vertices.push(new Anchor(this.width, 0));\r\n        this.blob.vertices = vertices;\r\n    }\r\n}\r\nexport default PerlinDiv;","import React from 'react';\r\nimport Two from 'twojs-ts'\r\n\r\nclass TwoSvg extends React.Component {\r\n    init() {\r\n        const type = this.props.type ? this.props.type : Two.Types.canvas;\r\n        this.two = new Two({ width: this.props.width, height: this.props.height, type: type });\r\n        this.project = new this.props.project(this.two);\r\n        this.two.play();\r\n        this.two.update();\r\n    }\r\n    render() {\r\n        if (this.two) {\r\n            let domElement = this.two.renderer.domElement;\r\n            if (domElement.parentElement)\r\n                domElement.parentElement.removeChild(domElement);\r\n            this.two = null;\r\n        }\r\n        this.init();\r\n        return (\r\n            <div ref={(nodeElement) => { nodeElement && nodeElement.appendChild(this.two.renderer.domElement) }}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TwoSvg;","import React from \"react\"\r\nimport Two from \"twojs-ts\"\r\nimport PerlinDiv from \"../projects/PerlinDiv\"\r\nimport TwoSvg from \"./TwoSvg\"\r\n\r\nfunction Footer(props){\r\n    return (\r\n        <div>\r\n            <footer className=\"footer\">\r\n            <h3>{props.title}</h3>\r\n            <nav>\r\n                <ul>\r\n                    <li onClick={props.home}>Home</li>\r\n                    <li onClick={props.about}>About</li>\r\n                </ul>\r\n            </nav>         \r\n            </footer>\r\n            <TwoSvg\r\n                    project={PerlinDiv}\r\n                    width={window.innerWidth}\r\n                    height={200}\r\n                    type={Two.Types.svg}\r\n            />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Footer","import { Noise } from 'noisejs';\r\nimport Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nfunction shuffleArray(array) {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n}\r\n\r\nclass PathFinder extends Project {\r\n    init() {\r\n        this.two.clear();\r\n        this.start = null;\r\n        this.end = null;\r\n        this.state = \"drawing\";\r\n        this.algorithm = null\r\n        this.grid = [];\r\n        if (!this.size) {\r\n            this.size = 20;\r\n            this.algorithmState = \"justStarted\";\r\n            this.intervalFunction = this.draw;\r\n            this.gridHeight = this.height / this.size;\r\n            this.gridWidth = this.width / this.size;\r\n            this.lineGroup = new Two.Group();\r\n        }\r\n        if (this.lineGroup.children.length < this.gridWidth * this.gridHeight) {\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n                let line = new Two.Line(i * this.size, 0, i * this.size, this.height);\r\n                line.stroke = \"lightblue\";\r\n                this.lineGroup.add(line);\r\n                if (i < this.gridHeight) {\r\n                    let line = new Two.Line(0, i * this.size, this.width, i * this.size);\r\n                    line.stroke = \"lightblue\";\r\n                    this.lineGroup.add(line);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                this.grid.push([]);\r\n            }\r\n        }\r\n\r\n        this.two.add(this.lineGroup);\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyS\") {\r\n            if (this.start && this.end && !this.algorithm) {\r\n                this.algorithm = this.greedyBestFirstSearch;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyQ\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.recursiveDivision;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyP\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.noiseGrid;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        } else if (e.code === \"KeyG\") {\r\n            if (!this.start && !this.end && !this.algorithm) {\r\n                this.algorithm = this.depthFirstSearchMaze;\r\n                this.algorithmState = \"justStarted\";\r\n            }\r\n        }\r\n        else if (e.code === \"KeyD\") {\r\n            this.state = \"drawing\";\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.state = \"erasing\";\r\n        }\r\n        else if (e.code === \"KeyR\") {\r\n            this.state = \"resetting\";\r\n            this.init();\r\n        }\r\n    }\r\n    makeRectangleRelativeToMouse() {\r\n        return this.two.makeRectangle(\r\n            Math.floor((this.mx / this.size) % this.gridWidth) * this.size + this.size / 2,\r\n            Math.floor((this.my / this.size) % this.gridHeight) * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    makeGridRect(x, y) {\r\n        return this.two.makeRectangle(\r\n            x * this.size + this.size / 2,\r\n            y * this.size + this.size / 2,\r\n            this.size,\r\n            this.size\r\n        );\r\n    }\r\n    getIndexesOfRectangle(node) {\r\n        let x = Math.min(\r\n            Math.max((\r\n                node.translation.x - this.size / 2) / this.size,\r\n                0),\r\n            this.width - 1\r\n        );\r\n        let y = (node.translation.y - this.size / 2) / this.size;\r\n        return [x, y];\r\n    }\r\n    draw() {\r\n        let rect = this.makeRectangleRelativeToMouse();\r\n        let [x, y] = this.getIndexesOfRectangle(rect);\r\n        if (this.state === \"drawing\") {\r\n            if (!this.grid[x][y]) {\r\n                this.grid[x][y] = rect;\r\n                if (!this.start) {\r\n                    this.start = rect\r\n                    this.start.fill = \"red\";\r\n                }\r\n                else if (!this.end) {\r\n                    this.end = rect;\r\n                    this.end.fill = \"green\";\r\n                }\r\n                else {\r\n                    rect.fill = \"black\";\r\n                }\r\n            }\r\n            else {\r\n                this.two.remove(rect);\r\n            }\r\n        }\r\n        else if (this.state === \"erasing\") {\r\n            this.two.remove(rect);\r\n            this.two.remove(this.grid[x][y]);\r\n            if (this.grid[x][y] === this.start)\r\n                this.start = null;\r\n            else if (this.grid[x][y] === this.end)\r\n                this.end = null;\r\n            this.grid[x][y] = null;\r\n        }\r\n\r\n    }\r\n    getSurroundingIndexes(node) {\r\n        let [x, y] = this.getIndexesOfRectangle(node);\r\n        const tmp = [];\r\n        if (x !== 0)\r\n            tmp.push([-1, 0])\r\n        if (x !== this.gridWidth - 1)\r\n            tmp.push([1, 0])\r\n        if (y !== this.gridHeight - 1)\r\n            tmp.push([0, 1])\r\n        if (y !== 0)\r\n            tmp.push([0, -1])\r\n        return tmp;\r\n    }\r\n    getNeighbours(node) {\r\n        let [x, y] = this.getIndexesOfRectangle(node.currentNode);\r\n        const tmp = this.getSurroundingIndexes(node.currentNode);\r\n        let neighbours = []\r\n        tmp.forEach((coord) => {\r\n            if (!this.grid[x + coord[0]][coord[1] + y]) {\r\n                const tmp = this.grid[x + coord[0]][coord[1] + y] = this.two.makeRectangle(\r\n                    Math.floor(x + coord[0]) * this.size + this.size / 2,\r\n                    Math.floor(coord[1] + y) * this.size + this.size / 2,\r\n                    this.size,\r\n                    this.size\r\n                );\r\n                tmp.fill = \"lightblue\";\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: tmp,\r\n                    distance: this.calculateDistanceToEnd(tmp)\r\n                });\r\n            }\r\n            else if (this.grid[x + coord[0]][coord[1] + y] === this.end) {\r\n                neighbours.push({\r\n                    parentNode: node,\r\n                    currentNode: this.grid[x + coord[0]][coord[1] + y],\r\n                    distance: this.calculateDistanceToEnd(this.grid[x + coord[0]][coord[1] + y])\r\n                });\r\n            }\r\n        });\r\n        return neighbours;\r\n    }\r\n    calculateDistanceToEnd(node) {\r\n        return node.translation.distanceTo(this.end.translation);\r\n    }\r\n    greedyBestFirstSearch() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.closedList = [{\r\n                parentNode: null,\r\n                currentNode: this.start,\r\n                distance: this.calculateDistanceToEnd(this.start)\r\n            }];\r\n            this.openList = this.getNeighbours(this.closedList[0]);\r\n            this.algorithmState = \"findingPath\";\r\n        } else if (this.algorithmState === \"findingPath\") {\r\n            this.openList.sort((a, b) => a.distance - b.distance);\r\n            let current = this.openList.shift();\r\n            if (current && current.currentNode !== this.end) {\r\n                current.currentNode.fill = \"skyblue\";\r\n                this.closedList.push(current);\r\n                this.getNeighbours(current).forEach((e) =>\r\n                    this.openList.push(e)\r\n                );\r\n            } else if (!current) {\r\n                this.algorithmState = \"pathNotFound\";\r\n                this.algorithm = null;\r\n            } else {\r\n                this.algorithmState = \"pathFound\";\r\n                this.closedList.push(current);\r\n                this.currentPathNode = current.parentNode;\r\n            }\r\n        } else if (this.algorithmState === \"pathFound\") {\r\n            if (this.currentPathNode.currentNode !== this.start) {\r\n                this.currentPathNode.currentNode.fill = \"yellow\";\r\n                this.currentPathNode = this.currentPathNode.parentNode;\r\n            } else {\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    rand(x, y) {\r\n        return x = Math.floor(Math.random() * (1 + y - x)) + x;\r\n    }\r\n    recursiveDivision() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.algorithmState = \"borderLimiting\";\r\n            this.i = 0;\r\n            this.areas = [{ horizontal: [0, this.gridWidth - 1], vertical: [0, this.gridHeight - 1] }];\r\n        } else if (this.algorithmState === \"borderLimiting\") {\r\n            let condition = 0;\r\n            if (this.i < this.gridWidth) {\r\n                this.grid[this.i][0] = this.makeGridRect(this.i, 0);\r\n                this.grid[this.i][0].fill = \"black\";\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1] = this.makeGridRect(this.gridWidth - 1 - this.i, this.gridHeight - 1);\r\n                this.grid[this.gridWidth - this.i - 1][this.gridHeight - 1].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            if (0 < this.i && this.i < this.gridHeight - 1) {\r\n                this.grid[0][this.i] = this.makeGridRect(0, this.i)\r\n                this.grid[0][this.i].fill = \"black\";\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i] = this.makeGridRect(this.gridWidth - 1, this.gridHeight - 1 - this.i);\r\n                this.grid[this.gridWidth - 1][this.gridHeight - 1 - this.i].fill = \"black\";\r\n            } else {\r\n                condition++;\r\n            }\r\n            this.i++;\r\n            if (condition === 2)\r\n                this.algorithmState = \"mazeGenerating\";\r\n        } else if (this.areas.length && this.algorithmState === \"mazeGenerating\") {\r\n            //let horizontal = Boolean(Math.round(Math.random()));\r\n            let noSpace = 0;\r\n            const area = this.areas.pop();\r\n            let [leftLimit, rightLimit] = area.horizontal;\r\n            let [topLimit, bottomLimit] = area.vertical;\r\n            let horizontal = (rightLimit - leftLimit) > (bottomLimit - topLimit);\r\n            if (horizontal) {\r\n                if (rightLimit - leftLimit > 3) {\r\n                    this.x = this.rand(leftLimit + 3, rightLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: [leftLimit, this.x], vertical: area.vertical },\r\n                        { horizontal: [this.x, rightLimit], vertical: area.vertical }\r\n                    );\r\n                    if (!this.grid[this.x][topLimit])\r\n                        topLimit += 2;\r\n                    if (!this.grid[this.x][bottomLimit])\r\n                        bottomLimit -= 2;\r\n                    this.y = this.rand(topLimit + 1, bottomLimit - 1)\r\n                    this.i = topLimit;\r\n                    this.bottomLimit = bottomLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = true;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (!horizontal) {\r\n                if (bottomLimit - topLimit > 3) {\r\n                    this.y = this.rand(topLimit + 3, bottomLimit - 3);\r\n                    this.areas.push(\r\n                        { horizontal: area.horizontal, vertical: [topLimit, this.y] },\r\n                        { horizontal: area.horizontal, vertical: [this.y, bottomLimit] }\r\n                    );\r\n                    if (!this.grid[leftLimit][this.y])\r\n                        leftLimit += 2;\r\n                    if (!this.grid[rightLimit][this.y])\r\n                        rightLimit -= 2;\r\n                    this.x = this.rand(leftLimit + 1, rightLimit - 1)\r\n                    this.i = leftLimit;\r\n                    this.rightLimit = rightLimit;\r\n                    this.algorithmState = \"lineDrawing\";\r\n                    this.vertical = false;\r\n                } else {\r\n                    noSpace = true;\r\n                    this.areas.push(area);\r\n                }\r\n            }\r\n            if (noSpace == 1)\r\n                this.areas.pop();\r\n        } else if (this.algorithmState === \"lineDrawing\") {\r\n            if (this.vertical) {\r\n                if (this.i <= this.bottomLimit) {\r\n                    if (this.i != this.y && !this.grid[this.x][this.i]) {\r\n                        this.grid[this.x][this.i] = this.makeGridRect(this.x, this.i);\r\n                        this.grid[this.x][this.i].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n\r\n            } else {\r\n                if (this.i <= this.rightLimit) {\r\n                    if (this.i != this.x && !this.grid[this.i][this.y]) {\r\n                        this.grid[this.i][this.y] = this.makeGridRect(this.i, this.y);\r\n                        this.grid[this.i][this.y].fill = \"black\";\r\n                    }\r\n                } else {\r\n                    this.algorithmState = \"mazeGenerating\";\r\n                }\r\n            }\r\n            this.i++;\r\n        } else {\r\n            this.algorithm = null;\r\n        }\r\n    }\r\n    getNeighbourForDepthFirstSearch(node) {\r\n        let [x, y] = node;\r\n        let tmpRect = this.makeGridRect(x, y);\r\n        const tmp = this.getSurroundingIndexes(tmpRect);\r\n        this.two.remove(tmpRect);\r\n        let neighbours = []\r\n        tmp.forEach((coord) => {\r\n            let [xx, yy] = [x + coord[0], coord[1] + y];\r\n            if (this.grid[xx][yy]) {\r\n                if (this.isAdjacentToOtherNodes([xx, yy]) <= 1)\r\n                    neighbours.push([xx, yy]);\r\n            }\r\n        });\r\n        shuffleArray(neighbours);\r\n        return neighbours;\r\n    }\r\n    isAdjacentToOtherNodes(node) {\r\n        let [x, y] = node;\r\n        let tmpRect = this.makeGridRect(x, y);\r\n        const tmp = this.getSurroundingIndexes(tmpRect);\r\n        this.two.remove(tmpRect);\r\n        if (x !== 0 && y !== 0)\r\n            tmp.push([-1, -1])\r\n        if (x !== this.gridWidth - 1 && y !== this.gridHeight - 1)\r\n            tmp.push([1, 1])\r\n        if (x !== 0 && y !== this.gridHeight - 1)\r\n            tmp.push([-1, 1])\r\n        if (x !== this.gridWidth - 1 && y !== 0)\r\n            tmp.push([1, -1])\r\n        let condition = 0;\r\n        let lastAdjecentNode = null;\r\n        tmp.forEach((coord) => {\r\n            let node = this.grid[x + coord[0]][coord[1] + y];\r\n            if (!node) {\r\n                if (lastAdjecentNode) {\r\n                    if (new Anchor(x + coord[0], coord[1] + y).distanceTo(lastAdjecentNode) > 1)\r\n                        condition++;\r\n                }\r\n                else {\r\n                    condition++;\r\n                    lastAdjecentNode = new Anchor(x + coord[0], coord[1] + y);\r\n                }\r\n            }\r\n        });\r\n        return condition;\r\n    }\r\n    depthFirstSearchMaze() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.algorithmState = \"mazeGenerating\";\r\n            for (let i = 0; i < this.gridWidth; i++) {\r\n                for (let j = 0; j < this.gridHeight; j++) {\r\n                    this.grid[i][j] = this.makeGridRect(i, j);\r\n                    this.grid[i][j].fill = \"black\";\r\n                }\r\n            }\r\n            this.stack = [];\r\n            let x = this.rand(0, this.gridWidth - 1);\r\n            let y = this.rand(0, this.gridHeight - 1);\r\n            this.stack.push([x, y]);\r\n        } else if (this.algorithmState === \"mazeGenerating\" && this.stack.length) {\r\n            this.current = this.stack[this.stack.length - 1];\r\n            this.stack.pop();\r\n            if (this.isAdjacentToOtherNodes(this.current) <= 1) {\r\n                let [x, y] = this.current;\r\n                this.two.remove(this.grid[x][y]);\r\n                this.grid[x][y] = null;\r\n                this.getNeighbourForDepthFirstSearch(this.current).forEach(element => this.stack.push(element));\r\n            }\r\n        } else {\r\n            this.algorithm = null;\r\n        }\r\n    }\r\n    noiseGrid() {\r\n        if (this.algorithmState === \"justStarted\") {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.noise = new Noise(Math.random());\r\n            this.algorithmState = \"gridMaking\";\r\n        } else if (this.algorithmState === \"gridMaking\") {\r\n            if (this.i < this.gridWidth) {\r\n                if (this.j < this.gridHeight) {\r\n                    let noise = this.noise.simplex2(this.i * 0.1, this.j * 0.1)\r\n                    if (noise >= 0) {\r\n                        this.grid[this.i][this.j] = this.makeGridRect(this.i, this.j);\r\n                        this.grid[this.i][this.j].fill = \"black\";\r\n                    }\r\n                    this.j++;\r\n                } else {\r\n                    this.j = 0;\r\n                    this.i++;\r\n                }\r\n            } else {\r\n                this.algorithmState = \"justStarted\";\r\n                this.algorithm = null;\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default PathFinder;","import React from 'react';\r\nimport Two from 'twojs-ts'\r\n\r\nclass TwoCanvas extends React.Component {\r\n    init() {\r\n        const type = this.props.type ? this.props.type : Two.Types.canvas;\r\n        this.two = new Two({ width: this.props.width, height: this.props.height, type: type });\r\n        this.project = new this.props.project(this.two);\r\n        this.two.renderer.domElement.className = \"TwoCanvas\";\r\n        if (!this.props.maximized) {\r\n            this.two.renderer.domElement.addEventListener(\"mouseenter\", () => this.two.play());\r\n            this.two.renderer.domElement.addEventListener(\"mouseleave\", () => this.two.pause());\r\n            this.two.pause();\r\n        } else {\r\n            this.two.renderer.domElement.style.background = \"rgba(255, 255, 255, 1)\"\r\n            this.two.play();\r\n        }\r\n        this.two.update();\r\n    }\r\n    render() {\r\n        if (this.two) {\r\n            let domElement = this.two.renderer.domElement;\r\n            if (domElement.parentElement)\r\n                domElement.parentElement.removeChild(domElement);\r\n            this.two = null;\r\n        }\r\n        this.init();\r\n        return (\r\n            <div ref={(nodeElement) => { nodeElement && nodeElement.appendChild(this.two.renderer.domElement) }}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TwoCanvas;","import React from 'react';\r\nimport Two from 'twojs-ts';\r\nimport PathFinder from '../projects/PathFinder';\r\nimport TwoCanvas from './TwoCanvas';\r\nclass ProjectCard extends React.Component {\r\n    constructor(two) {\r\n        super(two);\r\n        this.state = this.props.state;\r\n    }\r\n    render() {\r\n        this.state = this.props.state;\r\n        const project = this.props.project;\r\n        return (\r\n            <div className={this.state.cssClass} style= {this.state.style}>\r\n                <div className={this.state.maximized ? \"divTwoMaximized\" : \"divTwo\"}>\r\n                    <TwoCanvas\r\n                        maximized = {this.state.maximized}\r\n                        project={project.project}\r\n                        key={project}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        type={project.project == PathFinder ? Two.Types.webgl : Two.Types.canvas}\r\n                    />\r\n                    <button id=\"maximize\" onClick={() => this.props.onClick()}></button>\r\n                </div>\r\n                {Array(1).fill(0).map(() => {if(! this.state.maximized) return <h1>Paused</h1>;})}\r\n                <h2 className=\"sim-title\" style= {this.state.style}>{project.title}</h2>\r\n                <div className=\"game-info\" style={this.state.gameInfoStyle}>\r\n                    <p>About: {project.description}</p>\r\n                    {Object.keys(project.tips).map(key => {\r\n                        if(key == \"tips\")\r\n                            return (<p>Tips: {project.tips[key]}</p>)\r\n                        else{\r\n                            return (\r\n                                <div style={{display: \"flex\", alignItems:\"center\"}}>\r\n                                    <button id=\"keyButton\">{key}</button>\r\n                                    <p>{project.tips[key]}</p>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    })}\r\n                </div>       \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectCard;","import Two from 'twojs-ts';\r\nimport { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass PerlinNoise extends Project {\r\n    init(){\r\n        this.noise = new Noise(Math.random());\r\n        this.position = new Two.Vector(this.width / 2, this.height / 2);\r\n        this.radius = this.two.height / 3;\r\n        this.noiseLayer = 0;\r\n        this.blob = new Two.Path([], true, true);\r\n        this.two.add(this.blob);\r\n        this.blob.fill = 'rgb(0,0,40)'\r\n        this.blob.noStroke();\r\n    }\r\n    update() {\r\n        const vertices = [];\r\n        this.noiseLayer += 0.01;\r\n        for (let angle = 0; angle < 2 * Math.PI; angle += 0.01) {\r\n            var x = Math.cos(angle);\r\n            var y = Math.sin(angle);\r\n\r\n            var position = new Two.Anchor(x, y);\r\n            var radius = this.noise.perlin3(x*2, y*2, this.noiseLayer) * this.radius/3 + this.radius;\r\n\r\n            position.multiplyScalar(radius);\r\n            position.addSelf(this.position);\r\n\r\n            vertices.push(position);\r\n        }\r\n        this.blob.vertices = vertices;\r\n    }\r\n}\r\nexport default PerlinNoise;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst G = 100;\r\n\r\nclass Planet {\r\n    constructor(position, mass, two, orbitSim) {\r\n        this.orbitSim = orbitSim;\r\n        this.two = two;\r\n        this.position = position;\r\n        this.mass = mass;\r\n        this.radius = mass * 10;\r\n        this.init();\r\n        this.sandbox = false;\r\n    }\r\n    init() {\r\n        this.twoObject = new Two.Circle(this.position.x, this.position.y, this.radius);\r\n        this.two.add(this.twoObject);\r\n        this.twoObject.fill = \"black\";\r\n        this.twoObject.translation = this.position;\r\n    }\r\n}\r\nclass Moon extends Planet {\r\n    constructor(position, velocity, mass, two, planets, orbitSim) {\r\n        super(position, mass, two, orbitSim);\r\n        this.velocity = velocity;\r\n        this.planets = planets;\r\n        this.acceleration = new Two.Anchor();\r\n        this.update = this.update.bind(this);\r\n        this.trajectory = [];\r\n        this.two.bind('update', this.update).play();\r\n    }\r\n    update() {\r\n        let collided = false;\r\n        this.planets.forEach(planet => {\r\n            let ab = new Anchor();\r\n            ab.sub(planet.position, this.position);\r\n            ab.multiplyScalar(G * planet.mass / Math.pow(ab.length(), 3));\r\n            this.velocity.addSelf(ab);\r\n            if (ab.sub(this.position, planet.position).length() < this.radius + planet.radius) {\r\n                collided = true;\r\n                if (!this.sandbox)\r\n                    this.orbitSim.removeMoon(this);\r\n            }\r\n        });\r\n        this.position.addSelf(this.velocity);\r\n        if (this.position.length() > 5000)\r\n            this.sandbox ? collided = true : this.orbitSim.removeMoon(this);\r\n        if (collided && !this.sandbox)\r\n            this.two.unbind('update', this.update);\r\n        if (!this.sandbox && !collided) {\r\n            if (this.trajectory.length > 255)\r\n                this.trajectory.shift();\r\n            this.trajectory.push(this.position.clone());\r\n            this.two.remove(this.orbit);\r\n            this.orbit = new Two.Path(this.trajectory, false, true);\r\n            this.two.add(this.orbit);\r\n            this.orbit.noFill();\r\n        }\r\n        return collided;\r\n    }\r\n}\r\n\r\nclass OrbitSim extends Project {\r\n    init() {\r\n        this.intervalFunction = this.spawnMoon;\r\n        this.mouse = false;\r\n        this.mousePos = new Anchor();\r\n        this.planets = [new Planet(new Anchor(this.width / 2, this.height / 2), this.height / 100, this.two, this)];\r\n        this.moons = [new Moon(new Anchor(this.width / 4, this.height / 2), new Anchor(0, 1.5), this.height / 350, this.two, this.planets, this)]\r\n        this.ui = new Two.Text(`Planets remaining: ${this.moons.length}`, 10, 20, { alignment: \"left\", size: this.height / 15 });\r\n        this.two.add(this.ui);\r\n    }\r\n    update() {\r\n        this.ui.value = `Planets remaining: ${this.moons.length}`;\r\n    }\r\n    removeMoon(moon) {\r\n        let index = this.moons.indexOf(moon);\r\n        if (index > 0)\r\n            this.moons.splice(index, 1);\r\n        this.two.unbind('update', moon.update);\r\n        this.two.remove(moon.orbit);\r\n        this.two.remove(moon.twoObject);\r\n    }\r\n    onMouseDown() {\r\n        this.tempPosition = this.mousePos.clone();\r\n        this.tempMoon = new Moon(this.mousePos.clone(), new Anchor(0, 0), Math.random() * this.height / 150 + 0.1, this.two, this.planets, this);\r\n        this.tempMoon.sandbox = true;\r\n        this.mouse = setInterval(() => this.spawnMoon(), 10);\r\n    }\r\n    onMouseUp() {\r\n        if (this.mouse) {\r\n            clearInterval(this.mouse);\r\n            this.moons.push(this.tempMoon);\r\n            this.tempMoon.position = this.tempPosition.clone();\r\n            this.tempMoon.twoObject.translation = this.tempMoon.position;\r\n            this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n            this.tempMoon.sandbox = false;\r\n            this.mouse = false;\r\n            this.two.remove(this.group);\r\n            this.two.remove(this.powerLine);\r\n        }\r\n    }\r\n    getMoonMouseVelocity() {\r\n        let ab = new Anchor();\r\n        ab.sub(this.tempMoon.position, this.mousePos);\r\n        ab.multiplyScalar(0.01);\r\n        return ab;\r\n    }\r\n    spawnMoon() {\r\n        this.two.remove(this.group);\r\n        this.two.remove(this.powerLine);\r\n        this.tempMoon.position = this.tempPosition.clone();\r\n        this.tempMoon.velocity = this.getMoonMouseVelocity();\r\n        this.powerLine = this.two.makeLine(this.mousePos.x, this.mousePos.y, this.tempMoon.position.x, this.tempMoon.position.y);\r\n        const iterations = 500;\r\n        const futurePositions = [];\r\n        for (let index = 0; index < iterations; index++) {\r\n            if (this.tempMoon.update())\r\n                break;\r\n            if (index % 20 === 0) {\r\n                futurePositions.push(new Two.Circle(this.tempMoon.position.x, this.tempMoon.position.y, 1));\r\n                const rgb = 255 * index / iterations;\r\n                futurePositions[futurePositions.length - 1].fill = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n                futurePositions[futurePositions.length - 1].stroke = `rgb(${rgb}, ${rgb}, ${rgb})`\r\n            }\r\n        }\r\n        this.group = this.two.makeGroup(futurePositions);\r\n    }\r\n\r\n}\r\n\r\nexport default OrbitSim;","import { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass Snake extends Project {\r\n    constructor(two){\r\n        super(two);\r\n        this.highestScore = 0;\r\n    }\r\n    init() {\r\n        document.addEventListener(\"keydown\", (e) => this.moveSnake(e));\r\n        this.size = 20;\r\n        this.velocity = 2;\r\n        this.length = 4;\r\n        this.position = new Anchor(100 + this.size / 2, 120 + this.size / 2);\r\n        this.food = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        this.food.fill = \"rgb(0,0,100)\";\r\n        this.food.translation = new Anchor(0, 0);\r\n        this.SpawnFood();\r\n        this.coords = [this.position];\r\n        this.vels = [];\r\n        this.body = [];\r\n        for (let index = 0; index < this.length; index++) {\r\n            if (index !== 0)\r\n                this.coords.push(this.position.clone().addSelf(new Anchor(-this.size * index, 0)));\r\n            this.vels.push(new Anchor(this.velocity, 0));\r\n            let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n            square.translation = this.coords[index];\r\n            square.fill = index === 0 ? \"red\" : \"black\";\r\n            this.body.push(square);\r\n        }\r\n        this.currentScore = this.two.makeText(`Score: ${this.body.length}`, 15, 50, { size: 20, alignment: \"left\" });\r\n        this.maxScore = this.two.makeText(`Highest Score: ${this.highestScore ? this.highestScore : 0}`, 15, 80, { size: 20, alignment: \"left\" })\r\n    }\r\n    elongate() {\r\n        this.coords.push(this.coords[this.coords.length - 1].clone());\r\n        this.vels.push(new Anchor(0, 0));\r\n        let square = this.two.makeRoundedRectangle(0, 0, this.size, this.size, 2);\r\n        square.translation = this.coords[this.coords.length - 1];\r\n        square.fill = \"black\";\r\n        this.body.push(square);\r\n    }\r\n    moveSnake(e) {\r\n        if ((e.code === \"KeyW\" || e.code === \"ArrowUp\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, -this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyS\" || e.code === \"ArrowDown\") && this.vels[0].y === 0) {\r\n            this.justChanged = new Anchor(0, this.velocity);\r\n        }\r\n        else if ((e.code === \"KeyA\" || e.code === \"ArrowLeft\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(-this.velocity, 0);\r\n        }\r\n        else if ((e.code === \"KeyD\" || e.code === \"ArrowRight\") && this.vels[0].x === 0) {\r\n            this.justChanged = new Anchor(this.velocity, 0);\r\n        }\r\n        else if (e.code === \"KeyE\") {\r\n            this.justChanged = this.elongate;\r\n        }\r\n    }\r\n    SpawnFood() {\r\n        let x = Math.floor(Math.random() * this.width / this.size) * this.size + this.size / 2;\r\n        let y = Math.floor(Math.random() * this.height / this.size) * this.size + this.size / 2;\r\n        this.food.translation.set(x, y);\r\n    }\r\n    respawn() {\r\n        this.two.clear();\r\n        this.init();\r\n    }\r\n    update() {\r\n        let died = false;\r\n        this.coords.forEach((position, index) => {\r\n            position.addSelf(this.vels[index]);\r\n            if (!position.distanceTo(this.position) && index !== 0)\r\n                died = true;\r\n        })\r\n        if (this.position.x < 0 || this.position.y < 0 || this.position.x > this.width || this.position.y > this.height)\r\n            died = true;\r\n        if (died)\r\n            this.respawn();\r\n\r\n        if ((this.position.x - this.size / 2) % this.size === 0 && (this.position.y - this.size / 2) % this.size === 0) {\r\n            for (let index = this.vels.length - 1; index > 0; index--) {\r\n                this.vels[index].copy(this.vels[index - 1]);\r\n            }\r\n            if (typeof this.justChanged === \"function\") {\r\n                this.justChanged();\r\n                this.justChanged = null;\r\n            }\r\n            else if (this.justChanged) {\r\n                this.vels[0].copy(this.justChanged);\r\n                this.justChanged = null;\r\n            }\r\n        }\r\n\r\n        if (!this.position.distanceTo(this.food.translation)) {\r\n            this.SpawnFood();\r\n            this.elongate();\r\n            this.currentScore.value = `Score: ${this.body.length}`;\r\n            if (this.body.length > this.highestScore) {\r\n                this.highestScore = this.body.length;\r\n                this.maxScore.value = `Highest Score: ${this.highestScore}`;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Snake;","import { Noise } from 'noisejs';\r\nimport Project from './Project';\r\n\r\nclass Sort extends Project {\r\n    constructor(two){\r\n        super(two);\r\n        this.id = Math.floor( Math.random() * 100 );\r\n        this.random = true;\r\n    }\r\n    init() {\r\n        this.two.clear();\r\n        this.justStarted = \"justStarted\";\r\n        this.noise = new Noise(Math.random());\r\n        this.rectWidth = 1;\r\n        this.algorithm = null;\r\n        this.frameCount = - 10;\r\n        this.length = this.width / this.rectWidth;\r\n        this.rects = Array(this.length).fill(0).map((value, index) => {\r\n            let rect = this.two.makeRectangle(\r\n                index * this.rectWidth,\r\n                this.height / 2,\r\n                this.rectWidth,\r\n                this.random?\r\n                this.height * Math.random():\r\n                this.noise.perlin2(index * 0.01, 0) * this.height + this.height / 2\r\n            );\r\n            rect.fill = \"black\";\r\n            return rect;\r\n        })\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyR\") {\r\n            this.init();\r\n        } else if (e.code === \"KeyD\" && this.two.frameCount - this.frameCount > 10) {\r\n            this.frameCount = this.two.frameCount;\r\n            this.random = ! this.random;\r\n            this.init();\r\n        } else if (e.code === \"KeyA\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.iterativeQuickSort;\r\n        } else if (e.code === \"KeyB\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.bubbleSort;\r\n        } else if (e.code === \"KeyI\") {\r\n            if(this.algorithm)\r\n                this.init();\r\n            this.algorithm = this.insertionSort;\r\n        } else if (e.code === \"KeyS\") {\r\n            for (let index = 0; index < 300; index++)\r\n                this.update()\r\n        }\r\n    }\r\n    swap(i, j) {\r\n        let tmp = this.rects[i].height;\r\n        this.rects[i].height = this.rects[j].height;\r\n        this.rects[j].height = tmp;\r\n    }\r\n    partitionHigh(low, high) {\r\n        let pivot = this.rects[high].height;\r\n        let i = low;\r\n        for (let j = low; j < high; j++) {\r\n            if (this.rects[j].height <= pivot) {\r\n                this.swap(i, j);\r\n                i++;\r\n            }\r\n        }\r\n        this.swap(i, high);\r\n        return i;\r\n    }\r\n    iterativeQuickSort() {\r\n        if (this.justStarted) {\r\n            this.stack = [];\r\n            this.start = 0;\r\n            this.end = this.rects.length - 1;\r\n            this.stack.push({ x: this.start, y: this.end });\r\n            this.justStarted = false;\r\n        }\r\n        if (this.stack.length) {\r\n            const { x, y } = this.stack.shift();\r\n            const PI = this.partitionHigh(x, y);\r\n\r\n            if (PI - 1 > x) {\r\n                this.stack.push({ x: x, y: PI - 1 });\r\n            }\r\n            if (PI + 1 < y) {\r\n                this.stack.push({ x: PI + 1, y: y });\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    bubbleSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = 0;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length - 1) {\r\n            if (this.j < this.length - this.i - 1) {\r\n                if (this.rects[this.j].height > this.rects[this.j + 1].height) {\r\n                    this.swap(this.j, this.j + 1);\r\n                }\r\n                this.j++;\r\n            }\r\n            else {\r\n                this.j = 0;\r\n                this.i++;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    insertionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 1;\r\n            this.j = 0;\r\n            this.current = this.rects[this.i].height;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j > - 1 && this.current < this.rects[this.j].height) {\r\n                this.rects[this.j + 1].height = this.rects[this.j].height;\r\n                this.j--;\r\n            } else {\r\n                this.rects[this.j + 1].height = this.current;\r\n                this.i++;\r\n                this.j = this.i - 1;\r\n                if (this.i < this.length)\r\n                    this.current = this.rects[this.i].height;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    selectionSort() {\r\n        if (this.justStarted) {\r\n            this.i = 0;\r\n            this.j = this.i + 1;\r\n            this.min = this.i;\r\n            this.justStarted = false;\r\n        }\r\n        if (this.i < this.length) {\r\n            if (this.j < this.length) {\r\n                if (this.rects[this.j].height < this.rects[this.min].height) {\r\n                    this.min = this.j\r\n                }\r\n                this.j++;\r\n            } else {\r\n                this.swap(this.i, this.min);\r\n                this.i++;\r\n                this.j = this.i + 1;\r\n                this.min = this.i;\r\n            }\r\n        } else {\r\n            this.i = 0;\r\n            this.algorithm = this.greenAll;\r\n        }\r\n    }\r\n    greenAll() {\r\n        if (this.i < this.length) {\r\n            this.rects[this.i].fill = \"green\";\r\n            this.rects[this.i].stroke = \"green\";\r\n            this.i++;\r\n        } else {\r\n            this.init();\r\n        }\r\n    }\r\n    update() {\r\n        if (this.algorithm)\r\n            this.algorithm();\r\n    }\r\n}\r\nexport default Sort;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst PI = Math.PI;\r\nconst sqrt = Math.sqrt;\r\n\r\nfunction line_intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n    var ua, ub, denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n    if (denom == 0) {\r\n        return null;\r\n    }\r\n    ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;\r\n    ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;\r\n    let seg1 = ua >= 0 && ua <= 1;\r\n    let seg2 = ub >= 0 && ub <= 1;\r\n    if(seg1 && seg2)\r\n        return new Anchor(x1 + ua * (x2 - x1), y1 + ua * (y2 - y1));\r\n    else \r\n        return null;\r\n}\r\n\r\nclass LightSource {\r\n    constructor(rc) {\r\n        this.rc = rc;\r\n        this.position = rc.mousePos;\r\n        this.rayCount = 101;\r\n    }\r\n    drawRays() {\r\n        this.rc.two.remove(this.rays);\r\n        this.rays = new Two.Group();\r\n        for (let theta = 0; theta < 2 * PI; theta += 2 * PI / this.rayCount) {\r\n            let x1 = this.position.x + this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let x2 = this.position.x - this.rc.width / sqrt(1 + (sin(theta) / cos(theta)) ** 2);\r\n            let y1 = this.position.y + (x1 - this.position.x) * sin(theta) / cos(theta);\r\n            let y2 = this.position.y + (x2 - this.position.x) * sin(theta) / cos(theta);\r\n            let point1 = new Anchor(x1, y1);\r\n            let point2 = new Anchor(x2, y2);\r\n            this.rc.obstacles.forEach(element => {\r\n                let point = line_intersect(\r\n                    x1, y1,\r\n                    x2, y2,\r\n                    element[0].x, element[0].y,\r\n                    element[1].x, element[1].y\r\n                );\r\n                if (point && (x1 - this.position.x) * (point.x - this.position.x) > 0){\r\n                    if (point.distanceTo(this.position) < point1.distanceTo(this.position))\r\n                        point1.copy(point);\r\n                }    \r\n                else if (point){\r\n                    if (point.distanceTo(this.position) < this.position.distanceTo(point2))\r\n                        point2.copy(point);\r\n                }               \r\n            });\r\n            let line = new Two.Line(point1.x, point1.y, point2.x, point2.y);\r\n            line.stroke = \"white\";\r\n            this.rays.add(line);\r\n        }\r\n        this.rc.two.add(this.rays);\r\n    }\r\n}\r\n\r\nclass RayCasting extends Project {\r\n    init() {\r\n        this.rect = this.two.makeRectangle(this.width / 2, this.height / 2, this.width, this.height);\r\n        this.rect.fill = \"black\";\r\n        this.setObstacles();  \r\n        this.lightSource = new LightSource(this);\r\n        \r\n    }\r\n    setObstacles(){\r\n        this.two.remove(this.lines);\r\n        this.lines = new Two.Group();\r\n        this.obstacles = []\r\n        for (let i = 0; i < 5; i++) {\r\n            let x1 = Math.random()*this.width;\r\n            let x2 = Math.random()*this.width;\r\n            let y1 = Math.random()*this.height;\r\n            let y2 = Math.random()*this.height;\r\n            let obstacle = new Two.Line(x1, y1, x2, y2);\r\n            obstacle.stroke = \"white\";\r\n            this.lines.add(obstacle);\r\n            this.obstacles.push([new Anchor(x1, y1), new Anchor(x2, y2)]);\r\n        }\r\n        this.two.add(this.lines);\r\n    }\r\n    update() {\r\n        this.lightSource.drawRays();\r\n    }\r\n    changeState(e){\r\n        if(e.code === \"KeyR\"){\r\n            this.setObstacles();\r\n        }\r\n    }\r\n}\r\nexport default RayCasting;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nclass DoublePendulum extends Project {\r\n    init() {\r\n        this.intervalFunction = this.controlPendulum;\r\n        this.m1 = this.m2 = this.height / 30;\r\n        this.r1 = this.r2 = this.height / 4;\r\n        this.g = 0.07;\r\n        this.a1 = [3.9, 0, 0];\r\n        this.a2 = [2.5, 0, 0];\r\n        this.path = [];\r\n        this.position = new Anchor(this.width / 2, this.height / 3);\r\n        this.masses = [new Two.Circle(0, 0, this.m1), new Two.Circle(0, 0, this.m2)];\r\n        this.masses.forEach((mass) => {\r\n            mass.translation = new Anchor();\r\n            mass.fill = \"black\";\r\n        })\r\n        this.firstLine = this.two.makeLine();\r\n        this.secondLine = this.two.makeLine();\r\n        this.firstLine.vertices = [this.position, this.masses[0].translation];\r\n        this.secondLine.vertices = [ this.masses[1].translation, this.masses[0].translation];\r\n        this.two.add(this.masses);\r\n        // this.text = new Two.Text(\"Hold and drag to change masses' position..\", 10, 30, {alignment: \"left\", size: this.height / 20});\r\n        // this.two.add(this.text);\r\n    }\r\n    controlPendulum(){\r\n        let mousePos = new Anchor(this.mx, this.my);\r\n        if(mousePos.distanceTo(this.masses[0].translation) < mousePos.distanceTo(this.masses[1].translation)){\r\n            mousePos.subSelf(this.position);\r\n            mousePos.normalize();\r\n            this.a1[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }else{\r\n            mousePos.subSelf(this.masses[0].translation);\r\n            mousePos.normalize();\r\n            this.a2[0] = Math.atan2(mousePos.x, mousePos.y);\r\n        }\r\n        this.a1[1] = this.a2[1] = 0;\r\n    }\r\n    update() {\r\n        const sin1 = Math.sin(this.a1[0])\r\n        const cos1 = Math.cos(this.a1[0])\r\n        const sin2 = Math.sin(this.a2[0])\r\n        const cos2 = Math.cos(this.a2[0])\r\n\r\n        this.a1[2] = -this.g * (2 * this.m1 + this.m2) * sin1 - this.m2 * this.g * Math.sin(this.a1[0] - 2 * this.a2[0])\r\n        this.a1[2] -= 2 * Math.sin(this.a1[0] - this.a2[0]) * this.m2 * (this.a2[1] * this.a2[1] * this.r2 + this.a1[1] * this.a1[1] * this.r1 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a1[2] *= 1 / (this.r1 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a2[2] = 2 * Math.sin(this.a1[0] - this.a2[0])\r\n        this.a2[2] *= (this.a1[1] * this.a1[1] * this.r1 * (this.m1 + this.m2) + this.g * (this.m1 + this.m2) * cos1 + this.a2[1] * this.a2[1] * this.r2 * this.m2 * Math.cos(this.a1[0] - this.a2[0]))\r\n        this.a2[2] *= 1 / (this.r2 * (2 * this.m1 + this.m2 - this.m2 * Math.cos(2 * this.a1[0] - 2 * this.a2[0])))\r\n\r\n        this.a1[1] += this.a1[2]\r\n        this.a2[1] += this.a2[2]\r\n        this.a1[0] += this.a1[1]\r\n        this.a2[0] += this.a2[1]\r\n\r\n        this.masses[0].translation.set(this.position.x + sin1 * this.r1, this.position.y + cos1 * this.r1);\r\n        this.masses[1].translation.set(this.masses[0].translation.x + sin2 * this.r2, this.masses[0].translation.y + cos2 * this.r2);\r\n\r\n        this.two.remove(this.traject);\r\n        if(this.path.length > 255)\r\n            this.path.shift();\r\n        this.path.push(this.masses[1].translation.clone());\r\n        this.traject = new Two.Path(this.path, false);\r\n        this.two.add(this.traject);\r\n        this.traject.noFill();\r\n    }\r\n}\r\nexport default DoublePendulum;","import Two, { Anchor } from 'twojs-ts';\r\nimport Project from './Project';\r\n\r\nvar G = 0;\r\nclass MassBall {\r\n    constructor(position, velocity, radius, two) {\r\n        this.acceleration = new Anchor(0, G);\r\n        this.two = two;\r\n        this.position = position;\r\n        this.velocity = velocity;\r\n        this.radius = radius;\r\n        this.mass = radius / 10;\r\n        this.circle = this.two.makeCircle(0, 0, radius);\r\n        this.circle.translation = position;\r\n        this.circle.fill = \"black\";\r\n    }\r\n    update() {\r\n        this.acceleration.y = G;\r\n        this.velocity.addSelf(this.acceleration);\r\n        this.position.addSelf(this.velocity);\r\n\r\n        if (this.position.y + this.radius > this.two.height) {\r\n            this.position.y = this.two.height - this.radius;\r\n            this.velocity.y *= -0.7;\r\n        } else if (this.position.y < this.radius) {\r\n            this.position.y = this.radius;\r\n            this.velocity.y *= -0.95;\r\n        }\r\n        if (this.position.x < this.radius) {\r\n            this.position.x = this.radius;\r\n            this.velocity.x *= -0.95;\r\n        } else if (this.position.x > this.two.width - this.radius) {\r\n            this.position.x = this.two.width - this.radius;\r\n            this.velocity.x *= -0.95;\r\n        }\r\n    }\r\n}\r\n\r\nclass ElascticCollisions extends Project {\r\n    constructor(two) {\r\n        super(two);\r\n        for (let i = 0; i < Math.floor(Math.random() * 10) + 3; i++) {\r\n            this.randomBallSpawner();\r\n        }\r\n    }\r\n    randomBallSpawner(radius = -1){\r\n        let x = Math.random() * this.width;\r\n        let y = Math.random() * this.height;\r\n        let pos = new Anchor(x, y);\r\n        let vel = new Anchor(Math.random() * 2 - 1, Math.random() * 2 - 1);\r\n        if(radius === -1)\r\n            radius = Math.random() * 35 + 5;\r\n        this.massBalls.push(new MassBall(pos, vel, radius, this.two));\r\n    }\r\n    init() {\r\n        this.two.clear();\r\n        this.gravityIndicator = this.two.makeText(G === 0 ? \"Gravity OFF\" : \"Gravity ON\", this.two.width / 2, 15, {size: 15});\r\n        this.frameCountAtChange = 0;\r\n        this.massBalls = [];\r\n    }\r\n    detectCollisions() {\r\n        this.massBalls.sort((a, b) => {\r\n            return a.position.x - b.position.x;\r\n        });\r\n        for (let i = 0; i < this.massBalls.length - 1; i++) {\r\n            for (let j = i + 1; j < this.massBalls.length; j++) {\r\n                let r1 = this.massBalls[i].radius;\r\n                let r2 = this.massBalls[j].radius;\r\n                let p1 = this.massBalls[i].position;\r\n                let p2 = this.massBalls[j].position;\r\n                if (p1.distanceTo(p2) < r1 + r2) {\r\n                    let m1 = this.massBalls[i].mass;\r\n                    let m2 = this.massBalls[j].mass;\r\n                    let v1 = this.massBalls[i].velocity;\r\n                    let v2 = this.massBalls[j].velocity;\r\n                    let normal = new Anchor();\r\n                    normal.sub(p1, p2).normalize();\r\n                    //Teleporting one of the mass balls to prevent it from merging with the other one.\r\n                    if (r1 > r2)\r\n                        p2.sub(p1, normal.clone().multiplyScalar(r1 + r2));\r\n                    else\r\n                        p1.add(normal.clone().multiplyScalar(r1 + r2), p2);\r\n                    normal.sub(p1, p2).normalize();\r\n                    let vr = new Anchor();\r\n                    let vn = normal.clone().multiplyScalar(vr.sub(v1, v2).dot(normal));\r\n                    v1.subSelf(vn.clone().multiplyScalar(2 * m2 / (m1 + m2)));\r\n                    v2.addSelf(vn.clone().multiplyScalar(2 * m1 / (m1 + m2)));\r\n                } else if (Math.abs(p1.x - p2.x) > 100)\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        // console.log(this.uniqueId);\r\n        for (let i = 0; i < this.massBalls.length; i++) {\r\n            this.massBalls[i].update();\r\n        }\r\n        this.detectCollisions();\r\n    }\r\n    simulateAtoms() {\r\n        this.init();\r\n        let radius = 5\r\n        for (let i = 0; i < 100; i++) {\r\n            this.randomBallSpawner(radius);\r\n        }\r\n    }\r\n    controlBall() {\r\n        let d = new Date();\r\n        let n = d.getTime();\r\n        this.currentBall.radius = 5 + Math.abs(Math.sin(n / 1000)) * 30;\r\n        this.currentBall.mass = this.currentBall.radius / 10;\r\n        this.currentBall.circle.radius = this.currentBall.radius;\r\n        this.two.remove(this.line);\r\n        this.line = this.two.makeLine(this.mousePos.x, this.mousePos.y, this.currentBall.position.x, this.currentBall.position.y);\r\n        this.currentBall.velocity.sub(this.currentBall.position, this.mousePos).multiplyScalar(0.05);\r\n    }\r\n    onMouseDown() {\r\n        this.currentBall = new MassBall(this.mousePos.clone(), new Anchor(), 25, this.two);\r\n        this.currentPos = this.mousePos.clone();\r\n        if (this.controlBall)\r\n            this.interval = setInterval(() => this.controlBall(), 10);\r\n    }\r\n    onMouseUp() {\r\n        if (this.currentBall)\r\n            this.massBalls.push(this.currentBall);\r\n        this.two.remove(this.line);\r\n        clearInterval(this.interval);\r\n        this.interval = false;\r\n    }\r\n    changeState(e) {\r\n        if (e.code === \"KeyR\") {\r\n            this.init();\r\n        } else if (e.code === \"KeyG\") {\r\n            if (this.two.frameCount - this.frameCountAtChange > 10) {\r\n                G = G === 0 ? 0.1 : 0;\r\n                this.gravityIndicator.value = G === 0 ? \"Gravity OFF\" : \"Gravity ON\";\r\n                this.frameCountAtChange = this.two.frameCount;\r\n            }\r\n        } else if (e.code === \"KeyQ\") {\r\n            if (this.two.frameCount - this.frameCountAtChange > 10) {\r\n                this.simulateAtoms();\r\n                this.frameCountAtChange = this.two.frameCount;\r\n            }\r\n        } else if (e.code === \"KeyS\") {\r\n            for (let index = 0; index < 1000; index++) {\r\n                this.update();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ElascticCollisions;","import PerlinNoise from '../projects/PerlinNoise';\r\nimport OrbitSim from '../projects/OrbitSim';\r\nimport Snake from '../projects/Snake'\r\nimport Sort from '../projects/Sort.js';\r\nimport PathFinder from '../projects/PathFinder.js';\r\nimport RayCasting from '../projects/RayCasting.js';\r\nimport DoublePendulum from '../projects/DoublePendulum';\r\nimport ElascticCollisions from '../projects/ElasticCollisions';\r\n\r\n\r\nclass Project {\r\n    constructor(project, title, description, tips, keys){\r\n        this.project = project;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.tips = {\r\n            tips: tips,\r\n        }\r\n        Object.keys(keys).forEach( key => this.tips[key] = keys[key]);\r\n    }\r\n}\r\n\r\nconst projects = [\r\n    {\r\n        project: OrbitSim,\r\n        title: \"Orbit Simulation\",\r\n        description: \"This is a gravity simulator where you can spawn planets and make them orbit the sun by setting their initial velocity and direction.\",\r\n        tips: {\r\n            tips: \"Press, hold and drag the mouse to spawn a planet, try to make it orbit the sun.\",\r\n        }\r\n    },\r\n    {\r\n        project: ElascticCollisions,\r\n        title: \"Elastic Collisions\",\r\n        description: \"This is a simulation of Elastic Collisions where you can see how balls interact with each other.\",\r\n        tips: {\r\n            tips: \"Press, hold and drag the mouse to spawn a mass ball and control its velocity, be aware don't time travel if spawned many balls (it's heavy on the cpu).\",\r\n            \"Q\": \"Press Q (A for Azerty Keybords) for gaz simulation.\",\r\n            \"R\": \"Press R to reset the simulation and empty the chamber.\",\r\n            \"G\": \"Press G to toggle Gravity On/Off.\",\r\n            \"S\": \"Press and hold S for time travel.\",\r\n        }\r\n    },\r\n    {\r\n        project: Snake,\r\n        title: \"Snake\",\r\n        description: \"This is the basic snake game where you can feed your snake so that it grows and rizes your score.\",\r\n        tips: {\r\n            tips: \"use (W, A, S, D) or Arrows for controlling the snake, try to get the maximum score without hitting the walls.\",\r\n            \"E\": \"Press E to make the snake grow (Don't cheat, play the game !!).\",\r\n        }\r\n    },\r\n    {\r\n        project: DoublePendulum,\r\n        title: \"Double Pendulum\",\r\n        description: \"If you like physics like me, you must've heard about the double pendulum, which is basically two balls attached to each other by two lines and let the gravity do its thing.\",\r\n        tips: {\r\n            tips: \"Press, hold and drag the pendulum to control its initial state.\",\r\n        }\r\n    },\r\n    {\r\n        project: PerlinNoise,\r\n        title: \"Perlin Noise\",\r\n        description: \"This is an animation that showcases how smooth is the perlin noise. It's not just random values, it generates randomly close values\",\r\n        tips: {\r\n            tips: \"Just enjoy the animation.\",\r\n        }\r\n    },\r\n    {\r\n        project: Sort,\r\n        title: \"Sorting Visualizer\",\r\n        description: \"This program showcases different sorting algorithms. Basically it tries to sort the lines from the shortest to the longest\",\r\n        tips: {\r\n            tips: \"Shuffle the way you like, choose and algorithm and watch it do its thing, if you get too bored hold S to make it go boom boom\",\r\n            \"R\": \"Press R to shuffle\",\r\n            \"D\": \"Press D to change the suffling method (Perlin Noise/Random)\",\r\n            \"A\": \"Press A (Q for Azerty Keyboards) to choose QuickSort algorithm\",\r\n            \"B\": \"Press B to toggle Bubble Sort\",\r\n            \"I\": \"Press I to toggle Insertion Sort\",\r\n            \"S\": \"Press and hold S for time travel.\",\r\n        }\r\n    },\r\n    {\r\n        project: PathFinder,\r\n        title: \"Path Finder & Maze Generator\",\r\n        description: \"This program showcases how the Greedy Best First Search works in Finding paths to any location on the grid, it also shows two different ways for generating random mazes, the first uses the recursive division algorithm and the second uses Depth First Search algorithm\",\r\n        tips: {\r\n            tips: \"Generate a maze and set the start location and the final one, and start the path finding process, or you can draw your own obstacles using your mouse. Be creative and have fun!\",\r\n            \"G\": \"Press G for generating a maze using the Depth First Search algorithm.\",\r\n            \"Q\": \"Press Q(A for Azerty Keyboards) for generating a maze using the recusive division algorithm.\",\r\n            \"R\": \"Press R to empty the grid\",\r\n            \"D\": \"Press D to toggle Drawing\",\r\n            \"E\": \"Press E to toggle Erasing\",\r\n            \"P\": \"Pres P to generate a map using Perlin Noise\",\r\n            \"S\": \"Press S to start the Path Finding process.\"\r\n        }\r\n    },\r\n    {\r\n        project: RayCasting,\r\n        title: \"Ray Casting\",\r\n        description: \"This is a program that simulates how light rays interact with obstacles.\",\r\n        tips: {\r\n            tips: \"Use your mouse to move the light source.\",\r\n            \"R\": \"Press R to shuffle the obstacles.\",\r\n        }\r\n    },\r\n    \r\n]\r\nexport default projects","import React from \"react\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport projects from '../data/projects';\r\n\r\nclass ProjectsHandler extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cardsStates: Array(projects.length).fill({\r\n              maximized: false,\r\n              width: 420,\r\n              height: 260,\r\n              cssClass: \"sim-div\",\r\n              gameInfoStyle: {display: \"none\"},\r\n            }),\r\n          }\r\n    }\r\n    handleMaximize(i){\r\n        this.setState(\r\n            {cardsStates: Array(projects.length).fill(0).map((value, index) => index === i && ! this.state.cardsStates[i].maximized ? \r\n              {\r\n                maximized: true,\r\n                width: Math.floor(window.innerWidth * 0.64 / 20) * 20,\r\n                height: Math.floor(window.innerWidth * 0.64 * 9 / 16 / 20) * 20,\r\n                style: {order: -1},\r\n                gameInfoStyle: {display: \"block\"},\r\n                cssClass: \"sim-div\",\r\n              }:\r\n              {\r\n                maximized: false,\r\n                width: 420,\r\n                height: 260,\r\n                style: {},\r\n                gameInfoStyle: {display: \"none\"},\r\n                cssClass: \"sim-div\",\r\n              })\r\n            }\r\n          );\r\n          window.scrollTo({top: 300, behavior: 'smooth'});\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {projects.map((element, index) =>\r\n                    <ProjectCard\r\n                    onClick={() => this.handleMaximize(index)}\r\n                    state={this.state.cardsStates[index]}\r\n                    project={element}\r\n                    key={Math.random() * 100_000_000 * Date.now()}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default ProjectsHandler;","import React from 'react';\r\n\r\nclass About extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default About;","import Footer from './components/Footer.js';\nimport React from 'react';\nimport ProjectsHandler from './components/ProjectsHandler.js';\nimport About from './components/About.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 'Home'\n    }\n    this.redirectToAbout = this.redirectToAbout.bind(this);\n    this.redirectToHome = this.redirectToHome.bind(this);\n  }\n  redirectToHome(){\n    this.setState({\n      page: 'Home'\n    });\n  }\n  redirectToAbout(){\n    this.setState({\n      page: 'About'\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Footer\n          title={this.state.page === 'Home'? 'Summer Projects': 'Resume'}\n          home={this.redirectToHome}\n          about={this.redirectToAbout}\n        />\n        {this.state.page === 'Home'? <ProjectsHandler />: <About/>}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nwindow.addEventListener(\"keydown\", function (e) {\n  if ([\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.code) > -1) {\n    e.preventDefault();\n  }\n}, false);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}